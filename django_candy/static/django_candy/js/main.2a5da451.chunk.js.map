{"version":3,"sources":["api.js","utils.js","components/icons.js","components/navs.js","components/headers.js","components/forms.js","components/table.js","pages/errors.js","pages/model.js","pages/app.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_API_URL","API","window","candy","base_api_url","name","this","endpoint","data","queryString","Promise","resolve","reject","axios","post","then","response","catch","error","id","delete","patch","undefined","get","capitalize","string","charAt","toUpperCase","substr","toLowerCase","joinPaths","_paths","i","length","path","endsWith","startsWith","push","join","CACHED_REGEXP","reverse","to","args","toPath","compile","ReverseLink","props","children","Icon","className","Nav","toggleNav","e","setState","open","state","document","body","classList","toggle","handleLinkClick","prevProps","prevState","instance","remove","transitionName","transitionEnterTimeout","transitionLeaveTimeout","onClick","src","alt","site_name","sideMenu","map","app","verbose_name","app_label","models","model","menu_label","Component","SubNav","Children","child","PageHeader","title","location","pathname","backBtn","list_filters","URLSearchParams","search","matchPath","edit_url","list_url","add_url","hideSubnav","permissions","can_add","onRefresh","FormInput","label","helpText","required","inputRef","helpSpan","errorSpan","ref","RadioCheckInput","type","TableHead","checkboxTh","checked","onChange","onCheckChange","disabled","isCheckable","thWidths","th","index","width","thCls","hasActions","TableRow","checkboxTd","flash","Table","getTableRowURI","tableRowURI","encodeURIComponent","renderForMobile","tableRowActions","colCls","tableColCls","cards","row","cols","j","tableCols","colKey","tableTh","val","colClass","actionsCol","headChecked","rowsChecked","handleHeadCheck","bind","handleRowCheck","checkedIds","target","item","tableCheckCallback","rowIndex","indexOf","splice","_id","head","isMobile","innerWidth","tableCheckable","tableThWidths","flashRows","rows","actionsTd","includes","Page404","ModelPageGroup","match","url","params","model_param","initData","apps","hasOwnProperty","render","verbose_name_plural","refreshPage","exact","key","AddPage","EditPage","ListPage","api_endpoint","getList","err","console","log","snapshot","results","list_display","list_display_labels","AppPage","Object","keys","HomePage","_App","getInitData","loading","errorMsg","links","model_label","admin_url","side_menu","topMenu","top_menu","App","withRouter","AppExport","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"+HAEWA,E,0GAwBUC,GAhBjBD,EAAeE,OAAOC,MAAMC,cAAgB,iB,WAiB5C,WAAYC,GAAO,oBACfC,KAAKC,SAAWP,EAAeK,EAAO,I,yDAG7BG,EAAMC,GAAc,IAAD,OAW5B,OAVc,IAAIC,SAAQ,SAACC,EAASC,GAChCC,IAAMC,KAAK,EAAKP,SAAW,IAAME,EAAaD,GAC7CO,MAAK,SAACC,GACHL,EAAQK,MAEXC,OAAM,SAACC,GACJN,EAAOM,W,mCAONC,EAAIV,GACb,OAAOI,IAAMO,OAAOd,KAAKC,SAAWY,EAAK,KAAOV,K,mCAGvCU,EAAIX,EAAMC,GACnB,OAAOI,IAAMQ,MAAMf,KAAKC,SAAWY,EAAK,KAAOV,EAAaD,K,8BAGxDC,GAIJ,YAHoBa,IAAhBb,IACAA,EAAc,IAEXI,IAAMU,IAAIjB,KAAKC,SAAW,IAAME,K,6BAGpCU,EAAIV,GAAc,IAAD,OAcpB,YAboBa,IAAhBb,IACAA,EAAc,IAEJ,IAAIC,SAAQ,SAACC,EAASC,GAChCC,IAAMU,IAAI,EAAKhB,SAAWY,EAAK,KAAOV,GACrCM,MAAK,SAACC,GACHL,EAAQK,MAEXC,OAAM,SAACC,GACJN,EAAOM,a,sBChEhB,SAASM,EAAWC,GACvB,OAAKA,EAGEA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,OAAO,GAAGC,cAF9C,GAMR,SAASC,IAEZ,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAI,UAAMC,OAAQD,IAAK,CACnC,IAAIE,EAAaF,EAAT,qBAASA,OAAT,YAASA,GAEbE,EAAKD,OAAS,GACXC,EAAKC,SAAS,OACbD,EAAOA,EAAKN,OAAO,EAAGM,EAAKD,OAAS,IAGxCD,EAAI,GACAE,EAAKE,WAAW,OAChBF,EAAOA,EAAKN,OAAO,EAAGM,EAAKD,SAGvB,KAARC,IACAA,EAAO,IAEXH,EAAOM,KAAKH,GAGhB,IAAIA,EAAOH,EAAOO,KAAK,KAMvB,OAHKJ,EAAKC,SAAS,OACfD,GAAQ,KAELA,EAIX,IAAIK,EAAgB,GAEb,SAASC,EAAQC,EAAIC,GACxB,IAAIC,EAASJ,EAAcE,GAO3B,MALsB,qBAAXE,IACPA,EAASC,YAAQH,GACjBF,EAAcE,GAAME,GAGjBA,EAAOD,GAIX,SAASG,EAAT,GAAwC,IAAlBH,EAAiB,EAAjBA,KAASI,EAAQ,wBAG1C,OAFAA,EAAML,GAAKD,EAAQM,EAAML,GAAIC,GAEtB,cAAC,IAAD,2BAAUI,GAAV,aAAkBA,EAAMC,YC9DpB,SAASC,EAAKF,GACzB,IAAIG,EAAY,SAAWH,EAAMzC,KAKjC,OAHIyC,EAAMG,YACNA,EAAYA,EAAY,IAAMH,EAAMG,WAEjC,mBAAGA,UAAWA,I,YCCZC,EAAb,kDACI,WAAYJ,GAAQ,IAAD,8BACf,cAAMA,IAkBVK,UAAY,SAACC,GACT,EAAKC,SAAS,CAACC,MAAO,EAAKC,MAAMD,OACjCE,SAASC,KAAKC,UAAUC,OAAO,aArBhB,EAwBnBC,gBAAkB,SAACR,GACX,EAAKG,MAAMD,MACX,EAAKH,aAvBT,EAAKI,MAAQ,CACTD,MAAM,GAJK,EADvB,+DASuBO,EAAWC,GACtBxD,KAAKwC,MAAMiB,WAAaF,EAAUE,UAAYzD,KAAKiD,MAAMD,OACzDhD,KAAK+C,SAAS,CAACC,MAAM,IACrBE,SAASC,KAAKC,UAAUM,OAAO,eAZ3C,6CAiBQR,SAASC,KAAKC,UAAUM,OAAO,cAjBvC,+BAgCQ,OACI,gCACI,cAAC,qBAAD,CACIC,eAAe,UACfC,uBAAwB,IACxBC,uBAAwB,IAH5B,SAKM7D,KAAKiD,MAAMD,MAAQ,qBAAKL,UAAU,UAAwBmB,QAAS9D,KAAKsD,iBAAxB,YAAoD,OAG1G,sBAAKX,UAAU,cAAf,UACI,eAAC,IAAD,CAAMR,GAAG,IAAIQ,UAAU,OAAvB,UACI,qBAAKoB,IAA8B,oCAAsCC,IAAKpE,OAAOC,MAAMoE,UAAWtB,UAAU,sBAChH,qBAAKoB,IAA8B,2CAA6CC,IAAKpE,OAAOC,MAAMoE,UAAWtB,UAAU,yBAH/H,IAIa,IACT,wBAAQA,UAAU,uBAAuBmB,QAAS9D,KAAK6C,UAAvD,SACK7C,KAAKiD,MAAMD,KAAO,cAACN,EAAD,CAAM3C,KAAK,MAAS,cAAC2C,EAAD,CAAM3C,KAAK,cAI1D,qBAAK4C,UAAW3C,KAAKiD,MAAMD,KAAO,oBAAsB,eAAgBnC,GAAIb,KAAKwC,MAAM3B,GAAvF,SACI,6BACKb,KAAKwC,MAAM0B,SAASC,KAAI,SAACC,GAatB,MAAO,CAZU,6BAAwB,sBAAMzB,UAAU,cAAhB,SAA+BzB,EAAWkD,EAAIC,iBAA7DD,EAAIE,WAEbF,EAAIG,OAAOJ,KAAI,SAACK,GAC7B,OACI,6BACI,cAAC,IAAD,CAASrC,GAAIX,EAAU,IAAKgD,EAAMF,UAAWE,EAAMzE,KAAKwB,eAAxD,SACKL,EAAWsD,EAAMC,eAFjBD,EAAMF,UAAY,IAAME,EAAMzE,wBA3D3E,GAAyB2E,aA6ElB,SAASC,EAAOnC,GACnB,OACI,qBAAKG,UAAW,cAAhB,SACI,6BACKiC,WAAST,IAAI3B,EAAMC,UAAU,SAACoC,GAAD,OAAWA,EAAQ,6BAAKA,IAAc,YClFrE,SAASC,EAAWtC,GAU/B,IAAIuC,EAAQvC,EAAMuC,MACdnD,EAAOY,EAAMwC,SAASC,SACtBC,EAAU,KAEVC,EAAe,IAAIC,gBAAgB5C,EAAMwC,SAASK,QAAQpE,IAAI,kBAAoB,GActF,OAZIqE,YAAU1D,EAAMY,EAAM+C,WACtBR,GAAgB,UAChBG,EAAU,eAAC,IAAD,CAAM/C,GAAIK,EAAMgD,SAAWL,EAA3B,UAAyC,cAACzC,EAAD,CAAM3C,KAAK,eAApD,gBAELuF,YAAU1D,EAAMY,EAAMiD,WAC3BV,GAAgB,aAChBG,EAAU,eAAC,IAAD,CAAM/C,GAAIK,EAAMgD,SAAWL,EAA3B,UAAyC,cAACzC,EAAD,CAAM3C,KAAK,eAApD,gBAGdmD,SAAS6B,MAAQvC,EAAMuC,MAAQ,MAAOnF,OAAOC,MAAMoE,UAI/C,qBAAKtB,UAAU,SAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,6BAAKoC,MAET,qBAAKpC,UAAU,kBAAf,UACMH,EAAMkD,YACJ,eAACf,EAAD,WACKO,EACA1C,EAAMmD,YAAYC,QACf,eAAC,IAAD,CAAMjD,UAAU,SAASR,GAAIK,EAAMiD,QAAnC,UAA4C,cAAC/C,EAAD,CAAM3C,KAAK,SAAvD,cACE,KAEN,yBAAQ4C,UAAU,MAAMmB,QAAStB,EAAMqD,UAAvC,UAAkD,cAACnD,EAAD,CAAM3C,KAAK,oBAA7D,wB,YC5CrB,SAAS+F,EAAT,GAA4E,IAAxDC,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,SAAUpF,EAAsC,EAAtCA,MAAOqF,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,SAAa1D,EAAQ,kEAC1E2D,EAAW,GACXH,IACAG,EAAW,sBAAMxD,UAAU,YAAhB,SAA6BqD,KAE5C,IAAII,EAAY,GAUhB,OATIxF,IACAwF,EAAY,sBAAMzD,UAAU,YAAhB,SAA6B/B,KAExC4B,EAAMG,YACPH,EAAMG,UAAY,gBAElBuD,IACA1D,EAAM6D,IAAMH,GAGZ,sBAAKvD,UAAW/B,EAAQ,mBAAqB,aAA7C,UACKmF,EAAQ,kCAAQA,EAAR,IAAgBE,GAAY,sBAAMtD,UAAU,iBAAhB,kBAAqD,KAC1F,qCAAWH,IACV4D,EACAD,KAqCqBzB,YA4D3B,SAAS4B,EAAT,GAA6C,IAAnBP,EAAkB,EAAlBA,MAAUvD,EAAQ,yBAC/C,OACI,qBAAKG,UAAW,yBAA2BH,EAAM+D,KAAjD,SACI,wBAAO5D,UAAU,uBAAjB,UACKoD,EACD,mCACIpD,UAAU,wBACNH,IAER,qBAAKG,UAAU,kCAOK+B,YAwKLA,YC3S/B,SAAS8B,EAAUhE,GACf,IAAIiE,EACI,oBAAI9D,UAAU,eAAd,SACI,cAAC2D,EAAD,CACIC,KAAK,WACLG,QAASlE,EAAMkE,QACfC,SAAUnE,EAAMoE,cAChBC,UAAWrE,EAAMsE,gBAI7BC,EAAWvE,EAAMuE,UAAY,GAEjC,OACI,gCACI,+BACKN,EACAjE,EAAMwE,GAAG7C,KAAI,SAAC6C,EAAIC,GACf,IAAIC,EAAQH,EAASE,GACjBE,EAAQD,EAAQ,SAAWA,EAAQ,KACvC,OAAO,oBAAavE,UAAWwE,EAAxB,SAAgCH,GAAvBA,MAGnBxE,EAAM4E,WACH,oBAAoBzE,UAAWoE,EAASpF,OAASa,EAAMwE,GAAGrF,QAAU,SAAWoF,EAASvE,EAAMwE,GAAGrF,QAAjG,oBAAS,WACP,UAQtB,SAAS0F,EAAU7E,GACf,IAAI8E,EACI,oBAAI3E,UAAU,eAAd,SACI,cAAC2D,EAAD,CACIC,KAAK,WACLG,QAASlE,EAAMkE,QACfC,SAAUnE,EAAMoE,cAChBC,UAAWrE,EAAMsE,gBAIjC,OACI,qBAAInE,UAAWH,EAAM+E,MAAQ,QAAU,KAAvC,UACKD,EACA9E,EAAMC,Y,IAME+E,E,kDACjB,WAAYhF,GAAQ,IAAD,8BACf,cAAMA,IAiDViF,eAAiB,WACb,IAAItH,EAAcP,OAAOoF,SAASK,OAElC,OAAIlF,EAAYwB,OACL,EAAKa,MAAMkF,YAAc,kBAAoBC,mBAAmBxH,GAEpE,EAAKqC,MAAMkF,aAxDH,EA2DnBE,gBAAkB,WAEd,IAAIR,IAAa,EAAK5E,MAAMqF,gBACxBC,EAAS,EAAKtF,MAAMuF,aAAe,GAEnCC,EAAQ,EAAKxF,MAAMtC,KAAKiE,KAAI,SAAC8D,GAI7B,IAFA,IAAIC,EAAO,GAEFC,EAAI,EAAGA,EAAI,EAAK3F,MAAM4F,UAAUzG,OAAQwG,IAAK,CAElD,IAAIE,EAAS,OAASF,EAAI,IAAMF,EAAIpH,GAEhCkF,EAAQ,EAAKvD,MAAM8F,QAAQH,GAE3BI,EAAMN,EAAI,EAAKzF,MAAM4F,UAAUD,IAEhB,mBAARI,IACPA,EAAMA,EAAM,cAAC7F,EAAD,CAAM3C,KAAK,eAAe4C,UAAU,gCAAmC,cAACD,EAAD,CAAM3C,KAAK,WAAW4C,UAAU,+BAGvH,IAAI6F,EAAWV,EAAOK,GAEjBK,IAEGA,EADM,IAANL,EACW,SAEA,SAGnBD,EAAKnG,KACD,sBAAkBY,UAAW6F,EAA7B,UACI,sBAAM7F,UAAU,YAAhB,SAA6BoD,IAC7B,sBAAMpD,UAAiB,IAANwF,EAAU,aAAe,GAA1C,SAA+CI,MAFzCF,IAQlB,IAAII,EAAa,KAIjB,OAHIrB,IACAqB,EAAa,qBAAK9F,UAAU,qBAAf,SAAqC,EAAKH,MAAMqF,gBAAgBI,MAE7E,EAAKzF,MAAMkF,YAEP,8BACI,eAACnF,EAAD,CACIJ,GAAI,EAAKsF,iBACTrF,KAAM,CAACvB,GAAIoH,EAAIpH,IACf8B,UAAU,kBAHd,UAKI,qBAAKA,UAAU,MAAf,SAAsBuF,IACtB,qBAAKvF,UAAU,QAAf,SAAuB,cAACD,EAAD,CAAM3C,KAAK,wBAPhCkI,EAAIpH,IAad,8BACI,qBAAK8B,UAAU,kBAAf,SACI,sBAAKA,UAAU,MAAf,UAAsBuF,EAAMO,QAF1BR,EAAIpH,OAS1B,OACI,8BACKmH,KA7HT,EAAK/E,MAAQ,CACTyF,aAAa,EACbC,YAAa,IAGjB,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBATP,E,4DAYH/F,GACZ,IAAIiG,EAAa,IACQ,IAArBjG,EAAEkG,OAAOtC,UACTqC,EAAa/I,KAAKwC,MAAMtC,KAAKiE,KAAI,SAAC8E,GAAD,OAAUA,EAAKpI,OAEpDb,KAAKwC,MAAM0G,mBAAmBH,GAE9B/I,KAAK+C,SAAS,CAAC2F,YAAa5F,EAAEkG,OAAOtC,QAASiC,YAAa,O,qCAIhD7F,EAAGjC,GACd,IAAI8H,EAAc3I,KAAKiD,MAAM0F,YAE7B,GAAI7F,EAAEkG,OAAOtC,QACTiC,EAAY5G,KAAKlB,GACjBb,KAAK+C,SAAS,CAAC4F,YAAaA,QAE3B,CACD,IAAIQ,EAAWR,EAAYS,QAAQvI,GACnC,GAAIsI,GAAY,EACZR,EAAYU,OAAOF,EAAU,GAC7BnJ,KAAK+C,SAAS,CAAC4F,YAAaA,SACzB,GAAI3I,KAAKiD,MAAMyF,YAAa,CAC/B,IAAK,IAAIhH,EAAI,EAAGA,EAAI1B,KAAKwC,MAAMtC,KAAKyB,OAAQD,IAAK,CAC7C,IAAI4H,EAAMtJ,KAAKwC,MAAMtC,KAAKwB,GAAGb,GACzByI,IAAQzI,GACR8H,EAAY5G,KAAKuH,GAGzBtJ,KAAK+C,SAAS,CAAC4F,YAAaA,EAAaD,aAAa,KAK9D1I,KAAKwC,MAAM0G,mBAAmBP,K,+BAsFxB,IAcFY,EAdC,OACCC,EAAW5J,OAAO6J,WAAa,IAErC,GAAIzJ,KAAKwC,MAAMtC,KAAKyB,OAAS,EACzB,OACI,qBAAKgB,UAAU,OAAf,SACI,gDAKZ,GAAI6G,EACA,OAAOxJ,KAAK4H,kBAGhB,IAAIR,IAAapH,KAAKwC,MAAMqF,gBACxBf,IAAc9G,KAAKwC,MAAMkH,eACzB1J,KAAKwC,MAAM8F,UACXiB,EAAO,cAAC/C,EAAD,CACKQ,GAAIhH,KAAKwC,MAAM8F,QACf5B,QAAS1G,KAAKiD,MAAMyF,YACpB9B,cAAe5G,KAAK4I,gBACpBxB,WAAYA,EACZN,YAAaA,EACbC,SAAU/G,KAAKwC,MAAMmH,iBAMrC,IAHA,IAAIC,EAAY5J,KAAKwC,MAAMoH,WAAa,GACpCC,EAAO,GA5BN,WA8BInI,GAML,IAJA,IAAIuG,EAAM,EAAKzF,MAAMtC,KAAKwB,GAEtBwG,EAAO,GAEFC,EAAI,EAAGA,EAAI,EAAK3F,MAAM4F,UAAUzG,OAAQwG,IAAK,CAElD,IAAIE,EAAS,OAASF,EAAI,IAAMF,EAAIpH,GAEpC,GAAI,EAAK2B,MAAMkF,aAAqB,IAANS,EAC1BD,EAAKnG,KACD,6BACI,cAACQ,EAAD,CAAaJ,GAAI,EAAKsF,iBAAkBrF,KAAM,CAACvB,GAAIoH,EAAIpH,IAAvD,SAA6DoH,EAAI,EAAKzF,MAAM4F,UAAUD,OADjFE,QAIZ,CACD,IAAIE,EAAMN,EAAI,EAAKzF,MAAM4F,UAAUD,IAEhB,mBAARI,IACPA,EAAMA,EAAM,cAAC7F,EAAD,CAAM3C,KAAK,eAAe4C,UAAU,gCAAmC,cAACD,EAAD,CAAM3C,KAAK,WAAW4C,UAAU,+BAGvHuF,EAAKnG,KAAK,6BAAkBwG,GAATF,KAK3B,IAAIyB,EAAY,KACZ1C,IACA0C,EAAY,6BAAK,EAAKtH,MAAMqF,gBAAgBI,MAEhD4B,EAAK9H,KACD,eAACsF,EAAD,CAEIX,QAAS,EAAKzD,MAAMyF,aAAe,EAAKzF,MAAM0F,YAAYS,QAAQnB,EAAIpH,KAAO,EAC7E+F,cAAe,SAAC9D,GAAD,OAAO,EAAKgG,eAAehG,EAAGmF,EAAIpH,KACjDiG,YAAaA,EACbS,MAAOqC,EAAUG,SAASrI,GAL9B,UAOKwG,EACA4B,IAPI7B,EAAIpH,MAlCZa,EAAI,EAAGA,EAAI1B,KAAKwC,MAAMtC,KAAKyB,OAAQD,IAAM,EAAzCA,GA6CT,OACI,kCACK6H,EACD,gCACKM,W,GArNcnF,aCzD5B,SAASsF,EAAQxH,GACpB,OACI,sBAAKG,UAAU,OAAf,UACI,cAACmC,EAAD,CAAYY,YAAY,EAAMX,MAAM,qBAAqBC,SAAUxC,EAAMwC,WACzE,qBAAKrC,UAAU,UAAf,SACI,mBAAGA,UAAU,OAAb,oD,ICCKsH,E,kDACjB,WAAYzH,GAAQ,IAAD,8BACf,cAAMA,IAEDgD,SAAWhE,EAAU,EAAKgB,MAAM0H,MAAMC,IAAK,KAChD,EAAK1E,QAAUjE,EAAU,EAAKgB,MAAM0H,MAAMC,IAAK,SAC/C,EAAK5E,SAAW/D,EAAU,EAAKgB,MAAM0H,MAAMC,IAAK,cALjC,E,4GAYA5G,EAAWC,M,+BAMpB,IAAD,OACDmC,EAAc,CAACC,SAAS,GAExBtB,EAAYtE,KAAKwC,MAAM0H,MAAME,OAAO9F,UACpC+F,EAAcrK,KAAKwC,MAAM0H,MAAME,OAAO5F,MAE1C,IAAKxE,KAAKwC,MAAM8H,SAASC,KAAKC,eAAelG,GACzC,OAAO,cAAC0F,EAAD,CAAShF,SAAUhF,KAAKwC,MAAMwC,WAEzC,IAAMZ,EAAMpE,KAAKwC,MAAM8H,SAASC,KAAKjG,GAErC,IAAKF,EAAIG,OAAOiG,eAAeH,GAC3B,OAAO,cAACL,EAAD,CAAShF,SAAUhF,KAAKwC,MAAMwC,WAGzC,IAAMR,EAAQJ,EAAIG,OAAO8F,GAGzB,OACI,sBAAK1H,UAAU,OAAf,UACI,cAAC,IAAD,CAAO8H,OAAQ,SAACjI,GAAD,OAAW,cAACsC,EAAD,2BAAgBtC,GAAhB,IAClBuC,MAAO7D,EAAWsD,EAAMkG,qBACxBlF,SAAU,EAAKA,SACfD,SAAU,EAAKA,SACfE,QAAS,EAAKA,QACdI,UAAW,EAAK8E,YAChBhF,YAAaA,QAIrB,eAAC,IAAD,WACI,cAAC,IAAD,CACI/D,KAAM5B,KAAKwC,MAAM0H,MAAMtI,KACvBgJ,OAAK,EACLH,OAAQ,SAACjI,GAAD,OAAW,wBAAC,EAAD,2BAAcA,GAAd,IAAqBgC,MAAOA,EAAOqG,IAAKrG,EAAMvE,eAErE,cAAC,IAAD,CACI2B,KAAMJ,EAAUxB,KAAKwC,MAAM0H,MAAMtI,KAAM,SACvCgJ,OAAK,EACLH,OAAQ,SAACjI,GAAD,OAAW,cAACsI,EAAD,2BAAatI,GAAb,IAAoBgC,MAAOA,QAElD,cAAC,IAAD,CACI5C,KAAMJ,EAAUxB,KAAKwC,MAAM0H,MAAMtI,KAAM,oBACvCgJ,OAAK,EACLH,OAAQ,SAACjI,GAAD,OAAW,cAACuI,EAAD,2BAAcvI,GAAd,IAAqBgC,MAAOA,QAEnD,eAAC,IAAD,WACI,oDACA,sE,GAnEoBE,aA2E/BsG,EAAb,kDACI,WAAYxI,GAAQ,IAAD,8BACf,cAAMA,IAEDS,MAAQ,CACT/C,KAAM,MAGV,EAAK+K,aAAe,EAAKzI,MAAMgC,MAAMvE,SAPtB,EADvB,gEAWyB,IAAD,OACN,IAAIN,EAAIK,KAAKiL,cAEnBC,UACHzK,MAAK,SAACC,GAAD,OAAc,EAAKqC,SAAS,CAAC7C,KAAMQ,EAASR,UACjDS,OAAM,SAACwK,GAAD,OAASC,QAAQC,IAAIF,QAhBpC,yCAmBuB5H,EAAWC,EAAW8H,MAnB7C,+BAyBQ,OAAKtL,KAAKiD,MAAM/C,KAKZ,qBAAKyC,UAAU,UAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,cAAf,SACI,cAAC,EAAD,CACIzC,KAAMF,KAAKiD,MAAM/C,KAAKqL,QACtBnD,UAAWpI,KAAKwC,MAAMgC,MAAMgH,aAC5BlD,QAAStI,KAAKwC,MAAMgC,MAAMiH,oBAC1B1D,YAAa,GACb4B,cAAe,GACfjC,YAAa,YACbG,gBAAiB,KACjB6B,gBAAgB,EAChBR,mBAAoB,kBAAM,cAhBnC,qBAAKvG,UAAU,UAAf,4BA1BnB,GAA8B+B,aAoDvB,SAASoG,EAAQtI,GACpB,OACI,0CAKD,SAASuI,EAASvI,GACrB,OACI,2C,ICzIakJ,E,kDACjB,WAAYlJ,GAAQ,uCACVA,G,qDAGA,IAAD,OACD8B,EAAYtE,KAAKwC,MAAM0H,MAAME,OAAO9F,UAExC,IAAKtE,KAAKwC,MAAM8H,SAASC,KAAKC,eAAelG,GACzC,OAAO,cAAC0F,EAAD,CAAShF,SAAUhF,KAAKwC,MAAMwC,WAGzC,IAAIZ,EAAMpE,KAAKwC,MAAM8H,SAASC,KAAKjG,GAEnC,OACI,sBAAK3B,UAAU,OAAf,UACI,cAACmC,EAAD,CAAYY,YAAY,EAAMX,MAAOX,EAAIC,aAAcW,SAAUhF,KAAKwC,MAAMwC,WAE5E,qBAAKrC,UAAU,UAAf,SACKgJ,OAAOC,KAAKxH,EAAIG,QAAQJ,KAAI,SAAC0G,GAC1B,IAAIrG,EAAQJ,EAAIG,OAAOsG,GAEvB,OAAO,8BAAwC,cAAC,IAAD,CAAM1I,GAAIX,EAAU,EAAKgB,MAAM0H,MAAMC,IAAK3F,EAAMzE,MAAhD,SAAwDmB,EAAWsD,EAAMkG,wBAAvGpG,EAAY,IAAME,EAAMzE,kB,GAtB5B2E,aCJtB,SAASmH,EAASrJ,GAC7B,OACI,sBAAKG,UAAU,OAAf,UACI,cAACmC,EAAD,CACIC,MAAM,OACNW,YAAY,EACZV,SAAUxC,EAAMwC,WAExB,qBAAKrC,UAAU,e,UCFjBmJ,E,kDACF,WAAYtJ,GAAQ,IAAD,8BACf,cAAMA,IAiBVuJ,YAAc,WACA,IAAIpM,EAAI,QAEduL,UACHzK,MAAK,SAACC,GACH,EAAKqC,SAAS,CACViJ,SAAS,EACT1B,SAAU5J,EAASR,UAG1BS,OAAM,SAACwK,GACJC,QAAQC,IAAIF,GACZ,EAAKpI,SAAS,CACViJ,SAAS,EACTC,SAAU,6BA7BlB,EAAKhJ,MAAQ,CACT+I,SAAS,EACT1B,SAAU,KACV2B,SAAU,MAITrM,OAAO4K,eAAe,WACvB5K,OAAOC,MAAQ,CAACoE,UAAW,UAXhB,E,gEAefjE,KAAK+L,gB,+BAsBC,IAAD,OACL,GAAI/L,KAAKiD,MAAM+I,QACX,OAAQ,6CAGZ,GAAIhM,KAAKiD,MAAMgJ,SACX,OAAO,8BAAMjM,KAAKiD,MAAMgJ,WAG5B,IAAIC,EAAQ,GAEZ,IAAK,IAAI5H,KAAatE,KAAKiD,MAAMqH,SAASC,KAAM,CAC5C,IAAInG,EAAMpE,KAAKiD,MAAMqH,SAASC,KAAKjG,GAEnC,IAAK,IAAI6H,KAAe/H,EAAIG,OAAQ,CAChC,IAAIC,EAAQJ,EAAIG,OAAO4H,GAEnBC,EAAY5K,EAAUgD,EAAMF,UAAWE,EAAMzE,KAAKwB,eAEtD2K,EAAMnK,KACF,cAAC,IAAD,CAAMI,GAAIiK,EAAV,SAAsBlL,EAAWsD,EAAMH,kBAKnD,OACI,sBAAK1B,UAAU,kBAAf,UACI,cAAC,EAAD,CAAKuB,SAAUlE,KAAKiD,MAAMqH,SAAS+B,UAAWC,QAAStM,KAAKiD,MAAMqH,SAASiC,WACvE,qBAAK5J,UAAU,MAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOf,KAAK,IAAIgJ,OAAK,EACjBH,OACI,SAACjI,GAAD,OAAW,cAACqJ,EAAD,eAAcrJ,OAGjC,cAAC,IAAD,CAAOZ,KAAK,eAAegJ,OAAK,EAC5BH,OACI,SAACjI,GAAD,OAAW,cAAC,EAAD,2BAAaA,GAAb,IAAoB8H,SAAU,EAAKrH,MAAMqH,eAG5D,cAAC,IAAD,CAAO1I,KAAK,sBACR6I,OACI,SAACjI,GAAD,OAAW,cAAC,EAAD,2BAAoBA,GAApB,IAA2B8H,SAAU,EAAKrH,MAAMqH,6B,GAjFhF5F,aA4Fb8H,EAAMC,YAAWX,GAER,SAASY,EAAT,GAA6B,IAATlK,EAAQ,EAARA,MAC/B,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOZ,KAAK,IACR6I,OAAQ,kBAAM,cAAC,EAAD,eAASjI,OAG3B,sBAAKG,UAAU,SAAf,qBACagK,cC/GzB,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrM,MAAK,YAAkD,IAA/CsM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAAS3C,OACP,cAAC,IAAM4C,WAAP,UACE,cAAC,EAAD,MAEFnK,SAASoK,eAAe,SAM1BV,M","file":"static/js/main.2a5da451.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport var BASE_API_URL;\n\n\n/* We can allow configuring BASE_API_URL from django by setting \na `document.BASE_API_URL` in the index.html and render it from a django view.`\n*/\n\nif (process.env.NODE_ENV === 'production') {\n    BASE_API_URL = window.candy.base_api_url || '/candy/api/v1/';\n} else {\n    BASE_API_URL = 'http://localhost:8000/candy/api/v1/';\n}\n\n\nconst API_ENDPOINTS = {\n    init: BASE_API_URL + 'init/',\n\n    login: BASE_API_URL + 'login/',\n    logout: BASE_API_URL + 'logout/',\n\n    home: BASE_API_URL + 'home/',\n};\n\n\nexport default class API {\n    constructor(name) {\n        this.endpoint = BASE_API_URL + name + '/';\n    }\n\n    createEntity(data, queryString) {\n        let promise = new Promise((resolve, reject) => {\n            axios.post(this.endpoint + '?' + queryString, data)\n            .then((response) => {\n                resolve(response);\n            })\n            .catch((error) => {\n                reject(error);\n            });\n        });\n        \n        return promise;\n    }\n\n    deleteEntity(id, queryString) {\n        return axios.delete(this.endpoint + id + '/?' + queryString);\n    }\n\n    updateEntity(id, data, queryString) {\n        return axios.patch(this.endpoint + id + '/?' + queryString, data);\n    }\n\n    getList(queryString) {\n        if (queryString === undefined)\n            queryString = '';\n\n        return axios.get(this.endpoint + '?' + queryString);\n    }\n\n    getOne(id, queryString) {\n        if (queryString === undefined)\n            queryString = '';\n\n        let promise = new Promise((resolve, reject) => {\n            axios.get(this.endpoint + id + '/?' + queryString)\n            .then((response) => {\n                resolve(response);\n            })\n            .catch((error) => {\n                reject(error);\n            });\n        });\n\n        return promise;\n    }\n}","import React from 'react';\nimport {Link, NavLink} from 'react-router-dom';\nimport {compile} from 'path-to-regexp';\n\n\n\nexport function capitalize(string) {\n    if (!string)\n        return '';\n    \n    return string.charAt(0).toUpperCase() + string.substr(1).toLowerCase();\n}\n\n\nexport function joinPaths(...paths) {\n    let _paths = [];\n    for (let i = 0; i < paths.length; i++) {\n        let path = paths[i];\n\n        if (path.length > 1) {\n            if(path.endsWith('/'))\n                path = path.substr(0, path.length - 1);\n        }\n\n        if (i > 0) {\n            if (path.startsWith('/'))\n                path = path.substr(1, path.length);\n        }\n\n        if (path == '/')\n            path = '';\n\n        _paths.push(path)\n    }\n\n    let path = _paths.join('/');\n\n    // append trailing slash\n    if (!path.endsWith('/'))\n        path += '/';\n\n    return path;\n}\n\n\nvar CACHED_REGEXP = {};\n\nexport function reverse(to, args) {\n    let toPath = CACHED_REGEXP[to];\n\n    if (typeof toPath === 'undefined') {\n        toPath = compile(to);\n        CACHED_REGEXP[to] = toPath;\n    }\n\n    return toPath(args);\n}\n\n\nexport function ReverseLink({args, ...props}) {\n    props.to = reverse(props.to, args);\n\n    return <Link {...props}>{props.children}</Link>;\n}\n\n\nexport function ReverseNavLink({args, ...props}) {\n    props.to = reverse(props.to, args);\n\n    return <NavLink {...props}>{props.children}</NavLink>;\n}\n\n\nexport function requestErrorMsg(error) {\n    let errorType = 'CONNECTION_ERROR';\n\n    if (error.response)\n        errorType = error.response.status;\n\n    switch (errorType) {\n        case 400:\n            return {errorType: errorType, errorMsg: \"Something wen't wrong. Reload the page and try again\"};\n        case 401:\n            return {errorType: errorType, errorMsg: \"You need to log in to perform this action\"};\n        case 403: \n            return {errorType: errorType, errorMsg: \"You don't have permission to add or modify this object\"};\n        case 404: \n            return {errorType: errorType, errorMsg: \"This page or object doesn't exist or has been deleted\"};\n        case 405:\n            return {errorType: errorType, errorMsg: \"This operation is not permitted\"};\n        case 500:\n            return {errorType: errorType, errorMsg: \"500 Server Error. Contact administrator\"};\n        case 'CONNECTION_ERROR':\n            return {errorType: errorType, errorMsg: \"Check your Internet connection\"};\n        default:\n            return {errorType: errorType, errorMsg: \"Something wen't wrong. Try again\"};\n    }\n}","export default function Icon(props) {\n    let className = \"bi bi-\" + props.name;\n\n    if (props.className)\n        className = className + ' ' + props.className;\n\n    return <i className={className}></i>\n}","import React, {Component, Children} from 'react';\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport {Link, NavLink} from 'react-router-dom';\nimport Icon from './icons.js';\nimport {capitalize, joinPaths} from '../utils.js';\n\n\nexport class Nav extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.instance !== prevProps.instance && this.state.open) {\n            this.setState({open: false});\n            document.body.classList.remove('nav-open');\n        }\n    }\n\n    componentWillUnmount() {\n        document.body.classList.remove('nav-open');\n    }\n\n    toggleNav = (e) => {\n        this.setState({open: !this.state.open});\n        document.body.classList.toggle('nav-open');\n    }\n\n    handleLinkClick = (e) => {\n        if (this.state.open) {\n            this.toggleNav();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <CSSTransitionGroup\n                    transitionName=\"overlay\"\n                    transitionEnterTimeout={100}\n                    transitionLeaveTimeout={150}\n                >\n                    {(this.state.open && <div className=\"overlay\" key=\"overlay\" onClick={this.handleLinkClick}></div>) || null}\n                </CSSTransitionGroup>\n\n                <div className=\"nav top-nav\">\n                    <Link to=\"/\" className=\"logo\">\n                        <img src={process.env.PUBLIC_URL + \"/static/django_candy/logo_nav.png\"}  alt={window.candy.site_name} className=\"d-none d-sm-block\" />\n                        <img src={process.env.PUBLIC_URL + \"/static/django_candy/logo_nav_mobile.png\"}  alt={window.candy.site_name} className=\"d-block d-sm-none\" />\n                    </Link> {' '}\n                    <button className=\"toggle-nav d-md-none\" onClick={this.toggleNav}>\n                        {this.state.open ? <Icon name=\"x\" /> : <Icon name=\"list\" />}\n                    </button>\n                </div>\n\n                <div className={this.state.open ? \"nav side-nav open\" : \"nav side-nav\"} id={this.props.id}>\n                    <ul>\n                        {this.props.sideMenu.map((app) => {\n                            let menu_label = <li key={app.app_label}><span className=\"menu-header\">{capitalize(app.verbose_name)}</span></li>;\n\n                            let menu_items = app.models.map((model) => {\n                                return (\n                                    <li key={model.app_label + '.' + model.name}>\n                                        <NavLink to={joinPaths('/', model.app_label, model.name.toLowerCase())}>\n                                            {capitalize(model.menu_label)}\n                                        </NavLink>\n                                    </li>\n                                );\n                            });\n\n                            return [menu_label, menu_items];\n                        })}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport function SubNav(props)  {\n    return (\n        <div className={'nav sub-nav'}>\n            <ul>\n                {Children.map(props.children, (child) => child ? <li>{child}</li> : null)}\n            </ul>\n        </div>\n    );\n}","import React from 'react';\nimport {Link, matchPath} from 'react-router-dom';\nimport Icon from './icons.js';\nimport {SubNav} from './navs.js';\n\n\nexport default function PageHeader(props) {\n    /* \n        Page header component.\n\n        Props:\n            title:      Base title of the page.\n            edit_url:   URL pattern for edit page.\n            add_url:    URL pattern for add page.\n\n    */\n    let title = props.title;\n    let path = props.location.pathname;\n    let backBtn = null;\n\n    let list_filters = new URLSearchParams(props.location.search).get('_list_filters') || '';\n\n    if (matchPath(path, props.edit_url)) {\n        title = title + ' / Edit';\n        backBtn = <Link to={props.list_url + list_filters}><Icon name=\"arrow-left\" /> View All</Link>\n    }\n    else if (matchPath(path, props.add_url)) {\n        title = title + ' / Add New';\n        backBtn = <Link to={props.list_url + list_filters}><Icon name=\"arrow-left\" /> View All</Link>\n    }\n\n    document.title = props.title + ' | '+ window.candy.site_name;\n\n\n    return (\n        <div className=\"header\">\n            <div className=\"row\">\n                <div className=\"col-12 col-md-5\">\n                    <h3>{title}</h3>\n                </div>\n                <div className=\"col-12 col-md-7\">\n                    {!props.hideSubnav && \n                        <SubNav>\n                            {backBtn}\n                            {props.permissions.can_add ? \n                                <Link className=\"active\" to={props.add_url}><Icon name=\"plus\" /> Add New</Link>\n                                : null\n                            }\n                            <button className=\"btn\" onClick={props.onRefresh}><Icon name=\"arrow-clockwise\" /> Refresh</button>\n                        </SubNav>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}","import React, {Component} from 'react';\nimport Loader from './loaders.js';\n\n\nexport function FormInput({label, helpText, error, required, inputRef, ...props}) {\n    let helpSpan = '';\n    if (helpText)\n        helpSpan = <span className=\"help-text\">{helpText}</span>;\n\n    let errorSpan = '';\n    if (error)\n        errorSpan = <span className=\"help-text\">{error}</span>;\n\n    if (!props.className)\n        props.className = 'form-control';\n\n    if (inputRef)\n        props.ref = inputRef;\n\n    return (\n        <div className={error ? \"form-group error\" : \"form-group\"}>\n            {label ? <label>{label} {required && <span className=\"required-label\">*</span>}</label> : null}\n            <input {...props} />\n            {errorSpan}\n            {helpSpan}\n        </div>\n    );\n}\n\n\nexport function FormInputGroup({label, helpText, error, required, append, prepend, ...props}) {\n    let helpSpan = '';\n    if (helpText)\n        helpSpan = <span className=\"help-text\">{helpText}</span>;\n\n    let errorSpan = '';\n    if (error)\n        errorSpan = <span className=\"help-text\">{error}</span>;\n\n    if (!props.className)\n        props.className = 'form-control';\n\n    return (\n         <div className={error ? \"form-group error\" : \"form-group\"}>\n            {label ? <label>{label} {required && <span className=\"required-label\">*</span>}</label> : null}\n            <div className=\"input-group\">\n                {prepend && \n                    <div className=\"input-group-prepend\">{prepend}</div>\n                }\n                <input {...props} />\n                {append && \n                    <div className=\"input-group-append\">{append}</div>\n                }\n            </div>\n            {errorSpan}\n            {helpSpan}\n        </div>\n    );\n}\n\n\nexport class FormTextArea extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!props.inputRef)\n            this.inputRef = React.createRef();\n    }\n\n    handleChange = (e) => {\n        this.updateHeight(e.target);\n\n        if (this.props.onChange)\n            this.props.onChange(e);\n    }\n\n    updateHeight = (el) => {\n        let offset = el.offsetHeight - el.clientHeight;\n        el.style.height = 'auto';\n        el.style.height = (el.scrollHeight + offset) + 'px';\n    }\n\n    componentDidMount() {\n        if (this.props.autoHeight) {\n            if (this.props.inputRef)\n                this.updateHeight(this.props.inputRef.current);\n            else \n                this.updateHeight(this.inputRef.current);\n        }\n    }\n\n    render() {\n        let {error, label, required, helpText, autoHeight, inputRef, ...props} = this.props;\n\n        let helpSpan = '';\n        if (helpText)\n            helpSpan = <span className=\"help-text\">{helpText}</span>;\n\n        let errorSpan = '';\n        if (error)\n            errorSpan = <span className=\"help-text\">{error}</span>;\n\n        if (!this.props.className)\n            props.className = 'form-control';\n\n        if (autoHeight) \n            props.onChange = this.handleChange;\n\n\n        return (\n            <div className={error ? \"form-group error\" : \"form-group\"}>\n                {label ? <label>{label} {required && <span className=\"required-label\">*</span>}</label> : null}\n                <textarea {...props} ref={inputRef || this.inputRef} />\n                {errorSpan}\n                {helpSpan}\n            </div>\n        );\n    }\n}\n\n\nexport function RadioCheckInput({label, ...props}) {\n    return (\n        <div className={\"custom-control custom-\" + props.type}>\n            <label className=\"custom-control-label\">\n                {label}\n                <input \n                    className=\"custom-control-input\" \n                    {...props}\n                />\n                <div className=\"custom-control-indicator\"></div>\n            </label>\n        </div>\n    );\n}\n\n\nexport class FormRadioInput extends Component {\n    handleChange = (e) => {\n        if (this.props.onChangeCallback) {\n            this.props.onChangeCallback(e);\n        }\n    }\n\n    render() {\n        /* props.variant = inline || stacked */\n\n        let helpSpan = '';\n        if (this.props.helpText)\n            helpSpan = <span className=\"help-text\">{this.props.helpText}</span>;\n\n        let errorSpan = '';\n        if (this.props.error)\n            errorSpan = <span className=\"help-text\">{this.props.error}</span>;\n\n        let inputClass = this.props.variant === \"inline\" ? \"form-check form-check-inline\" : \"form-check\";\n\n        let options = this.props.options.map(\n            (option) => <div className={inputClass} key={option.value}>\n                            <RadioCheckInput \n                                type=\"radio\"\n                                name={this.props.name}\n                                label={option.label}\n                                value={option.value}\n                                defaultChecked={option.value === this.props.defaultValue}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n        );\n\n        return (\n            <div className={this.props.error ? \"form-group error\" : \"form-group\"}>\n                <label>{this.props.label} {this.props.required && <span className=\"required-label\">*</span>}</label>\n                {options}\n                {helpSpan}\n                {errorSpan}\n            </div>\n        );\n    }\n}\n\n\nexport function _FormRadioInput(props) {\n    /* props.variant = inline || stacked */\n\n    let helpSpan = '';\n    if (props.helpText)\n        helpSpan = <span className=\"help-text\">{props.helpText}</span>;\n\n    let errorSpan = '';\n    if (props.error)\n        errorSpan = <span className=\"help-text\">{props.error}</span>;\n\n    let inputClass = props.variant === \"inline\" ? \"form-check form-check-inline\" : \"form-check\";\n\n    let options = props.options.map(\n        (option) => <div className={inputClass} key={option.value}>\n                        <RadioCheckInput \n                            type=\"radio\"\n                            name={props.name}\n                            label={option.label}\n                            value={option.value}\n                            defaultChecked={option.value === props.defaultValue}\n                        />\n                    </div>\n    );\n\n    return (\n        <div className={props.error ? \"form-group error\" : \"form-group\"}>\n            <label>{props.label} {props.required && <span className=\"required-label\">*</span>}</label>\n            {options}\n            {helpSpan}\n            {errorSpan}\n        </div>\n    );\n}\n\nexport function CheckBoxInput({label, ...props}) {\n    return (\n        <div className=\"custom-control custom-checkbox\">\n            <label className=\"custom-control-label\">\n                {label}\n                <input \n                    className=\"custom-control-input\" \n                    type=\"checkbox\" \n                    {...props}\n                />\n                <div className=\"custom-control-indicator\"></div>\n            </label>\n        </div>\n    );\n}\n\nexport function FormCheckInput({label, helpText, error, variant, options, ...props}) {\n    /* props.variant = inline || stacked */\n\n    let helpSpan = '';\n    if (helpText)\n        helpSpan = <span className=\"help-text\">{helpText}</span>;\n\n    let errorSpan = '';\n    if (error)\n        errorSpan = <span className=\"help-text\">{error}</span>;\n\n    let inputClass = variant === \"inline\" ? \"form-check form-check-inline\" : \"form-check\";\n\n    let defaultValue = props.defaultValue;\n    if (defaultValue && !(defaultValue instanceof Array))\n        defaultValue = [props.defaultValue];\n\n    let value = props.value;\n    if (value && !(value instanceof Array))\n        value = [props.value];\n\n    if (options) {\n        let checkInputs = options.map(\n            (option) => {\n                let valueProps = {};\n\n                if (defaultValue)\n                    valueProps.defaultChecked = defaultValue.includes(option.value);\n\n                if (value)\n                    valueProps.checked = value.includes(option.value);\n\n                return (\n                    <div className={inputClass} key={option.value}>\n                        <RadioCheckInput \n                            type=\"checkbox\"\n                            name={props.name}\n                            label={option.label}\n                            value={option.value}\n                            {...valueProps}\n                            onChange={props.onChange}\n                        />\n                    </div>\n                );\n            }\n        );\n\n        return (\n            <div className={error ? \"form-group error\" : \"form-group\"}>\n                <label>{label} {props.required && <span className=\"required-label\">*</span>}</label>\n                {checkInputs}\n                {helpSpan}\n                {errorSpan}\n            </div>\n        );\n\n    }\n\n    return (\n        <div className={error ? \"form-group form-check form-check-inline error\" : \"form-group form-check form-check-inline\"}>\n            <CheckBoxInput\n                label={label}\n                {...props}\n            />\n            {helpSpan}\n            {errorSpan}\n        </div>\n    );\n}\n\n\n\nexport class Typeahead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: this.props.value || this.props.defaultValue || '',\n            isShown: false,\n            focusOptionIndex: -1,\n            options: []\n        };\n\n        this.inputRef = React.createRef();\n    }\n\n    handleChange = (e) => {\n        this.setState({value: e.target.value});\n        this.props.loadOptions(e.target.value, this.updateOptions);\n    }\n\n    updateOptions = (options) => {\n        this.setState({options: options.concat()});\n    }\n\n    handleFocus = (e) => {\n        this.setState({isShown: true});\n    }\n\n    handleBlur = (e) => {\n        e.persist()\n        this.setState({isShown: false, focusOptionIndex: -1});\n    }\n\n    handleMouseDown = (e) => {\n        e.preventDefault();\n    }\n\n    handleOptionSelect = (index) => {\n        let option = this.state.options[index];\n\n        this.inputRef.current.blur();\n        this.setState({value: option.label});\n\n        this.props.onOptionSelect(option);\n    }\n\n    handleKeyDown = (e) => {\n        const key = e.keyCode;\n        const focusOptionIndex = this.state.focusOptionIndex;\n        const maxIndex = this.state.options.length - 1;\n        if (key === 38) {\n            // up arrow\n            if (focusOptionIndex > -1) {\n                this.setState({\n                    focusOptionIndex: focusOptionIndex - 1\n                });\n            }\n        } else if (key === 40) {\n            // down arrow\n            if (focusOptionIndex < maxIndex) {\n                this.setState({\n                    focusOptionIndex: focusOptionIndex + 1\n                });\n            }\n        } else if (key === 13) {\n            // enter\n            e.preventDefault();\n\n            if (focusOptionIndex > -1 && focusOptionIndex <= maxIndex && this.state.isShown) {\n                this.setState({\n                    focusOptionIndex: -1,\n                    isShown: false\n                });\n                this.handleOptionSelect(focusOptionIndex);\n            } \n        } else {\n            if (key !== 13 && this.state.focusOptionIndex !== -1) {\n                //this.state.focusOptionIndex = -1;\n                \n                this.setState({\n                    focusOptionIndex: -1\n                });\n            }\n        }\n        return;\n    }\n\n    render() {\n        let options = null;\n\n        if (this.state.isShown && this.state.options.length) {\n            options = this.state.options.map((option, index) => {\n                return (\n                    <div \n                        className={this.state.focusOptionIndex === index ? \"typeahead__option typeahead__option--is-focused\" : \"typeahead__option\"} \n                        key={option.value}\n                        tabIndex={-1}\n                        onClick={(e) => this.handleOptionSelect(index)}\n                        onMouseDown={this.handleMouseDown}\n                    >\n                        <span className=\"typeahead__option__title\">{option.label}</span>\n                        <span className=\"typeahead__option__extra-data\">{option.extraData}</span>\n                    </div>\n                );\n            });\n        }\n\n        return (\n            <div className=\"typeahead\">\n                <FormInput \n                    label={this.props.label}\n                    placeholder={this.props.placeholder}\n                    type={this.props.type || 'text'}\n                    value={this.state.value}\n                    error={this.props.error}\n                    name={this.props.name}\n                    helpText={this.props.helpText}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    onKeyDown={this.handleKeyDown}\n                    inputRef={this.inputRef}\n\n                    onChange={this.handleChange}\n                    required={this.props.required}\n                    readOnly={this.props.readOnly}\n                />\n                <div className={options ? \"typeahead__options typeahead__options--shown\" : \"typeahead__options\"}>\n                    {options}\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {ReverseLink} from '../utils.js';\nimport Icon from './icons.js';\nimport {RadioCheckInput} from './forms.js';\n\n\nfunction TableHead(props) {\n    let checkboxTh = (\n            <th className=\"checkbox-col\">\n                <RadioCheckInput \n                    type=\"checkbox\"\n                    checked={props.checked} \n                    onChange={props.onCheckChange} \n                    disabled={!props.isCheckable} \n                />\n            </th>);\n\n    let thWidths = props.thWidths || [];\n\n    return (\n        <thead>\n            <tr>\n                {checkboxTh}\n                {props.th.map((th, index) => {\n                    let width = thWidths[index];\n                    let thCls = width ? 'thcol-' + width : null;\n                    return <th key={th} className={thCls}>{th}</th>;\n                    })\n                }\n                {props.hasActions ? \n                    <th key={'actions'} className={thWidths.length > props.th.length && 'thcol-' + thWidths[props.th.length]}>Actions</th> \n                    : null\n                }\n            </tr>\n        </thead>\n    );\n}\n\n\nfunction TableRow (props) {\n    let checkboxTd = (\n            <td className=\"checkbox-col\">\n                <RadioCheckInput\n                    type=\"checkbox\" \n                    checked={props.checked} \n                    onChange={props.onCheckChange} \n                    disabled={!props.isCheckable}\n                />\n            </td>);\n\n    return (\n        <tr className={props.flash ? \"flash\" : null}>\n            {checkboxTd}\n            {props.children}\n        </tr>\n    );\n}\n\n\nexport default class Table extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            headChecked: false,\n            rowsChecked: []\n        }\n\n        this.handleHeadCheck = this.handleHeadCheck.bind(this);\n        this.handleRowCheck = this.handleRowCheck.bind(this);\n    }\n\n    handleHeadCheck(e) {\n        let checkedIds = [];\n        if (e.target.checked === true) {\n            checkedIds = this.props.data.map((item) => item.id);\n        }\n        this.props.tableCheckCallback(checkedIds);\n\n        this.setState({headChecked: e.target.checked, rowsChecked: []});\n\n    }\n\n    handleRowCheck(e, id) {\n        let rowsChecked = this.state.rowsChecked;\n\n        if (e.target.checked) {\n            rowsChecked.push(id);\n            this.setState({rowsChecked: rowsChecked});\n        }\n        else {\n            let rowIndex = rowsChecked.indexOf(id);\n            if (rowIndex > -1) {\n                rowsChecked.splice(rowIndex, 1);\n                this.setState({rowsChecked: rowsChecked});\n            } else if (this.state.headChecked) {\n                for (let i = 0; i < this.props.data.length; i++) {\n                    let _id = this.props.data[i].id;\n                    if (_id !== id)\n                        rowsChecked.push(_id)\n                }\n\n                this.setState({rowsChecked: rowsChecked, headChecked: false});\n            }\n        }\n\n\n        this.props.tableCheckCallback(rowsChecked);\n    }\n\n    getTableRowURI = () => {\n        let queryString = window.location.search;\n\n        if (queryString.length)\n            return this.props.tableRowURI + '?_list_filters=' + encodeURIComponent(queryString);\n\n        return this.props.tableRowURI;\n    }\n\n    renderForMobile = () => {\n\n        let hasActions = this.props.tableRowActions ? true : false;\n        let colCls = this.props.tableColCls || [];\n\n        let cards = this.props.data.map((row) => {\n\n            let cols = [];\n\n            for (let j = 0; j < this.props.tableCols.length; j++) {\n\n                let colKey = 'col_' + j + '_' + row.id;\n\n                let label = this.props.tableTh[j];\n\n                let val = row[this.props.tableCols[j]];\n\n                if (typeof val === 'boolean') {\n                    val = val ? <Icon name=\"check-circle\" className=\"table-col-icon text-success\" /> : <Icon name=\"x-circle\" className=\"table-col-icon text-error\" />;\n                }\n\n                let colClass = colCls[j];\n\n                if (!colClass) {\n                    if (j === 0)\n                        colClass = 'col-12';\n                    else \n                        colClass = 'col-6';\n                }\n\n                cols.push(\n                    <div key={colKey} className={colClass}>\n                        <span className=\"col-label\">{label}</span>\n                        <span className={j === 0 ? \"item-title\" : \"\"}>{val}</span>\n                    </div>\n                );\n\n            }\n\n            let actionsCol = null;\n            if (hasActions)\n                actionsCol = <div className=\"col-12 actions-col\">{this.props.tableRowActions(row)}</div>;\n\n            if (this.props.tableRowURI) {\n                return (\n                    <div key={row.id}>\n                        <ReverseLink \n                            to={this.getTableRowURI()} \n                            args={{id: row.id}}\n                            className=\"table-item-card\"\n                        >\n                            <div className=\"row\">{cols}</div>\n                            <div className=\"caret\"><Icon name=\"chevron-right\" /></div>\n                        </ReverseLink>\n                    </div>\n                );\n            } else {\n                return (\n                    <div key={row.id}>\n                        <div className=\"table-item-card\">\n                            <div className=\"row\">{cols}{actionsCol}</div>\n                        </div>\n                    </div>\n                );\n            }\n        });\n\n        return (\n            <div>\n                {cards}\n            </div>\n        );\n    }\n\n    render() {\n        const isMobile = window.innerWidth < 576;\n\n        if (this.props.data.length < 1) {\n            return (\n                <div className=\"well\">\n                    <h1>Nothing here</h1>\n                </div>\n            );\n        }\n\n        if (isMobile)\n            return this.renderForMobile();\n\n        let head;\n        let hasActions = this.props.tableRowActions ? true : false;\n        let isCheckable = this.props.tableCheckable ? true : false;\n        if (this.props.tableTh)\n            head = <TableHead \n                        th={this.props.tableTh} \n                        checked={this.state.headChecked}\n                        onCheckChange={this.handleHeadCheck} \n                        hasActions={hasActions}\n                        isCheckable={isCheckable}\n                        thWidths={this.props.tableThWidths}\n                    />\n\n        let flashRows = this.props.flashRows || [];\n        let rows = [];\n\n        for (let i = 0; i < this.props.data.length; i++) {\n\n            let row = this.props.data[i];\n\n            let cols = [];\n\n            for (let j = 0; j < this.props.tableCols.length; j++) {\n\n                let colKey = 'col_' + j + '_' + row.id;\n\n                if (this.props.tableRowURI && j === 0)\n                    cols.push(\n                        <td key={colKey}>\n                            <ReverseLink to={this.getTableRowURI()} args={{id: row.id}}>{row[this.props.tableCols[j]]}</ReverseLink>\n                        </td>\n                    );\n                else {\n                    let val = row[this.props.tableCols[j]];\n                    \n                    if (typeof val === 'boolean') {\n                        val = val ? <Icon name=\"check-circle\" className=\"table-col-icon text-success\" /> : <Icon name=\"x-circle\" className=\"table-col-icon text-error\" />;\n                    } \n\n                    cols.push(<td key={colKey}>{val}</td>);\n                }\n\n            }\n\n            let actionsTd = null;\n            if (hasActions)\n                actionsTd = <td>{this.props.tableRowActions(row)}</td>;\n\n            rows.push(\n                <TableRow \n                    key={row.id} \n                    checked={this.state.headChecked || this.state.rowsChecked.indexOf(row.id) > -1} \n                    onCheckChange={(e) => this.handleRowCheck(e, row.id)}\n                    isCheckable={isCheckable}\n                    flash={flashRows.includes(i)}\n                >\n                    {cols}\n                    {actionsTd}\n                </TableRow>);\n        }\n\n        return (\n            <table>\n                {head}\n                <tbody>\n                    {rows}\n                </tbody>\n            </table>\n        );\n    }\n}","import {PageHeader} from '../components';\n\nexport function Page404(props) {\n    return (\n        <div className=\"main\">\n            <PageHeader hideSubnav={true} title=\"404 Page not found\" location={props.location} />\n            <div className=\"content\">\n                <p className=\"lead\">\n                    The requested page doesn't exist. \n                </p>\n            </div>\n        </div>\n    );\n}","import React, {Component} from 'react';\nimport {Route, Switch, Link} from 'react-router-dom';\nimport API from '../api.js';\nimport {joinPaths, capitalize} from '../utils.js';\nimport {PageHeader, Table} from '../components';\nimport {Page404} from './errors.js';\n\n\nexport default class ModelPageGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.list_url = joinPaths(this.props.match.url, '/');\n        this.add_url = joinPaths(this.props.match.url, '/add/');\n        this.edit_url = joinPaths(this.props.match.url, '/:id/edit/');\n    }\n\n    componentDidMount() {\n        // make api request to fetch mdoel's metadata\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // the component won't remount\n        // if the model parameter changed in url\n        // so need to refetch the new model's metadata\n    }\n\n    render() {\n        let permissions = {can_add: true}\n\n        let app_label = this.props.match.params.app_label;\n        let model_param = this.props.match.params.model;\n\n        if (!this.props.initData.apps.hasOwnProperty(app_label))\n            return <Page404 location={this.props.location} />\n\n        const app = this.props.initData.apps[app_label];\n\n        if (!app.models.hasOwnProperty(model_param))\n            return <Page404 location={this.props.location} />;\n\n\n        const model = app.models[model_param];\n\n\n        return (\n            <div className=\"main\">\n                <Route render={(props) => <PageHeader {...props} \n                        title={capitalize(model.verbose_name_plural)}\n                        list_url={this.list_url}\n                        edit_url={this.edit_url}\n                        add_url={this.add_url}\n                        onRefresh={this.refreshPage}\n                        permissions={permissions}\n                        />\n                    } \n                />\n                <Switch>\n                    <Route \n                        path={this.props.match.path}\n                        exact\n                        render={(props) => <ListPage {...props} model={model} key={model.endpoint} />} \n                    />\n                    <Route \n                        path={joinPaths(this.props.match.path, '/add/')} \n                        exact \n                        render={(props) => <AddPage {...props} model={model} />} \n                    />\n                    <Route \n                        path={joinPaths(this.props.match.path, '/:id(\\\\d+)/edit/')} \n                        exact \n                        render={(props) => <EditPage {...props} model={model} />} \n                    />\n                    <Route>\n                        <p>404 Page Not Found.</p>\n                        <p>This page doesn't exist.</p>\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport class ListPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: null\n        };\n\n        this.api_endpoint = this.props.model.endpoint;\n    }\n\n    componentDidMount() {\n        let api = new API(this.api_endpoint);\n\n        api.getList()\n        .then((response) => this.setState({data: response.data}))\n        .catch((err) => console.log(err));\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    render() {\n\n        if (!this.state.data) {\n            return <div className=\"content\">Loading...</div>\n        }\n\n        return (\n            <div className=\"content\">\n                <div className=\"table-container\">\n                    <div className=\"table-outer\">\n                        <Table\n                            data={this.state.data.results}\n                            tableCols={this.props.model.list_display}\n                            tableTh={this.props.model.list_display_labels}\n                            tableColCls={[]}\n                            tableThWidths={[]}\n                            tableRowURI={':id/edit/'}\n                            tableRowActions={null}\n                            tableCheckable={true}\n                            tableCheckCallback={() => null}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport function AddPage(props) {\n    return (\n        <h1>Add page</h1>\n    );\n}\n\n\nexport function EditPage(props) {\n    return (\n        <h1>Edit page</h1>\n    );\n}\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {joinPaths, capitalize} from '../utils.js';\nimport {PageHeader} from '../components';\nimport ModelPageGroup from './model.js';\nimport {Page404} from './errors.js';\n\nexport default class AppPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let app_label = this.props.match.params.app_label;\n\n        if (!this.props.initData.apps.hasOwnProperty(app_label)) {\n            return <Page404 location={this.props.location} />;\n        }\n\n        let app = this.props.initData.apps[app_label];\n\n        return (\n            <div className=\"main\">\n                <PageHeader hideSubnav={true} title={app.verbose_name} location={this.props.location} />\n\n                <div className=\"content\">\n                    {Object.keys(app.models).map((key) => {\n                        let model = app.models[key];\n\n                        return <div key={app_label + '.' + model.name}><Link to={joinPaths(this.props.match.url, model.name)}>{capitalize(model.verbose_name_plural)}</Link></div>\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport {PageHeader} from '../components';\n\nexport default function HomePage(props) {\n    return (\n        <div className=\"main\">\n            <PageHeader \n                title=\"Home\" \n                hideSubnav={true}\n                location={props.location}\n            />\n        <div className=\"content\">\n        </div>\n        </div>\n    );\n}","import React, { Component } from 'react';\nimport {Route, Switch, BrowserRouter, withRouter, Link} from 'react-router-dom';\nimport API from './api.js';\nimport {HomePage, AppPage, ModelPageGroup} from './pages';\nimport {capitalize, joinPaths} from './utils.js';\nimport {Nav} from './components';\nimport './App.scss';\n\n\nclass _App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            initData: null,\n            errorMsg: null\n        }\n\n\n        if (!window.hasOwnProperty('candy'))\n            window.candy = {site_name: 'Candy'};\n    }\n\n    componentDidMount() {\n        this.getInitData();\n    }\n\n    getInitData = () => {\n        let api = new API('init');\n\n        api.getList()\n        .then((response) => {\n            this.setState({\n                loading: false,\n                initData: response.data\n            });\n        })\n        .catch((err) => {\n            console.log(err)\n            this.setState({\n                loading: false,\n                errorMsg: 'Something went wrong'\n            })\n        })\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<div>Loading...</div>);\n        }\n\n        if (this.state.errorMsg) {\n            return <div>{this.state.errorMsg}</div>;\n        }\n\n        let links = [];\n\n        for (let app_label in this.state.initData.apps) {\n            let app = this.state.initData.apps[app_label];\n\n            for (let model_label in app.models) {\n                let model = app.models[model_label];\n\n                let admin_url = joinPaths(model.app_label, model.name.toLowerCase());\n\n                links.push(\n                    <Link to={admin_url}>{capitalize(model.verbose_name)}</Link>\n                );\n            }\n        }\n\n        return (\n            <div className=\"container-fluid\">\n                <Nav sideMenu={this.state.initData.side_menu} topMenu={this.state.initData.top_menu} />\n                    <div className=\"row\">\n                        <div className=\"col-md-10 offset-md-2 px-0\">\n                            <Switch>\n                                <Route path='/' exact \n                                    render={\n                                        (props) => <HomePage {...props} />\n                                    } \n                                /> \n                                <Route path='/:app_label/' exact\n                                    render={\n                                        (props) => <AppPage {...props} initData={this.state.initData} />\n                                    }\n                                />\n                                <Route path='/:app_label/:model/'\n                                    render={\n                                        (props) => <ModelPageGroup {...props} initData={this.state.initData} />\n                                    }\n                                />\n                            </Switch>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst App = withRouter(_App);\n\nexport default function AppExport({props}) {\n    return (\n        <BrowserRouter>\n            <Route path=\"/\"\n                render={() => <App {...props} />}\n            />\n\n            <div className=\"footer\">\n                version {process.env.REACT_APP_VERSION}\n            </div>\n        </BrowserRouter>\n    );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}