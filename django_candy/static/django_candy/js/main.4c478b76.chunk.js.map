{"version":3,"sources":["api.js","urlconf.js","utils.js","components/icons.js","components/loaders.js","components/buttons.js","components/navs.js","components/headers.js","components/forms.js","components/table.js","components/tableToolbar.js","components/toast.js","components/skeletons.js","components/pagination.js","components/splash.js","pages/errors.js","pages/model.js","pages/app.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_API_URL","API","window","candy","base_api_url","name","this","endpoint","data","queryString","Promise","resolve","reject","axios","post","then","response","catch","error","id","delete","patch","undefined","get","URLS","home","app_index","model_list","model_add","model_edit","capitalize","string","charAt","toUpperCase","substr","toLowerCase","joinPaths","_paths","i","length","path","endsWith","startsWith","push","join","CACHED_REGEXP","reverse","to","args","toPath","compile","ReverseLink","props","children","ReverseNavLink","Icon","className","Loader","DropdownButton","handleClickOutside","event","container","current","contains","target","state","shown","setState","selected","selectedIndex","selectedOnce","getBtnClass","bind","toggleMenu","React","createRef","caret","value","index","autoChange","onChange","prevProps","prevState","document","addEventListener","removeEventListener","placement","menu","options","map","type","onClick","onSelect","e","onOptionClick","label","ref","icon","selectLabel","transitionName","transitionEnterTimeout","transitionLeaveTimeout","Component","Nav","toggleNav","open","body","classList","toggle","handleLinkClick","instance","remove","base_url","match","params","src","alt","site_name","exact","sideMenu","app","verbose_name","app_label","models","model","model_name","menu_label","SubNav","Children","child","PageHeader","title","location","pathname","backBtn","list_filters","URLSearchParams","search","matchPath","edit_url","add_url","list_url","hideSubnav","permissions","can_add","onRefresh","FormInput","helpText","required","inputRef","helpSpan","errorSpan","RadioCheckInput","TableHead","checkboxTh","checked","onCheckChange","disabled","isCheckable","thWidths","th","width","thCls","hasActions","TableRow","checkboxTd","flash","Table","getTableRowURI","tableRowURI","encodeURIComponent","renderForMobile","tableRowActions","colCls","tableColCls","cards","row","cols","j","tableCols","colKey","tableTh","val","colClass","actionsCol","headChecked","rowsChecked","handleHeadCheck","handleRowCheck","checkedIds","item","tableCheckCallback","rowIndex","indexOf","splice","_id","head","isMobile","innerWidth","tableCheckable","tableThWidths","flashRows","rows","actionsTd","includes","TableToolbar","ListSearch","ListFilter","_ListSearch","handleFocus","focussed","input","focus","handleBlur","blur","searchVal","activeQuery","handleSearchChange","handleSubmit","clearSearch","updateSearch","preventDefault","q","set","history","toString","onSubmit","placeholder","autoFocus","onFocus","onBlur","withRouter","toastService","toasts","Set","toast","add","unregister","forEach","tst","message","showToast","showLoaderToast","hideLoaderToast","retryCallback","showConnectionError","hideAll","hideError","ToastContainer","timer","loader","connectionError","hasToast","register","closeToast","closeConnectionErrorToast","clearTimeout","setTimeout","hideToast","LoaderToast","ConnectionErrorToast","onRetry","onClose","toast2","Toast","component","SkeletonInput","SkeletonButton","SkeletonTable","Pagination","total_count","per_page","currentPage","total_pages","Math","ceil","prevArrow","nextArrow","onPageClick","pages","_pages","has","Splash","ErrorSplash","msg","retryBtnText","Page404","ModelPageGroup","url","model_param","initData","apps","hasOwnProperty","render","verbose_name_plural","refreshPage","key","AddPage","EditPage","ListPage","getCurrentPage","Number","loading","limit","api_endpoint","scrollTo","showLoader","getList","err","console","log","snapshot","hideLoader","results","list_display","list_display_labels","count","AppPage","Object","keys","HomePage","_App","getInitData","errorMsg","retryApi","base_admin_url","replace","side_menu","topMenu","top_menu","App","AppExport","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4c478b76.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport var BASE_API_URL;\n\n\n/* We can allow configuring BASE_API_URL from django by setting \na `document.BASE_API_URL` in the index.html and render it from a django view.`\n*/\n\nif (process.env.NODE_ENV === 'production') {\n    BASE_API_URL = window.candy.base_api_url || '/candy/api/v1/';\n} else {\n    BASE_API_URL = 'http://localhost:8000/candy/api/v1/';\n}\n\n\nconst API_ENDPOINTS = {\n    init: BASE_API_URL + 'init/',\n\n    login: BASE_API_URL + 'login/',\n    logout: BASE_API_URL + 'logout/',\n\n    home: BASE_API_URL + 'home/',\n};\n\n\nexport default class API {\n    constructor(name) {\n        this.endpoint = BASE_API_URL + name + '/';\n    }\n\n    createEntity(data, queryString) {\n        let promise = new Promise((resolve, reject) => {\n            axios.post(this.endpoint + '?' + queryString, data)\n            .then((response) => {\n                resolve(response);\n            })\n            .catch((error) => {\n                reject(error);\n            });\n        });\n        \n        return promise;\n    }\n\n    deleteEntity(id, queryString) {\n        return axios.delete(this.endpoint + id + '/?' + queryString);\n    }\n\n    updateEntity(id, data, queryString) {\n        return axios.patch(this.endpoint + id + '/?' + queryString, data);\n    }\n\n    getList(queryString) {\n        if (queryString === undefined)\n            queryString = '';\n\n        return axios.get(this.endpoint + '?' + queryString);\n    }\n\n    getOne(id, queryString) {\n        if (queryString === undefined)\n            queryString = '';\n\n        let promise = new Promise((resolve, reject) => {\n            axios.get(this.endpoint + id + '/?' + queryString)\n            .then((response) => {\n                resolve(response);\n            })\n            .catch((error) => {\n                reject(error);\n            });\n        });\n\n        return promise;\n    }\n}","const URLS = {\n    home: '/:base_url/',\n\n    app_index: '/:base_url/:app_label/',\n\n    model_list: '/:base_url/:app_label/:model_name/',\n    model_add: '/:base_url/:app_label/:model_name/add/',\n    model_edit: '/:base_url/:app_label/:model_name/:id(\\\\d+)/edit/',\n};\n\n\nexport default URLS;","import React from 'react';\nimport {Link, NavLink} from 'react-router-dom';\nimport {compile} from 'path-to-regexp';\n\n\n\nexport function capitalize(string) {\n    if (!string)\n        return '';\n    \n    return string.charAt(0).toUpperCase() + string.substr(1).toLowerCase();\n}\n\n\nexport function joinPaths(...paths) {\n    let _paths = [];\n    for (let i = 0; i < paths.length; i++) {\n        let path = paths[i];\n\n        if (path.length > 1) {\n            if(path.endsWith('/'))\n                path = path.substr(0, path.length - 1);\n        }\n\n        if (i > 0) {\n            if (path.startsWith('/'))\n                path = path.substr(1, path.length);\n        }\n\n        if (path == '/')\n            path = '';\n\n        _paths.push(path)\n    }\n\n    let path = _paths.join('/');\n\n    // append trailing slash\n    if (!path.endsWith('/'))\n        path += '/';\n\n    return path;\n}\n\n\nvar CACHED_REGEXP = {};\n\nexport function reverse(to, args) {\n    let toPath = CACHED_REGEXP[to];\n\n    if (typeof toPath === 'undefined') {\n        toPath = compile(to);\n        CACHED_REGEXP[to] = toPath;\n    }\n\n    return toPath(args);\n}\n\n\nexport function ReverseLink({args, ...props}) {\n    props.to = reverse(props.to, args);\n\n    return <Link {...props}>{props.children}</Link>;\n}\n\n\nexport function ReverseNavLink({args, ...props}) {\n    props.to = reverse(props.to, args);\n\n    return <NavLink {...props}>{props.children}</NavLink>;\n}\n\n\nexport function requestErrorMsg(error) {\n    let errorType = 'CONNECTION_ERROR';\n\n    if (error.response)\n        errorType = error.response.status;\n\n    switch (errorType) {\n        case 400:\n            return {errorType: errorType, errorMsg: \"Something wen't wrong. Reload the page and try again\"};\n        case 401:\n            return {errorType: errorType, errorMsg: \"You need to log in to perform this action\"};\n        case 403: \n            return {errorType: errorType, errorMsg: \"You don't have permission to add or modify this object\"};\n        case 404: \n            return {errorType: errorType, errorMsg: \"This page or object doesn't exist or has been deleted\"};\n        case 405:\n            return {errorType: errorType, errorMsg: \"This operation is not permitted\"};\n        case 500:\n            return {errorType: errorType, errorMsg: \"500 Server Error. Contact administrator\"};\n        case 'CONNECTION_ERROR':\n            return {errorType: errorType, errorMsg: \"Check your Internet connection\"};\n        default:\n            return {errorType: errorType, errorMsg: \"Something wen't wrong. Try again\"};\n    }\n}","export default function Icon(props) {\n    let className = \"bi bi-\" + props.name;\n\n    if (props.className)\n        className = className + ' ' + props.className;\n\n    return <i className={className}></i>\n}","import React from 'react';\n\n\nexport default function Loader ({className, ...props}) {\n    if (!className)\n        className = '';\n\n    return <div className={\"loader circle \" + className} {...props}></div>;\n}\n","import React from 'react';\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport Loader from './loaders.js';\nimport Icon from './icons.js';\n\n\nexport const Button = React.forwardRef((props, ref) => {\n    let loader;\n    if (props.loading) {\n        loader = <Loader />;\n    }\n\n    let className = 'btn ' + props.className;\n\n    return (\n        <button className={className} type={props.type || 'button'}\n            disabled={props.loading || props.disabled ? true : false}\n            onClick={props.onClick}\n            ref={ref}\n        >\n            {props.children}{loader}\n        </button>\n    );\n});\n\n\nexport class DropdownButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: props.selectedIndex || 0,\n            shown: false,\n            selectedOnce: false\n        }\n\n        this.getBtnClass = this.getBtnClass.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n\n        this.container = React.createRef();\n    }\n\n    getBtnClass() {\n        let caret = this.state.shown ? ' dropup' : ' dropdown';\n\n        return 'btn ' + this.props.className + caret;\n    }\n\n    toggleMenu() {\n        this.setState({shown: !this.state.shown});\n    }\n\n    onOptionClick(value, index) {\n        let autoChange = this.props.autoChange;\n        if (autoChange === false) {\n            this.setState({shown: false});\n        }\n        else {\n            this.setState({selectedOnce: true, selected: index, shown: false});\n        }\n\n        if (this.props.onChange) {\n            this.props.onChange(value, index);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.selectedIndex !== prevProps.selectedIndex) {       \n            if (this.state.selected !== this.props.selectedIndex) {\n                this.setState({selected: this.props.selectedIndex});\n            }\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    }\n\n    handleClickOutside = event => {\n        if (this.container.current && !this.container.current.contains(event.target)) {\n            if (this.state.shown)\n                this.setState({shown: false});\n        }\n    };\n\n    render() {\n        let placement = this.props.placement || '';\n\n        let menu = null;\n        if (this.state.shown) {\n            menu = (<div key=\"menu\" className={this.state.shown ? \"dropdown-menu show \" + placement : \"dropdown-menu \" + placement}>\n                        {\n                            this.props.options.map((value, index) => \n                                <button \n                                    type=\"button\" \n                                    className={this.state.selected === index ? \"dropdown-item active\" : \"dropdown-item\"}\n                                    onClick={value.onSelect ? value.onSelect : (e) => this.onOptionClick(value, index)}\n                                    key={index}\n                                >\n                                    {value.label}\n                                </button>\n                            )\n                        }\n                    </div>);\n        }\n\n        return (\n            <div className={this.state.shown ? \"dropdown-container show\" : \"dropdown-container\"} ref={this.container}>\n                <button className={this.getBtnClass()} type=\"button\" onClick={this.toggleMenu}>\n                    {this.props.icon} {this.state.selectedOnce ? this.props.options[this.state.selected].selectLabel : this.props.children}\n                </button>\n                <CSSTransitionGroup\n                    transitionName=\"dropdown-menu\"\n                    transitionEnterTimeout={100}\n                    transitionLeaveTimeout={100}\n                >\n                    {menu}\n                </CSSTransitionGroup>\n            </div>\n        );\n    }\n}\n\nexport function CloseButton(props) {\n    let loader;\n    if (props.loading) {\n        loader = <Loader />;\n    }\n\n    return (\n        <button className=\"btn-close\" type=\"button\" \n            disabled={props.loading || props.disabled ? true : false}\n            onClick={props.onClick}\n        >\n            <Icon name=\"x\" />{loader}\n        </button>\n    );\n}\n","import React, {Component, Children} from 'react';\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport {NavLink} from 'react-router-dom';\nimport Icon from './icons.js';\nimport {capitalize, ReverseNavLink, ReverseLink} from '../utils.js';\nimport URLS from '../urlconf.js';\nimport {DropdownButton} from './buttons.js';\n\n\nexport class Nav extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.instance !== prevProps.instance && this.state.open) {\n            this.setState({open: false});\n            document.body.classList.remove('nav-open');\n        }\n    }\n\n    componentWillUnmount() {\n        document.body.classList.remove('nav-open');\n    }\n\n    toggleNav = (e) => {\n        this.setState({open: !this.state.open});\n        document.body.classList.toggle('nav-open');\n    }\n\n    handleLinkClick = (e) => {\n        if (this.state.open) {\n            this.toggleNav();\n        }\n    }\n\n    render() {\n        const base_url = this.props.match.params.base_url;\n\n        return (\n            <div>\n                <CSSTransitionGroup\n                    transitionName=\"overlay\"\n                    transitionEnterTimeout={100}\n                    transitionLeaveTimeout={150}\n                >\n                    {(this.state.open && <div className=\"overlay\" key=\"overlay\" onClick={this.handleLinkClick}></div>) || null}\n                </CSSTransitionGroup>\n\n                <div className=\"nav top-nav\">\n                    <ReverseLink to={URLS.home} args={{base_url: base_url}} className=\"logo\">\n                        <img src={process.env.PUBLIC_URL + \"/static/django_candy/img/logo-nav.png\"}  alt={window.candy.site_name} className=\"d-none d-sm-block\" />\n                        <img src={process.env.PUBLIC_URL + \"/static/django_candy/img/logo-nav-mobile.png\"}  alt={window.candy.site_name} className=\"d-block d-sm-none\" />\n                    </ReverseLink> {' '}\n                    <button className=\"toggle-nav d-md-none\" onClick={this.toggleNav}>\n                        {this.state.open ? <Icon name=\"x\" /> : <Icon name=\"list\" />}\n                    </button>\n\n                    <ul className=\"d-none d-md-block\">\n                        <li>\n                            <DropdownButton \n                                className=\"default\"\n                                placement=\"right\"\n                                selectedIndex={-1}\n                                options={[\n                                    {label: \"Logout\", onSelect: (e) => null},\n                                ]}\n                            >\n                                <Icon name=\"person\" className=\"nav-user-icon\" /> username\n                            </DropdownButton>\n                        </li>\n                    </ul>\n                </div>\n\n                <div className={this.state.open ? \"nav side-nav open\" : \"nav side-nav\"} id={this.props.id}>\n                    <ul>\n                        <li key='home'>\n                            <ReverseNavLink \n                                exact\n                                to={URLS.home}\n                                args={{base_url: base_url}}\n                                onClick={this.handleLinkClick}\n                            >\n                                Home\n                            </ReverseNavLink>\n                        </li>\n                        {this.props.sideMenu.map((app) => {\n                            let menu_label = <li key={app.app_label}><span className=\"menu-header\">{capitalize(app.verbose_name)}</span></li>;\n\n                            let menu_items = app.models.map((model) => {\n                                return (\n                                    <li key={model.app_label + '.' + model.name}>\n                                        <ReverseNavLink \n                                            to={URLS.model_list}\n                                            args={{base_url: base_url, app_label: app.app_label, model_name: model.name.toLowerCase()}}\n                                            onClick={this.handleLinkClick}\n                                        >\n                                            {capitalize(model.menu_label)}\n                                        </ReverseNavLink>\n                                    </li>\n                                );\n                            });\n\n                            return [menu_label, menu_items];\n                        })}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport function SubNav(props)  {\n    return (\n        <div className={'nav sub-nav'}>\n            <ul>\n                {Children.map(props.children, (child) => child ? <li>{child}</li> : null)}\n            </ul>\n        </div>\n    );\n}","import React from 'react';\nimport {matchPath} from 'react-router-dom';\nimport Icon from './icons.js';\nimport {SubNav} from './navs.js';\nimport {ReverseLink} from '../utils.js';\n\n\nexport default function PageHeader(props) {\n    /* \n        Page header component.\n\n        Props:\n            title:      Base title of the page.\n            edit_url:   URL pattern for edit page.\n            add_url:    URL pattern for add page.\n\n    */\n    let title = props.title;\n    let path = props.location.pathname;\n    let backBtn = null;\n\n    let list_filters = new URLSearchParams(props.location.search).get('_list_filters') || '';\n\n    if (matchPath(path, props.edit_url))\n        title = title + ' / Edit';\n    else if (matchPath(path, props.add_url))\n        title = title + ' / Add New';\n\n    if (matchPath(path, props.edit_url) || matchPath(path, props.add_url)) {\n        backBtn = <ReverseLink \n                    to={props.list_url + list_filters}\n                    args={{base_url: props.match.params.base_url, \n                        app_label: props.match.params.app_label, \n                        model_name: props.match.params.model_name\n                    }}\n                  >\n                    <Icon name=\"arrow-left\" /> View All\n                  </ReverseLink>;\n    }\n\n    document.title = props.title + ' | '+ window.candy.site_name;\n\n\n    return (\n        <div className=\"header\">\n            <div className=\"row\">\n                <div className=\"col-12 col-md-5\">\n                    <h3>{title}</h3>\n                </div>\n                <div className=\"col-12 col-md-7\">\n                    {!props.hideSubnav && \n                        <SubNav>\n                            {backBtn}\n                            {props.permissions.can_add ? \n                                <ReverseLink \n                                    className=\"active\" \n                                    to={props.add_url}\n                                    args={{base_url: props.match.params.base_url, \n                                        app_label: props.match.params.app_label, \n                                        model_name: props.match.params.model_name\n                                    }}\n                                >\n                                    <Icon name=\"plus\" /> Add New\n                                </ReverseLink>\n                                : null\n                            }\n                            <button className=\"btn\" onClick={props.onRefresh}><Icon name=\"arrow-clockwise\" /> Refresh</button>\n                        </SubNav>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}","import React, {Component} from 'react';\nimport Loader from './loaders.js';\n\n\nexport function FormInput({label, helpText, error, required, inputRef, ...props}) {\n    let helpSpan = '';\n    if (helpText)\n        helpSpan = <span className=\"help-text\">{helpText}</span>;\n\n    let errorSpan = '';\n    if (error)\n        errorSpan = <span className=\"help-text\">{error}</span>;\n\n    if (!props.className)\n        props.className = 'form-control';\n\n    if (inputRef)\n        props.ref = inputRef;\n\n    return (\n        <div className={error ? \"form-group error\" : \"form-group\"}>\n            {label ? <label>{label} {required && <span className=\"required-label\">*</span>}</label> : null}\n            <input {...props} />\n            {errorSpan}\n            {helpSpan}\n        </div>\n    );\n}\n\n\nexport function FormInputGroup({label, helpText, error, required, append, prepend, ...props}) {\n    let helpSpan = '';\n    if (helpText)\n        helpSpan = <span className=\"help-text\">{helpText}</span>;\n\n    let errorSpan = '';\n    if (error)\n        errorSpan = <span className=\"help-text\">{error}</span>;\n\n    if (!props.className)\n        props.className = 'form-control';\n\n    return (\n         <div className={error ? \"form-group error\" : \"form-group\"}>\n            {label ? <label>{label} {required && <span className=\"required-label\">*</span>}</label> : null}\n            <div className=\"input-group\">\n                {prepend && \n                    <div className=\"input-group-prepend\">{prepend}</div>\n                }\n                <input {...props} />\n                {append && \n                    <div className=\"input-group-append\">{append}</div>\n                }\n            </div>\n            {errorSpan}\n            {helpSpan}\n        </div>\n    );\n}\n\n\nexport class FormTextArea extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!props.inputRef)\n            this.inputRef = React.createRef();\n    }\n\n    handleChange = (e) => {\n        this.updateHeight(e.target);\n\n        if (this.props.onChange)\n            this.props.onChange(e);\n    }\n\n    updateHeight = (el) => {\n        let offset = el.offsetHeight - el.clientHeight;\n        el.style.height = 'auto';\n        el.style.height = (el.scrollHeight + offset) + 'px';\n    }\n\n    componentDidMount() {\n        if (this.props.autoHeight) {\n            if (this.props.inputRef)\n                this.updateHeight(this.props.inputRef.current);\n            else \n                this.updateHeight(this.inputRef.current);\n        }\n    }\n\n    render() {\n        let {error, label, required, helpText, autoHeight, inputRef, ...props} = this.props;\n\n        let helpSpan = '';\n        if (helpText)\n            helpSpan = <span className=\"help-text\">{helpText}</span>;\n\n        let errorSpan = '';\n        if (error)\n            errorSpan = <span className=\"help-text\">{error}</span>;\n\n        if (!this.props.className)\n            props.className = 'form-control';\n\n        if (autoHeight) \n            props.onChange = this.handleChange;\n\n\n        return (\n            <div className={error ? \"form-group error\" : \"form-group\"}>\n                {label ? <label>{label} {required && <span className=\"required-label\">*</span>}</label> : null}\n                <textarea {...props} ref={inputRef || this.inputRef} />\n                {errorSpan}\n                {helpSpan}\n            </div>\n        );\n    }\n}\n\n\nexport function RadioCheckInput({label, ...props}) {\n    return (\n        <div className={\"custom-control custom-\" + props.type}>\n            <label className=\"custom-control-label\">\n                {label}\n                <input \n                    className=\"custom-control-input\" \n                    {...props}\n                />\n                <div className=\"custom-control-indicator\"></div>\n            </label>\n        </div>\n    );\n}\n\n\nexport class FormRadioInput extends Component {\n    handleChange = (e) => {\n        if (this.props.onChangeCallback) {\n            this.props.onChangeCallback(e);\n        }\n    }\n\n    render() {\n        /* props.variant = inline || stacked */\n\n        let helpSpan = '';\n        if (this.props.helpText)\n            helpSpan = <span className=\"help-text\">{this.props.helpText}</span>;\n\n        let errorSpan = '';\n        if (this.props.error)\n            errorSpan = <span className=\"help-text\">{this.props.error}</span>;\n\n        let inputClass = this.props.variant === \"inline\" ? \"form-check form-check-inline\" : \"form-check\";\n\n        let options = this.props.options.map(\n            (option) => <div className={inputClass} key={option.value}>\n                            <RadioCheckInput \n                                type=\"radio\"\n                                name={this.props.name}\n                                label={option.label}\n                                value={option.value}\n                                defaultChecked={option.value === this.props.defaultValue}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n        );\n\n        return (\n            <div className={this.props.error ? \"form-group error\" : \"form-group\"}>\n                <label>{this.props.label} {this.props.required && <span className=\"required-label\">*</span>}</label>\n                {options}\n                {helpSpan}\n                {errorSpan}\n            </div>\n        );\n    }\n}\n\n\nexport function _FormRadioInput(props) {\n    /* props.variant = inline || stacked */\n\n    let helpSpan = '';\n    if (props.helpText)\n        helpSpan = <span className=\"help-text\">{props.helpText}</span>;\n\n    let errorSpan = '';\n    if (props.error)\n        errorSpan = <span className=\"help-text\">{props.error}</span>;\n\n    let inputClass = props.variant === \"inline\" ? \"form-check form-check-inline\" : \"form-check\";\n\n    let options = props.options.map(\n        (option) => <div className={inputClass} key={option.value}>\n                        <RadioCheckInput \n                            type=\"radio\"\n                            name={props.name}\n                            label={option.label}\n                            value={option.value}\n                            defaultChecked={option.value === props.defaultValue}\n                        />\n                    </div>\n    );\n\n    return (\n        <div className={props.error ? \"form-group error\" : \"form-group\"}>\n            <label>{props.label} {props.required && <span className=\"required-label\">*</span>}</label>\n            {options}\n            {helpSpan}\n            {errorSpan}\n        </div>\n    );\n}\n\nexport function CheckBoxInput({label, ...props}) {\n    return (\n        <div className=\"custom-control custom-checkbox\">\n            <label className=\"custom-control-label\">\n                {label}\n                <input \n                    className=\"custom-control-input\" \n                    type=\"checkbox\" \n                    {...props}\n                />\n                <div className=\"custom-control-indicator\"></div>\n            </label>\n        </div>\n    );\n}\n\nexport function FormCheckInput({label, helpText, error, variant, options, ...props}) {\n    /* props.variant = inline || stacked */\n\n    let helpSpan = '';\n    if (helpText)\n        helpSpan = <span className=\"help-text\">{helpText}</span>;\n\n    let errorSpan = '';\n    if (error)\n        errorSpan = <span className=\"help-text\">{error}</span>;\n\n    let inputClass = variant === \"inline\" ? \"form-check form-check-inline\" : \"form-check\";\n\n    let defaultValue = props.defaultValue;\n    if (defaultValue && !(defaultValue instanceof Array))\n        defaultValue = [props.defaultValue];\n\n    let value = props.value;\n    if (value && !(value instanceof Array))\n        value = [props.value];\n\n    if (options) {\n        let checkInputs = options.map(\n            (option) => {\n                let valueProps = {};\n\n                if (defaultValue)\n                    valueProps.defaultChecked = defaultValue.includes(option.value);\n\n                if (value)\n                    valueProps.checked = value.includes(option.value);\n\n                return (\n                    <div className={inputClass} key={option.value}>\n                        <RadioCheckInput \n                            type=\"checkbox\"\n                            name={props.name}\n                            label={option.label}\n                            value={option.value}\n                            {...valueProps}\n                            onChange={props.onChange}\n                        />\n                    </div>\n                );\n            }\n        );\n\n        return (\n            <div className={error ? \"form-group error\" : \"form-group\"}>\n                <label>{label} {props.required && <span className=\"required-label\">*</span>}</label>\n                {checkInputs}\n                {helpSpan}\n                {errorSpan}\n            </div>\n        );\n\n    }\n\n    return (\n        <div className={error ? \"form-group form-check form-check-inline error\" : \"form-group form-check form-check-inline\"}>\n            <CheckBoxInput\n                label={label}\n                {...props}\n            />\n            {helpSpan}\n            {errorSpan}\n        </div>\n    );\n}\n\n\n\nexport class Typeahead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: this.props.value || this.props.defaultValue || '',\n            isShown: false,\n            focusOptionIndex: -1,\n            options: []\n        };\n\n        this.inputRef = React.createRef();\n    }\n\n    handleChange = (e) => {\n        this.setState({value: e.target.value});\n        this.props.loadOptions(e.target.value, this.updateOptions);\n    }\n\n    updateOptions = (options) => {\n        this.setState({options: options.concat()});\n    }\n\n    handleFocus = (e) => {\n        this.setState({isShown: true});\n    }\n\n    handleBlur = (e) => {\n        e.persist()\n        this.setState({isShown: false, focusOptionIndex: -1});\n    }\n\n    handleMouseDown = (e) => {\n        e.preventDefault();\n    }\n\n    handleOptionSelect = (index) => {\n        let option = this.state.options[index];\n\n        this.inputRef.current.blur();\n        this.setState({value: option.label});\n\n        this.props.onOptionSelect(option);\n    }\n\n    handleKeyDown = (e) => {\n        const key = e.keyCode;\n        const focusOptionIndex = this.state.focusOptionIndex;\n        const maxIndex = this.state.options.length - 1;\n        if (key === 38) {\n            // up arrow\n            if (focusOptionIndex > -1) {\n                this.setState({\n                    focusOptionIndex: focusOptionIndex - 1\n                });\n            }\n        } else if (key === 40) {\n            // down arrow\n            if (focusOptionIndex < maxIndex) {\n                this.setState({\n                    focusOptionIndex: focusOptionIndex + 1\n                });\n            }\n        } else if (key === 13) {\n            // enter\n            e.preventDefault();\n\n            if (focusOptionIndex > -1 && focusOptionIndex <= maxIndex && this.state.isShown) {\n                this.setState({\n                    focusOptionIndex: -1,\n                    isShown: false\n                });\n                this.handleOptionSelect(focusOptionIndex);\n            } \n        } else {\n            if (key !== 13 && this.state.focusOptionIndex !== -1) {\n                //this.state.focusOptionIndex = -1;\n                \n                this.setState({\n                    focusOptionIndex: -1\n                });\n            }\n        }\n        return;\n    }\n\n    render() {\n        let options = null;\n\n        if (this.state.isShown && this.state.options.length) {\n            options = this.state.options.map((option, index) => {\n                return (\n                    <div \n                        className={this.state.focusOptionIndex === index ? \"typeahead__option typeahead__option--is-focused\" : \"typeahead__option\"} \n                        key={option.value}\n                        tabIndex={-1}\n                        onClick={(e) => this.handleOptionSelect(index)}\n                        onMouseDown={this.handleMouseDown}\n                    >\n                        <span className=\"typeahead__option__title\">{option.label}</span>\n                        <span className=\"typeahead__option__extra-data\">{option.extraData}</span>\n                    </div>\n                );\n            });\n        }\n\n        return (\n            <div className=\"typeahead\">\n                <FormInput \n                    label={this.props.label}\n                    placeholder={this.props.placeholder}\n                    type={this.props.type || 'text'}\n                    value={this.state.value}\n                    error={this.props.error}\n                    name={this.props.name}\n                    helpText={this.props.helpText}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    onKeyDown={this.handleKeyDown}\n                    inputRef={this.inputRef}\n\n                    onChange={this.handleChange}\n                    required={this.props.required}\n                    readOnly={this.props.readOnly}\n                />\n                <div className={options ? \"typeahead__options typeahead__options--shown\" : \"typeahead__options\"}>\n                    {options}\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {ReverseLink} from '../utils.js';\nimport Icon from './icons.js';\nimport {RadioCheckInput} from './forms.js';\n\n\nfunction TableHead(props) {\n    let checkboxTh = (\n            <th className=\"checkbox-col\">\n                <RadioCheckInput \n                    type=\"checkbox\"\n                    checked={props.checked} \n                    onChange={props.onCheckChange} \n                    disabled={!props.isCheckable} \n                />\n            </th>);\n\n    let thWidths = props.thWidths || [];\n\n    return (\n        <thead>\n            <tr>\n                {checkboxTh}\n                {props.th.map((th, index) => {\n                    let width = thWidths[index];\n                    let thCls = width ? 'thcol-' + width : null;\n                    return <th key={th} className={thCls}>{th}</th>;\n                    })\n                }\n                {props.hasActions ? \n                    <th key={'actions'} className={thWidths.length > props.th.length && 'thcol-' + thWidths[props.th.length]}>Actions</th> \n                    : null\n                }\n            </tr>\n        </thead>\n    );\n}\n\n\nfunction TableRow (props) {\n    let checkboxTd = (\n            <td className=\"checkbox-col\">\n                <RadioCheckInput\n                    type=\"checkbox\" \n                    checked={props.checked} \n                    onChange={props.onCheckChange} \n                    disabled={!props.isCheckable}\n                />\n            </td>);\n\n    return (\n        <tr className={props.flash ? \"flash\" : null}>\n            {checkboxTd}\n            {props.children}\n        </tr>\n    );\n}\n\n\nexport default class Table extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            headChecked: false,\n            rowsChecked: []\n        }\n\n        this.handleHeadCheck = this.handleHeadCheck.bind(this);\n        this.handleRowCheck = this.handleRowCheck.bind(this);\n    }\n\n    handleHeadCheck(e) {\n        let checkedIds = [];\n        if (e.target.checked === true) {\n            checkedIds = this.props.data.map((item) => item.id);\n        }\n        this.props.tableCheckCallback(checkedIds);\n\n        this.setState({headChecked: e.target.checked, rowsChecked: []});\n\n    }\n\n    handleRowCheck(e, id) {\n        let rowsChecked = this.state.rowsChecked;\n\n        if (e.target.checked) {\n            rowsChecked.push(id);\n            this.setState({rowsChecked: rowsChecked});\n        }\n        else {\n            let rowIndex = rowsChecked.indexOf(id);\n            if (rowIndex > -1) {\n                rowsChecked.splice(rowIndex, 1);\n                this.setState({rowsChecked: rowsChecked});\n            } else if (this.state.headChecked) {\n                for (let i = 0; i < this.props.data.length; i++) {\n                    let _id = this.props.data[i].id;\n                    if (_id !== id)\n                        rowsChecked.push(_id)\n                }\n\n                this.setState({rowsChecked: rowsChecked, headChecked: false});\n            }\n        }\n\n\n        this.props.tableCheckCallback(rowsChecked);\n    }\n\n    getTableRowURI = () => {\n        let queryString = window.location.search;\n\n        if (queryString.length)\n            return this.props.tableRowURI + '?_list_filters=' + encodeURIComponent(queryString);\n\n        return this.props.tableRowURI;\n    }\n\n    renderForMobile = () => {\n\n        let hasActions = this.props.tableRowActions ? true : false;\n        let colCls = this.props.tableColCls || [];\n\n        let cards = this.props.data.map((row) => {\n\n            let cols = [];\n\n            for (let j = 0; j < this.props.tableCols.length; j++) {\n\n                let colKey = 'col_' + j + '_' + row.id;\n\n                let label = this.props.tableTh[j];\n\n                let val = row[this.props.tableCols[j]];\n\n                if (typeof val === 'boolean') {\n                    val = val ? <Icon name=\"check-circle\" className=\"table-col-icon text-success\" /> : <Icon name=\"x-circle\" className=\"table-col-icon text-error\" />;\n                }\n\n                let colClass = colCls[j];\n\n                if (!colClass) {\n                    if (j === 0)\n                        colClass = 'col-12';\n                    else \n                        colClass = 'col-6';\n                }\n\n                cols.push(\n                    <div key={colKey} className={colClass}>\n                        <span className=\"col-label\">{label}</span>\n                        <span className={j === 0 ? \"item-title\" : \"\"}>{val}</span>\n                    </div>\n                );\n\n            }\n\n            let actionsCol = null;\n            if (hasActions)\n                actionsCol = <div className=\"col-12 actions-col\">{this.props.tableRowActions(row)}</div>;\n\n            if (this.props.tableRowURI) {\n                return (\n                    <div key={row.id}>\n                        <ReverseLink \n                            to={this.getTableRowURI()} \n                            args={{id: row.id}}\n                            className=\"table-item-card\"\n                        >\n                            <div className=\"row\">{cols}</div>\n                            <div className=\"caret\"><Icon name=\"chevron-right\" /></div>\n                        </ReverseLink>\n                    </div>\n                );\n            } else {\n                return (\n                    <div key={row.id}>\n                        <div className=\"table-item-card\">\n                            <div className=\"row\">{cols}{actionsCol}</div>\n                        </div>\n                    </div>\n                );\n            }\n        });\n\n        return (\n            <div>\n                {cards}\n            </div>\n        );\n    }\n\n    render() {\n        const isMobile = window.innerWidth < 576;\n\n        if (this.props.data.length < 1) {\n            return (\n                <div className=\"well\">\n                    <h1>Nothing here</h1>\n                </div>\n            );\n        }\n\n        if (isMobile)\n            return this.renderForMobile();\n\n        let head;\n        let hasActions = this.props.tableRowActions ? true : false;\n        let isCheckable = this.props.tableCheckable ? true : false;\n        if (this.props.tableTh)\n            head = <TableHead \n                        th={this.props.tableTh} \n                        checked={this.state.headChecked}\n                        onCheckChange={this.handleHeadCheck} \n                        hasActions={hasActions}\n                        isCheckable={isCheckable}\n                        thWidths={this.props.tableThWidths}\n                    />\n\n        let flashRows = this.props.flashRows || [];\n        let rows = [];\n\n        for (let i = 0; i < this.props.data.length; i++) {\n\n            let row = this.props.data[i];\n\n            let cols = [];\n\n            for (let j = 0; j < this.props.tableCols.length; j++) {\n\n                let colKey = 'col_' + j + '_' + row.id;\n\n                if (this.props.tableRowURI && j === 0)\n                    cols.push(\n                        <td key={colKey}>\n                            <ReverseLink to={this.getTableRowURI()} args={{id: row.id}}>{row[this.props.tableCols[j]]}</ReverseLink>\n                        </td>\n                    );\n                else {\n                    let val = row[this.props.tableCols[j]];\n                    \n                    if (typeof val === 'boolean') {\n                        val = val ? <Icon name=\"check-circle\" className=\"table-col-icon text-success\" /> : <Icon name=\"x-circle\" className=\"table-col-icon text-error\" />;\n                    } \n\n                    cols.push(<td key={colKey}>{val}</td>);\n                }\n\n            }\n\n            let actionsTd = null;\n            if (hasActions)\n                actionsTd = <td>{this.props.tableRowActions(row)}</td>;\n\n            rows.push(\n                <TableRow \n                    key={row.id} \n                    checked={this.state.headChecked || this.state.rowsChecked.indexOf(row.id) > -1} \n                    onCheckChange={(e) => this.handleRowCheck(e, row.id)}\n                    isCheckable={isCheckable}\n                    flash={flashRows.includes(i)}\n                >\n                    {cols}\n                    {actionsTd}\n                </TableRow>);\n        }\n\n        return (\n            <table>\n                {head}\n                <tbody>\n                    {rows}\n                </tbody>\n            </table>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport Icon from './icons.js';\nimport {DropdownButton} from './buttons.js';\n\n\nexport default class TableToolbar extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {    \n        return (\n            <div className=\"toolbar\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-4\">\n                        <ListSearch />\n                    </div>\n                    <div className=\"col-12 col-md-8 text-right toolbar-buttons\">\n                        <ListFilter />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nclass _ListSearch extends Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            searchVal: '',\n            activeQuery: '',\n            focussed: false\n        };\n\n        this.handleSearchChange = this.handleSearchChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.clearSearch = this.clearSearch.bind(this);\n        this.updateSearch = this.updateSearch.bind(this);\n\n        this.input = React.createRef();\n    }\n\n    handleSearchChange(e) {\n        this.setState({searchVal: e.target.value});\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        //this.updateSearch();\n    }\n\n    updateSearch() {\n        /*\n        When a user searches something, the `page` number should be removed \n        from the queryString so the user is taken to first page of search results.\n\n        :TODO: reload page if searching for same thing twice.\n        */\n\n        let q = this.state.searchVal;\n        let queryString = new URLSearchParams(this.props.location.search);\n\n        if (q === '') {\n            queryString.delete('q');\n        } else {\n            queryString.set('q', q);\n        }\n\n        queryString.delete('page');\n        \n        this.setState({activeQuery: q});\n\n        this.props.history.push(this.props.location.pathname + '?' + queryString.toString());  \n    }\n\n    clearSearch(e) {\n        this.setState(\n            {searchVal: '', activeQuery: ''}, \n            () => this.updateSearch()\n        );\n    }\n\n    componentDidMount() {\n        let queryString = new URLSearchParams(this.props.location.search);\n        let q = queryString.get('q') || '';\n        if (q !== '') {\n            this.setState({searchVal: q, activeQuery: q});\n        }\n    }\n\n    handleFocus = (e) => {\n        this.setState({\n            focussed: true\n        });\n\n        this.input.current.focus();\n    }\n\n    handleBlur = (e) => {\n        this.setState({\n            focussed: false\n        });\n\n        this.input.current.blur();\n    } \n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span \n                            className={this.state.focussed ? \"input-group-text focussed\" : \"input-group-text\"}\n                            onClick={this.handleFocus}\n                        >\n                            <Icon name='search' />\n                        </span>\n                    </div>\n                    <input \n                        type=\"text\" name=\"q\" className=\"form-control icon-prepend\" placeholder=\"Search...\"\n                        autoFocus={this.state.focussed}\n                        onFocus={this.handleFocus}\n                        onBlur={this.handleBlur}\n                        ref={this.input}\n                        value={this.state.searchVal} onChange={this.handleSearchChange} />\n                </div>\n            </form>\n        );\n    }\n}\n\nconst ListSearch = withRouter(_ListSearch);\n\n\nfunction ListFilter() {\n    return (\n            <button className='btn default dropdown'>\n                <Icon name='sliders' /> Filters\n            </button>\n        );\n\n}","import React, {Component} from 'react';\nimport Loader from './loaders.js';\nimport Icon from './icons.js';\nimport {CSSTransitionGroup} from 'react-transition-group';\n\n\nclass ToastService {\n    constructor() {\n        this.toasts = new Set();\n    }\n\n    register(toast) {\n        this.toasts.add(toast);\n        return () => this.unregister(toast);\n    }\n\n    unregister(toast) {\n        this.toasts.forEach((tst) => {\n            if (tst === toast) {\n                this.toasts.delete(toast);\n            }\n        });\n    }\n\n    success(message) {\n        this.toasts.forEach(toast => {\n            toast.showToast(message, 'success');\n        });\n    }\n\n    error(message) {\n        this.toasts.forEach(toast => {\n            toast.showToast(message, 'error');\n        });\n    }\n\n    showLoader() {\n        this.toasts.forEach(toast => {\n            toast.showLoaderToast();\n        });\n    }\n\n    hideLoader() {\n        this.toasts.forEach(toast => {\n            toast.hideLoaderToast();\n        });\n    }\n\n    showConnectionError(retryCallback) {\n        this.toasts.forEach(toast => {\n            toast.showConnectionError(retryCallback);\n        })\n    }\n\n    hideConnectionError() {\n        \n    }\n\n    hideAll() {\n        this.toasts.forEach(toast => {\n            toast.hideAll();\n        });\n    }\n\n    hideError() {\n        this.toasts.forEach(toast => {\n            toast.hideError();\n        });\n    }\n}\n\n\nexport const toastService = new ToastService();\n\n\nexport class ToastContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.timer = null;\n        this.toastService = toastService;\n        //this.mounted = false;\n\n        this.state = {\n            message: null,\n            type: null,\n            loader: false,\n            connectionError: false,\n            retryCallback: null\n        }\n\n        this.showToast = this.showToast.bind(this);\n        this.showLoaderToast = this.showLoaderToast.bind(this);\n        this.hideLoaderToast = this.hideLoaderToast.bind(this);\n        this.hasToast = this.hasToast.bind(this);\n        this.unregister = this.toastService.register(this);\n        this.closeToast = this.closeToast.bind(this);\n        this.closeConnectionErrorToast = this.closeConnectionErrorToast.bind(this);\n    }\n\n    componentDidMount() {\n        //this.mounted = true;\n    }\n\n    componentWillUnmount() {\n        this.unregister();\n    }\n\n    showToast(message, type) {\n        clearTimeout(this.timer);\n\n        this.setState({\n            message: message,\n            type: type,\n            loader: false,\n            connectionError: false,\n            retryCallback: null\n        });\n\n        if (type === 'success')\n            this.timer = setTimeout(this.closeToast, 5000);\n    }\n\n    showLoaderToast() {\n        this.setState({\n            //message: null,\n            //type: null,\n            loader: true,\n            connectionError: false,\n            retryCallback: null\n        });\n    }\n\n    hideLoaderToast() {\n        this.setState({\n            //message: null,\n            //type: null,\n            loader: false\n        });\n    }\n\n    showConnectionError(retryCallback) {\n        this.setState({\n            loader: false,\n            message: null,\n            type: null,\n            connectionError: true,\n            retryCallback: retryCallback\n        });\n    }\n\n    hideError() {\n        if (this.hasToast() && this.state.type === 'error') {\n            this.setState({\n                message: null,\n                type: null,\n                loader: false\n            });\n        }\n    }\n\n    hideAll() {\n        if (this.hasToast()) {\n            this.setState({\n                message: null,\n                type: null,\n                loader: false\n            });\n        }\n    }\n\n    hasToast() {\n        if (this.state.loader || this.state.message || this.connectionError)\n            return true;\n        return false;\n    }\n\n    _componentDidUpdate() {\n        if (this.hasToast) {\n            clearTimeout(this.timer);\n            this.timer = setTimeout(this.props.hideToast, 5000);\n        }\n    }\n\n    closeToast(e) {\n        this.setState({\n            message: null,\n            type: null\n        });\n    }\n\n    closeConnectionErrorToast(e) {\n        this.setState({\n            message: null,\n            type: null,\n            connectionError: false\n        });\n    }\n\n\n    render() {\n        let toast = null;\n        if (this.state.loader) {\n            toast = <LoaderToast key={'loader'} />;\n        } else if (this.state.connectionError) {\n            toast = (\n                <ConnectionErrorToast \n                    key={'connerror'} \n                    onRetry={this.state.retryCallback} \n                    onClose={this.closeConnectionErrorToast} \n                />\n            );\n        }\n\n        let toast2 = null;\n        if (this.state.message && !this.state.connectionError) {\n            toast2 = <Toast \n                        key={'toast'}\n                        message={this.state.message} \n                        type={this.state.type}\n                        onClose={this.closeToast}\n                    />;\n        }\n\n        return (\n            <div className=\"toast-container\">\n                <CSSTransitionGroup\n                    transitionName=\"toast-animate\"\n                    transitionEnterTimeout={100}\n                    transitionLeaveTimeout={100}\n                    component=\"div\" className=\"toast-container\"\n                >\n                    {toast}\n                    {toast2}\n                </CSSTransitionGroup>\n            </div>\n        );\n    }\n\n}\n\nexport function Toast(props) {\n\n    let type = '';\n    if (props.type)\n        type = props.type;\n\n    let icon = null;\n    if (type === 'success') {\n        icon = <Icon name=\"check\" />;\n    } else if (type === 'error') {\n        icon = <Icon name=\"exclamation-octagon\" />;\n    }\n\n    return (\n        <div className={\"toast \" + type}>\n            <div className=\"icon\">{icon}</div>\n            <div className=\"message\">{props.message}</div>\n            <div className=\"close\">\n                <button onClick={props.onClose}>&times;</button>\n            </div>\n        </div>\n    );\n}\n\nexport function LoaderToast() {\n    return (\n        <div className=\"toast loader-toast\">\n            <div className=\"message\">\n                <Loader /> Loading\n            </div>\n        </div>\n    );\n}\n\nexport function ConnectionErrorToast(props) {\n    return (\n        <div className=\"toast error\">\n            <div className=\"icon with-btn\"><Icon name=\"exclamation-octagon\" /></div>\n            <div className=\"message\">\n                Check your internet connection.{' '}\n                <button className=\"btn link\" onClick={props.onRetry}>Try again</button>\n            </div>\n            <div className=\"close\">\n                <button onClick={props.onClose}>&times;</button>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\n\n\nexport function SkeletonInput() {\n    return (\n        <div className=\"placeholder ph-input\"></div>\n    );\n}\n\nexport function SkeletonButton() {\n    return (\n        <div className=\"placeholder ph-button\"></div>\n    );\n}\n\nexport function SkeletonButtonRight() {\n    return (\n        <div className=\"placeholder ph-button ph-right\"></div>\n    );\n}\n\nexport function SkeletonTable() {\n    return (\n        <div className=\"skeleton-table table-container\">\n            <div className=\"row header\">\n                <div className=\"col-md-4 col-12\">\n                    <SkeletonInput />\n                </div>\n                <div className=\"col-md-8 col-12 text-right d-none d-md-block\">\n                    <SkeletonButton />\n                </div>\n                <div className=\"col-md-8 col-12 d-md-none\">\n                    <SkeletonButton />\n                </div>\n            </div>\n\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((i) => (\n            <div className=\"row\" key={i}>\n                <div className=\"col-md-1 col-12 d-none d-md-block\"><div className=\"placeholder ph-checkbox\"></div></div>\n                <div className=\"col-md-6 col-12 d-none d-md-block\"><div className=\"placeholder ph-line\"></div></div>\n                <div className=\"col-md-2 col-12\"><div className=\"placeholder ph-line\"></div></div>\n                <div className=\"col-md-3 col-12\"><div className=\"placeholder ph-line\"></div></div>\n            </div>\n            ))\n            }\n        </div>\n    );\n}\n\n\nexport function SkeletonForm(props) {\n    let fields = [];\n\n    for (let i = 0; i < props.fields; i++) {\n        fields.push(\n            <div className=\"placeholder-field\" key={i}>\n                <div className=\"placeholder-label placeholder\"></div>\n                <SkeletonInput />\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"skeleton-form\">\n            <div className=\"row\">\n                <div className=\"col-md-5\">{fields}</div>\n                <div className=\"col-12\">\n                    <div className=\"placeholder-buttons\">\n                        <SkeletonButton />\n                        <SkeletonButton />\n                        <SkeletonButtonRight />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport Icon from './icons.js';\n\n\n\nfunction _Pagination(props) {\n    let total_count = props.total_count;\n    let per_page = props.per_page;\n    \n    //let offset = props.offset;\n    //let currentPage = Math.ceil(offset / per_page) + 1;\n    let currentPage = props.currentPage;\n\n    let total_pages = Math.ceil(total_count / per_page);\n\n    if (currentPage > total_pages || currentPage < 1)\n        currentPage = 1;\n\n    let queryString = new URLSearchParams(props.location.search);\n    //queryString.delete('page');\n    //queryString = queryString.toString();\n\n    let prevArrow;\n    if (currentPage === 1) \n        prevArrow = <span><Icon name=\"chevron-left\" /></span>;\n    else {\n        queryString.set('page', currentPage - 1);\n        prevArrow = <Link to={{search: queryString.toString()}} onClick={props.onPageClick}><Icon name=\"chevron-left\" /></Link>;\n    }\n\n    let nextArrow;\n    if (currentPage === total_pages || total_pages === 0) \n        nextArrow = <span><Icon name=\"chevron-right\" /></span>;\n    else {\n        queryString.set('page', currentPage + 1);\n        nextArrow = <Link to={{search: queryString.toString()}} onClick={props.onPageClick}><Icon name=\"chevron-right\" /></Link>;\n    }\n\n    let pages = []\n\n    if (total_pages < 8) {\n        for (let i = 1; i <= total_pages; i++) {\n            if (i === currentPage)\n                pages.push(<span className=\"active\" key={i}>{i}</span>);\n            else {\n                queryString.set('page', i)\n                pages.push(<Link to={{search: queryString.toString()}} key={i} onClick={props.onPageClick}>{i}</Link>);\n            }\n        }\n    } else {\n        let _pages = new Set();\n        \n        _pages.add(1);\n\n        if (currentPage === 1) {\n            _pages.add(2);\n            _pages.add(3);\n        }\n        else if (currentPage === total_pages) {\n            _pages.add(total_pages - 2);\n            _pages.add(total_pages - 1);\n        }\n        else {\n            _pages.add(currentPage - 1);\n            _pages.add(currentPage);\n            _pages.add(currentPage + 1);\n        }\n\n        _pages.add(total_pages);\n\n        for (let i of _pages) {\n            if (i !== 1) {\n                if (!_pages.has(i - 1))\n                    pages.push(<span key={i-1}>...</span>);\n            }\n\n            if (i === currentPage)\n                pages.push(<span className=\"active\" key={i}>{i}</span>);\n            else {\n                queryString.set('page', i);\n                pages.push(<Link to={{search: queryString.toString()}} key={i} onClick={props.onPageClick}>{i}</Link>);\n            }\n        }\n    }\n\n    return (\n        <div className=\"pagination\">\n            {prevArrow}\n            {pages}\n            {nextArrow}\n            <span>(Total: {total_count})</span>\n        </div>\n    );\n} \n\n\nconst Pagination = withRouter(_Pagination);\n\nexport default Pagination;","import Loader from './loaders.js';\n\n\nexport function Splash(props) {\n    return (\n        <div className=\"splash\">\n            <img src={process.env.PUBLIC_URL + \"/static/django_candy/img/logo-splash.png\"} alt={window.candy.site_name} />\n            \n            <Loader />\n        </div>\n    );\n}\n\n\nexport function ErrorSplash(props) {\n    return (\n        <div className=\"splash text-center\">\n            <img src={process.env.PUBLIC_URL + \"/static/django_candy/img/error-splash.png\"} alt=\"Error\" />\n            <h2>{props.msg || 'Something went wrong. Try again'}</h2>\n            {\n                props.retryCallback ? \n                <p>\n                    <button className=\"btn link\" onClick={props.retryCallback}>\n                        {props.retryBtnText || 'Try Again'}\n                    </button>\n                </p> \n                : \n                null\n            }\n        </div>\n    );\n}","import {PageHeader} from '../components';\n\nexport function Page404(props) {\n    return (\n        <div className=\"main\">\n            <PageHeader hideSubnav={true} title=\"404 Page not found\" location={props.location} />\n            <div className=\"content\">\n                <p className=\"lead\">\n                    The requested page doesn't exist. \n                </p>\n            </div>\n        </div>\n    );\n}","import React, {Component} from 'react';\nimport {Route, Switch, Link} from 'react-router-dom';\nimport API from '../api.js';\nimport URLS from '../urlconf.js';\nimport {joinPaths, capitalize} from '../utils.js';\nimport {PageHeader, TableToolbar, Table, Pagination, toast, SkeletonTable} from '../components';\nimport {Page404} from './errors.js';\n\n\nexport default class ModelPageGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.list_url = joinPaths(this.props.match.url, '/');\n        this.add_url = joinPaths(this.props.match.url, '/add/');\n        this.edit_url = joinPaths(this.props.match.url, '/:id/edit/');\n    }\n\n    componentDidMount() {\n        // make api request to fetch mdoel's metadata\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // the component won't remount\n        // if the model parameter changed in url\n        // so need to refetch the new model's metadata\n    }\n\n    render() {\n        let permissions = {can_add: true}\n\n        let app_label = this.props.match.params.app_label;\n        let model_param = this.props.match.params.model_name;\n\n        if (!this.props.initData.apps.hasOwnProperty(app_label))\n            return <Page404 location={this.props.location} />\n\n        const app = this.props.initData.apps[app_label];\n\n        if (!app.models.hasOwnProperty(model_param))\n            return <Page404 location={this.props.location} />;\n\n\n        const model = app.models[model_param];\n\n\n        return (\n            <div className=\"main\">\n                <Route render={(props) => <PageHeader {...props} \n                        title={capitalize(model.verbose_name_plural)}\n                        list_url={URLS.model_list}\n                        edit_url={URLS.model_edit}\n                        add_url={URLS.model_add}\n                        onRefresh={this.refreshPage}\n                        permissions={permissions}\n                        />\n                    } \n                />\n                <Switch>\n                    <Route \n                        path={URLS.model_list}\n                        exact\n                        render={(props) => <ListPage {...props} model={model} key={model.endpoint} />} \n                    />\n                    <Route \n                        path={URLS.model_add} \n                        exact \n                        render={(props) => <AddPage {...props} model={model} />} \n                    />\n                    <Route \n                        path={URLS.model_edit} \n                        exact \n                        render={(props) => <EditPage {...props} model={model} />} \n                    />\n                    <Route>\n                        <p>404 Page Not Found.</p>\n                        <p>This page doesn't exist.</p>\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport class ListPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: null,\n            loading: true,\n            limit: 20\n        };\n\n        this.api_endpoint = this.props.model.endpoint;\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n        \n        toast.showLoader();\n\n        let api = new API(this.api_endpoint);\n\n        api.getList()\n        .then((response) => {\n            this.setState({data: response.data, loading: false});\n            toast.hideAll();\n        })\n        .catch((err) => {\n            console.log(err);\n            this.setState({loading: false});\n            toast.error('Something went wrong. Try again.')\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentWillUnmount() {\n        toast.hideLoader();\n    }\n\n    getCurrentPage = () => {\n        let params = new URLSearchParams(this.props.location.search);\n        let page = Number(params.get('page')) || 1;\n        return page;\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <div className=\"content\"><SkeletonTable /></div>;\n        }\n\n        return (\n            <div className=\"content\">\n                <div className=\"table-container\">\n                    <TableToolbar />\n                    <div className=\"table-outer\">\n                        <Table\n                            data={this.state.data.results}\n                            tableCols={this.props.model.list_display}\n                            tableTh={this.props.model.list_display_labels}\n                            tableColCls={[]}\n                            tableThWidths={[]}\n                            tableRowURI={':id/edit/'}\n                            tableRowActions={null}\n                            tableCheckable={true}\n                            tableCheckCallback={() => null}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <Pagination \n                            total_count={this.state.data.count}\n                            per_page={this.state.data.count}\n                            currentPage={this.getCurrentPage()}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport function AddPage(props) {\n    return (\n        <h2>:TODO:</h2>\n    );\n}\n\n\nexport function EditPage(props) {\n    return (\n        <h2>:TODO:</h2>\n    );\n}\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {capitalize, ReverseLink} from '../utils.js';\nimport {PageHeader} from '../components';\nimport ModelPageGroup from './model.js';\nimport {Page404} from './errors.js';\nimport URLS from '../urlconf.js';\n\n\nexport default class AppPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let app_label = this.props.match.params.app_label;\n\n        if (!this.props.initData.apps.hasOwnProperty(app_label)) {\n            return <Page404 location={this.props.location} />;\n        }\n\n        let app = this.props.initData.apps[app_label];\n\n        return (\n            <div className=\"main\">\n                <PageHeader hideSubnav={true} title={app.verbose_name} location={this.props.location} />\n\n                <div className=\"content\">\n                    {Object.keys(app.models).map((key) => {\n                        let model = app.models[key];\n\n                        return (\n                            <div key={app_label + '.' + model.name}>\n                                <ReverseLink \n                                    to={URLS.model_list} \n                                    args={{\n                                        base_url: this.props.match.params.base_url, \n                                        app_label: app_label, \n                                        'model_name': model.name\n                                    }}\n                                >\n                                    {capitalize(model.verbose_name_plural)}\n                                </ReverseLink>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport {PageHeader} from '../components';\n\nexport default function HomePage(props) {\n    return (\n        <div className=\"main\">\n            <PageHeader \n                title=\"Home\" \n                hideSubnav={true}\n                location={props.location}\n            />\n        <div className=\"content\">\n        </div>\n        </div>\n    );\n}","import React, { Component } from 'react';\nimport {Route, Switch, BrowserRouter, withRouter, Redirect} from 'react-router-dom';\nimport API from './api.js';\nimport URLS from './urlconf.js';\nimport {HomePage, AppPage, ModelPageGroup} from './pages';\nimport {Nav, ToastContainer, Loader, Splash, ErrorSplash} from './components';\nimport './App.scss';\n\n\nclass _App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            initData: null,\n            errorMsg: null\n        }\n\n\n        if (!window.hasOwnProperty('candy'))\n            window.candy = {\n                site_name: 'Candy',\n                base_admin_url: '/candy/',\n            };\n\n        this.base_admin_url = window.candy.base_admin_url;\n    }\n\n    componentDidMount() {\n        if (this.props.location.pathname === '/') {\n            this.props.history.replace(this.base_admin_url);\n        }\n\n\n        if (!this.props.location.pathname.startsWith(this.base_admin_url) && \n            this.props.location.pathname !== '/') {\n            this.setState({loading: false});\n            return;\n        }\n\n        this.getInitData();\n    }\n\n    getInitData = () => {\n        let api = new API('init');\n\n        api.getList()\n        .then((response) => {\n            this.setState({\n                loading: false,\n                initData: response.data,\n                errorMsg: null\n            });\n        })\n        .catch((err) => {\n            console.log(err)\n            this.setState({\n                loading: false,\n                errorMsg: 'Something went wrong'\n            })\n        })\n    }\n\n    retryApi = () => {\n        this.setState({loading: true});\n        this.getInitData();\n    }\n\n    render() {\n        if (this.state.loading)\n            return (<Splash />);\n\n        if (this.state.errorMsg)\n            return <ErrorSplash msg={this.state.errorMsg} retryCallback={this.retryApi} />;\n\n        if (!this.props.location.pathname.startsWith(this.base_admin_url))\n            return <ErrorSplash msg=\"404 Page not found\" />;\n\n        return (\n            <div className=\"container-fluid\">\n                <ToastContainer />\n                <Nav \n                    sideMenu={this.state.initData.side_menu} \n                    topMenu={this.state.initData.top_menu} \n                    location={this.props.location}\n                    match={this.props.match}\n                    history={this.props.history}\n                />\n                <div className=\"row\">\n                    <div className=\"col-12 px-0\">\n                        <Switch>\n                            <Route path={URLS.home} exact \n                                render={\n                                    (props) => <HomePage {...props} />\n                                } \n                            /> \n                            <Route path={URLS.app_index} exact\n                                render={\n                                    (props) => <AppPage {...props} initData={this.state.initData} />\n                                }\n                            />\n                            <Route path={URLS.model_list}\n                                render={\n                                    (props) => <ModelPageGroup {...props} initData={this.state.initData} />\n                                }\n                            />\n                        </Switch>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst App = withRouter(_App);\n\n\nexport default function AppExport({props}) {\n    return (\n        <BrowserRouter>\n            <Route path=\"/:base_url?\"\n                render={() => <App {...props} />}\n            />\n\n            <div className=\"footer\">\n                version {process.env.REACT_APP_VERSION}\n            </div>\n        </BrowserRouter>\n    );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}