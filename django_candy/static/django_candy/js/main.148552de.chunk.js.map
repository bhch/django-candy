{"version":3,"sources":["api.js","urlconf.js","utils.js","components/icons.js","components/loaders.js","components/buttons.js","components/navs.js","components/headers.js","components/forms.js","components/table.js","components/tableToolbar.js","components/toast.js","components/skeletons.js","components/pagination.js","components/splash.js","pages/errors.js","pages/model.js","pages/app.js","pages/home.js","pages/login.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_API_URL","window","candy","base_api_url","axios","defaults","withCredentials","API","name","this","endpoint","document","cookie","split","filter","item","trim","indexOf","length","csrftoken","headers","common","data","queryString","Promise","resolve","reject","post","then","response","catch","error","id","delete","patch","undefined","get","URLS","home","app_index","model_list","model_add","model_edit","capitalize","string","charAt","toUpperCase","substr","toLowerCase","joinPaths","_paths","i","path","endsWith","startsWith","push","join","CACHED_REGEXP","reverse","to","args","toPath","qs","compile","ReverseLink","props","children","ReverseNavLink","Icon","className","Loader","Button","React","forwardRef","ref","loader","loading","type","disabled","onClick","DropdownButton","handleClickOutside","event","container","current","contains","target","state","shown","setState","selected","selectedIndex","selectedOnce","getBtnClass","bind","toggleMenu","createRef","caret","value","index","autoChange","onChange","prevProps","prevState","addEventListener","removeEventListener","placement","menu","options","map","onSelect","e","onOptionClick","label","icon","selectLabel","transitionName","transitionEnterTimeout","transitionLeaveTimeout","Component","Nav","toggleNav","open","body","classList","toggle","handleLinkClick","instance","remove","base_url","match","params","src","alt","site_name","handleLogout","user","exact","sideMenu","app","verbose_name","app_label","models","model","model_name","menu_label","SubNav","Children","child","PageHeader","title","location","pathname","backBtn","list_filters","URLSearchParams","search","matchPath","edit_url","add_url","list_url","hideSubnav","permissions","can_add","onRefresh","FormInput","helpText","required","inputRef","helpSpan","errorSpan","RadioCheckInput","TableHead","checkboxTh","checked","onCheckChange","isCheckable","thWidths","th","width","thCls","hasActions","TableRow","checkboxTd","flash","Table","getTableRowURI","tableRowURI","encodeURIComponent","renderForMobile","tableRowActions","colCls","tableColCls","cards","row","cols","j","tableCols","colKey","tableTh","val","colClass","actionsCol","headChecked","rowsChecked","handleHeadCheck","handleRowCheck","checkedIds","tableCheckCallback","rowIndex","splice","_id","head","isMobile","innerWidth","tableCheckable","tableThWidths","flashRows","rows","actionsTd","includes","TableToolbar","toolbarToolsRef","ListSearch","ListFilter","toolsRef","filters","_ListSearch","handleSearchChange","searchVal","handleSubmit","preventDefault","updateSearch","q","set","activeQuery","history","toString","clearSearch","handleFocus","focussed","input","focus","handleBlur","blur","onSubmit","placeholder","autoFocus","onFocus","onBlur","withRouter","ListFilterButtons","getFilterBtnClass","filterApplied","toolsShown","clearBtn","clearFilters","toggleFilterTools","ListFilterTools","isShown","ReactDOM","createPortal","_ListFilter","getFilterState","searchParams","getAll","formData","FormData","append","showTools","oldQueryString","has","filterState","option","isChecked","String","defaultChecked","default","some","toastService","toasts","Set","toast","add","unregister","forEach","tst","message","showToast","showLoaderToast","hideLoaderToast","retryCallback","showConnectionError","hideAll","hideError","ToastContainer","timer","connectionError","hasToast","register","closeToast","closeConnectionErrorToast","clearTimeout","setTimeout","hideToast","LoaderToast","ConnectionErrorToast","onRetry","onClose","toast2","Toast","component","SkeletonInput","SkeletonButton","SkeletonTable","Pagination","total_count","per_page","currentPage","total_pages","Math","ceil","prevArrow","nextArrow","onPageClick","pages","_pages","Splash","ErrorSplash","msg","retryBtnText","Page404","ModelPageGroup","refreshPage","refresh","url","model_param","initData","apps","hasOwnProperty","render","verbose_name_plural","key","AddPage","EditPage","ListPage","queryApi","page","Number","limit","list_limit","offset","api_endpoint","getList","scrollTo","errorType","status","hasError","retryApi","getCurrentPage","showLoader","snapshot","hideLoader","results","list_display","list_display_labels","count","AppPage","Object","keys","HomePage","LoginPage","handleUsernameChange","username","errorUsername","handlePasswordChange","password","errorPassword","isSubmitting","errorGeneral","api","console","log","onLogin","errorMsg","year","Date","getFullYear","documentElement","autoCapitalize","_App","getInitData","authenticated","redirectToLogin","redirectToNext","next","base_admin_url","login_url","onLogout","preserveNext","defaultInitData","replace","side_menu","topMenu","top_menu","style","marginTop","App","AppExport","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.148552de.chunk.js","sourcesContent":["import axios from 'axios';\n\n\nexport var BASE_API_URL;\n\nif (process.env.NODE_ENV === 'production') {\n    BASE_API_URL = window.candy.base_api_url || '/candy/api/v1/';\n} else {\n    BASE_API_URL = 'http://localhost:8000/candy/api/v1/';\n}\n\n\nconst API_ENDPOINTS = {\n    init: BASE_API_URL + 'init/',\n\n    login: BASE_API_URL + 'login/',\n    logout: BASE_API_URL + 'logout/',\n\n    home: BASE_API_URL + 'home/',\n};\n\n\naxios.defaults.withCredentials = true;\n\nexport default class API {\n    constructor(name) {\n        this.endpoint = BASE_API_URL + name + '/';\n\n        if ((document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)).length) {\n            let csrftoken = document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)[0].split('=')[1];\n            if (csrftoken) {\n                axios.defaults.headers.common['X-CSRFTOKEN'] = csrftoken;\n            }\n        }\n    }\n\n    createEntity(data, queryString) {\n        let promise = new Promise((resolve, reject) => {\n            axios.post(this.endpoint + '?' + queryString, data)\n            .then((response) => {\n                resolve(response);\n            })\n            .catch((error) => {\n                reject(error);\n            });\n        });\n        \n        return promise;\n    }\n\n    deleteEntity(id, queryString) {\n        return axios.delete(this.endpoint + id + '/?' + queryString);\n    }\n\n    updateEntity(id, data, queryString) {\n        return axios.patch(this.endpoint + id + '/?' + queryString, data);\n    }\n\n    getList(queryString) {\n        if (queryString === undefined)\n            queryString = '';\n\n        return axios.get(this.endpoint + '?' + queryString);\n    }\n\n    getOne(id, queryString) {\n        if (queryString === undefined)\n            queryString = '';\n\n        let promise = new Promise((resolve, reject) => {\n            axios.get(this.endpoint + id + '/?' + queryString)\n            .then((response) => {\n                resolve(response);\n            })\n            .catch((error) => {\n                reject(error);\n            });\n        });\n\n        return promise;\n    }\n\n    /* basic methods */\n    post(endpoint, data) {\n        return axios.post(endpoint, data);\n    }\n}","const URLS = {\n    home: '/:base_url/',\n\n    app_index: '/:base_url/:app_label/',\n\n    model_list: '/:base_url/:app_label/:model_name/',\n    model_add: '/:base_url/:app_label/:model_name/add/',\n    model_edit: '/:base_url/:app_label/:model_name/:id(\\\\d+)/edit/',\n};\n\n\nexport default URLS;","import React from 'react';\nimport {Link, NavLink} from 'react-router-dom';\nimport {compile} from 'path-to-regexp';\n\n\n\nexport function capitalize(string) {\n    if (!string)\n        return '';\n    \n    return string.charAt(0).toUpperCase() + string.substr(1).toLowerCase();\n}\n\n\nexport function joinPaths(...paths) {\n    let _paths = [];\n    for (let i = 0; i < paths.length; i++) {\n        let path = paths[i];\n\n        if (path.length > 1) {\n            if(path.endsWith('/'))\n                path = path.substr(0, path.length - 1);\n        }\n\n        if (i > 0) {\n            if (path.startsWith('/'))\n                path = path.substr(1, path.length);\n        }\n\n        if (path == '/')\n            path = '';\n\n        _paths.push(path)\n    }\n\n    let path = _paths.join('/');\n\n    // append trailing slash\n    if (!path.endsWith('/'))\n        path += '/';\n\n    return path;\n}\n\n\nvar CACHED_REGEXP = {};\n\nexport function reverse(to, args) {\n    let toPath = CACHED_REGEXP[to];\n    let qs = ''; // querystring\n\n    if (typeof toPath === 'undefined') {\n        // split querystring\n        if (to.indexOf('?') > -1)\n            [to, qs] = to.split('?')\n\n        toPath = compile(to);\n        CACHED_REGEXP[to] = toPath;\n    }\n\n    let path = toPath(args);\n\n    return qs ? path + '?' + qs : path; \n}\n\n\nexport function ReverseLink({args, ...props}) {\n    props.to = reverse(props.to, args);\n\n    return <Link {...props}>{props.children}</Link>;\n}\n\n\nexport function ReverseNavLink({args, ...props}) {\n    props.to = reverse(props.to, args);\n\n    return <NavLink {...props}>{props.children}</NavLink>;\n}\n\n\nexport function requestErrorMsg(error) {\n    let errorType = 'CONNECTION_ERROR';\n\n    if (error.response)\n        errorType = error.response.status;\n\n    switch (errorType) {\n        case 400:\n            return {errorType: errorType, errorMsg: \"Something wen't wrong. Reload the page and try again\"};\n        case 401:\n            return {errorType: errorType, errorMsg: \"You need to log in to perform this action\"};\n        case 403: \n            return {errorType: errorType, errorMsg: \"You don't have permission to add or modify this object\"};\n        case 404: \n            return {errorType: errorType, errorMsg: \"This page or object doesn't exist or has been deleted\"};\n        case 405:\n            return {errorType: errorType, errorMsg: \"This operation is not permitted\"};\n        case 500:\n            return {errorType: errorType, errorMsg: \"500 Server Error. Contact administrator\"};\n        case 'CONNECTION_ERROR':\n            return {errorType: errorType, errorMsg: \"Check your Internet connection\"};\n        default:\n            return {errorType: errorType, errorMsg: \"Something wen't wrong. Try again\"};\n    }\n}","export default function Icon(props) {\n    let className = \"bi bi-\" + props.name;\n\n    if (props.className)\n        className = className + ' ' + props.className;\n\n    return <i className={className}></i>\n}","import React from 'react';\n\n\nexport default function Loader ({className, ...props}) {\n    if (!className)\n        className = '';\n\n    return <div className={\"loader circle \" + className} {...props}></div>;\n}\n","import React from 'react';\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport Loader from './loaders.js';\nimport Icon from './icons.js';\n\n\nexport const Button = React.forwardRef((props, ref) => {\n    let loader;\n    if (props.loading) {\n        loader = <Loader />;\n    }\n\n    let className = 'btn ' + props.className;\n\n    return (\n        <button className={className} type={props.type || 'button'}\n            disabled={props.loading || props.disabled ? true : false}\n            onClick={props.onClick}\n            ref={ref}\n        >\n            {props.children}{loader}\n        </button>\n    );\n});\n\n\nexport class DropdownButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: props.selectedIndex || 0,\n            shown: false,\n            selectedOnce: false\n        }\n\n        this.getBtnClass = this.getBtnClass.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n\n        this.container = React.createRef();\n    }\n\n    getBtnClass() {\n        let caret = this.state.shown ? ' dropup' : ' dropdown';\n\n        return 'btn ' + this.props.className + caret;\n    }\n\n    toggleMenu() {\n        this.setState({shown: !this.state.shown});\n    }\n\n    onOptionClick(value, index) {\n        let autoChange = this.props.autoChange;\n        if (autoChange === false) {\n            this.setState({shown: false});\n        }\n        else {\n            this.setState({selectedOnce: true, selected: index, shown: false});\n        }\n\n        if (this.props.onChange) {\n            this.props.onChange(value, index);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.selectedIndex !== prevProps.selectedIndex) {       \n            if (this.state.selected !== this.props.selectedIndex) {\n                this.setState({selected: this.props.selectedIndex});\n            }\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    }\n\n    handleClickOutside = event => {\n        if (this.container.current && !this.container.current.contains(event.target)) {\n            if (this.state.shown)\n                this.setState({shown: false});\n        }\n    };\n\n    render() {\n        let placement = this.props.placement || '';\n\n        let menu = null;\n        if (this.state.shown) {\n            menu = (<div key=\"menu\" className={this.state.shown ? \"dropdown-menu show \" + placement : \"dropdown-menu \" + placement}>\n                        {\n                            this.props.options.map((value, index) => \n                                <button \n                                    type=\"button\" \n                                    className={this.state.selected === index ? \"dropdown-item active\" : \"dropdown-item\"}\n                                    onClick={value.onSelect ? value.onSelect : (e) => this.onOptionClick(value, index)}\n                                    key={index}\n                                >\n                                    {value.label}\n                                </button>\n                            )\n                        }\n                    </div>);\n        }\n\n        return (\n            <div className={this.state.shown ? \"dropdown-container show\" : \"dropdown-container\"} ref={this.container}>\n                <button className={this.getBtnClass()} type=\"button\" onClick={this.toggleMenu}>\n                    {this.props.icon} {this.state.selectedOnce ? this.props.options[this.state.selected].selectLabel : this.props.children}\n                </button>\n                <CSSTransitionGroup\n                    transitionName=\"dropdown-menu\"\n                    transitionEnterTimeout={100}\n                    transitionLeaveTimeout={100}\n                >\n                    {menu}\n                </CSSTransitionGroup>\n            </div>\n        );\n    }\n}\n\nexport function CloseButton(props) {\n    let loader;\n    if (props.loading) {\n        loader = <Loader />;\n    }\n\n    return (\n        <button className=\"btn-close\" type=\"button\" \n            disabled={props.loading || props.disabled ? true : false}\n            onClick={props.onClick}\n        >\n            <Icon name=\"x\" />{loader}\n        </button>\n    );\n}\n","import React, {Component, Children} from 'react';\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport {NavLink} from 'react-router-dom';\nimport Icon from './icons.js';\nimport {capitalize, ReverseNavLink, ReverseLink} from '../utils.js';\nimport URLS from '../urlconf.js';\nimport {DropdownButton} from './buttons.js';\n\n\nexport class Nav extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.instance !== prevProps.instance && this.state.open) {\n            this.setState({open: false});\n            document.body.classList.remove('nav-open');\n        }\n    }\n\n    componentWillUnmount() {\n        document.body.classList.remove('nav-open');\n    }\n\n    toggleNav = (e) => {\n        this.setState({open: !this.state.open});\n        document.body.classList.toggle('nav-open');\n    }\n\n    handleLinkClick = (e) => {\n        if (this.state.open) {\n            this.toggleNav();\n        }\n    }\n\n    render() {\n        const base_url = this.props.match.params.base_url;\n\n        return (\n            <div>\n                <CSSTransitionGroup\n                    transitionName=\"overlay\"\n                    transitionEnterTimeout={100}\n                    transitionLeaveTimeout={150}\n                >\n                    {(this.state.open && <div className=\"overlay\" key=\"overlay\" onClick={this.handleLinkClick}></div>) || null}\n                </CSSTransitionGroup>\n\n                <div className=\"nav top-nav\">\n                    <ReverseLink to={URLS.home} args={{base_url: base_url}} className=\"logo\">\n                        <img src={process.env.PUBLIC_URL + \"/static/django_candy/img/logo-nav.png\"}  alt={window.candy.site_name} className=\"d-none d-sm-block\" />\n                        <img src={process.env.PUBLIC_URL + \"/static/django_candy/img/logo-nav-mobile.png\"}  alt={window.candy.site_name} className=\"d-block d-sm-none\" />\n                    </ReverseLink> {' '}\n                    <button className=\"toggle-nav d-md-none\" onClick={this.toggleNav}>\n                        {this.state.open ? <Icon name=\"x\" /> : <Icon name=\"list\" />}\n                    </button>\n\n                    <ul className=\"d-none d-md-block\">\n                        <li>\n                            <DropdownButton \n                                className=\"default\"\n                                placement=\"right\"\n                                selectedIndex={-1}\n                                options={[\n                                    {label: \"Logout\", onSelect: this.props.handleLogout},\n                                ]}\n                            >\n                                <Icon name=\"person\" className=\"nav-user-icon\" /> { this.props.user.name }\n                            </DropdownButton>\n                        </li>\n                    </ul>\n                </div>\n\n                <div className={this.state.open ? \"nav side-nav open\" : \"nav side-nav\"} id={this.props.id}>\n                    <ul>\n                        <li key='home'>\n                            <ReverseNavLink \n                                exact\n                                to={URLS.home}\n                                args={{base_url: base_url}}\n                                onClick={this.handleLinkClick}\n                            >\n                                Home\n                            </ReverseNavLink>\n                        </li>\n                        {this.props.sideMenu.map((app) => {\n                            let menu_label = <li key={app.app_label}><span className=\"menu-header\">{capitalize(app.verbose_name)}</span></li>;\n\n                            let menu_items = app.models.map((model) => {\n                                return (\n                                    <li key={model.app_label + '.' + model.name}>\n                                        <ReverseNavLink \n                                            to={URLS.model_list}\n                                            args={{base_url: base_url, app_label: app.app_label, model_name: model.name.toLowerCase()}}\n                                            onClick={this.handleLinkClick}\n                                        >\n                                            {capitalize(model.menu_label)}\n                                        </ReverseNavLink>\n                                    </li>\n                                );\n                            });\n\n                            return [menu_label, menu_items];\n                        })}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport function SubNav(props)  {\n    return (\n        <div className={'nav sub-nav'}>\n            <ul>\n                {Children.map(props.children, (child) => child ? <li>{child}</li> : null)}\n            </ul>\n        </div>\n    );\n}","import React from 'react';\nimport {matchPath} from 'react-router-dom';\nimport Icon from './icons.js';\nimport {SubNav} from './navs.js';\nimport {ReverseLink} from '../utils.js';\n\n\nexport default function PageHeader(props) {\n    /* \n        Page header component.\n\n        Props:\n            title:      Base title of the page.\n            edit_url:   URL pattern for edit page.\n            add_url:    URL pattern for add page.\n\n    */\n    let title = props.title;\n    let path = props.location.pathname;\n    let backBtn = null;\n\n    let list_filters = new URLSearchParams(props.location.search).get('_list_filters') || '';\n\n    if (matchPath(path, props.edit_url))\n        title = title + ' / Edit';\n    else if (matchPath(path, props.add_url))\n        title = title + ' / Add New';\n\n    if (matchPath(path, props.edit_url) || matchPath(path, props.add_url)) {\n        backBtn = <ReverseLink \n                    to={props.list_url + list_filters}\n                    args={{base_url: props.match.params.base_url, \n                        app_label: props.match.params.app_label, \n                        model_name: props.match.params.model_name\n                    }}\n                  >\n                    <Icon name=\"arrow-left\" /> View All\n                  </ReverseLink>;\n    }\n\n    document.title = props.title + ' | '+ window.candy.site_name;\n\n\n    return (\n        <div className=\"header\">\n            <div className=\"row\">\n                <div className=\"col-12 col-md-5\">\n                    <h3>{title}</h3>\n                </div>\n                <div className=\"col-12 col-md-7\">\n                    {!props.hideSubnav && \n                        <SubNav>\n                            {backBtn}\n                            {props.permissions.can_add ? \n                                <ReverseLink \n                                    className=\"active\" \n                                    to={props.add_url}\n                                    args={{base_url: props.match.params.base_url, \n                                        app_label: props.match.params.app_label, \n                                        model_name: props.match.params.model_name\n                                    }}\n                                >\n                                    <Icon name=\"plus\" /> Add New\n                                </ReverseLink>\n                                : null\n                            }\n                            <button className=\"btn\" onClick={props.onRefresh}><Icon name=\"arrow-clockwise\" /> Refresh</button>\n                        </SubNav>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}","import React, {Component} from 'react';\nimport Loader from './loaders.js';\n\n\nexport function FormInput({label, helpText, error, required, inputRef, ...props}) {\n    let helpSpan = '';\n    if (helpText)\n        helpSpan = <span className=\"help-text\">{helpText}</span>;\n\n    let errorSpan = '';\n    if (error)\n        errorSpan = <span className=\"help-text\">{error}</span>;\n\n    if (!props.className)\n        props.className = 'form-control';\n\n    if (inputRef)\n        props.ref = inputRef;\n\n    return (\n        <div className={error ? \"form-group error\" : \"form-group\"}>\n            {label ? <label>{label} {required && <span className=\"required-label\">*</span>}</label> : null}\n            <input {...props} />\n            {errorSpan}\n            {helpSpan}\n        </div>\n    );\n}\n\n\nexport function FormInputGroup({label, helpText, error, required, append, prepend, ...props}) {\n    let helpSpan = '';\n    if (helpText)\n        helpSpan = <span className=\"help-text\">{helpText}</span>;\n\n    let errorSpan = '';\n    if (error)\n        errorSpan = <span className=\"help-text\">{error}</span>;\n\n    if (!props.className)\n        props.className = 'form-control';\n\n    return (\n         <div className={error ? \"form-group error\" : \"form-group\"}>\n            {label ? <label>{label} {required && <span className=\"required-label\">*</span>}</label> : null}\n            <div className=\"input-group\">\n                {prepend && \n                    <div className=\"input-group-prepend\">{prepend}</div>\n                }\n                <input {...props} />\n                {append && \n                    <div className=\"input-group-append\">{append}</div>\n                }\n            </div>\n            {errorSpan}\n            {helpSpan}\n        </div>\n    );\n}\n\n\nexport class FormTextArea extends Component {\n    constructor(props) {\n        super(props);\n\n        if (!props.inputRef)\n            this.inputRef = React.createRef();\n    }\n\n    handleChange = (e) => {\n        this.updateHeight(e.target);\n\n        if (this.props.onChange)\n            this.props.onChange(e);\n    }\n\n    updateHeight = (el) => {\n        let offset = el.offsetHeight - el.clientHeight;\n        el.style.height = 'auto';\n        el.style.height = (el.scrollHeight + offset) + 'px';\n    }\n\n    componentDidMount() {\n        if (this.props.autoHeight) {\n            if (this.props.inputRef)\n                this.updateHeight(this.props.inputRef.current);\n            else \n                this.updateHeight(this.inputRef.current);\n        }\n    }\n\n    render() {\n        let {error, label, required, helpText, autoHeight, inputRef, ...props} = this.props;\n\n        let helpSpan = '';\n        if (helpText)\n            helpSpan = <span className=\"help-text\">{helpText}</span>;\n\n        let errorSpan = '';\n        if (error)\n            errorSpan = <span className=\"help-text\">{error}</span>;\n\n        if (!this.props.className)\n            props.className = 'form-control';\n\n        if (autoHeight) \n            props.onChange = this.handleChange;\n\n\n        return (\n            <div className={error ? \"form-group error\" : \"form-group\"}>\n                {label ? <label>{label} {required && <span className=\"required-label\">*</span>}</label> : null}\n                <textarea {...props} ref={inputRef || this.inputRef} />\n                {errorSpan}\n                {helpSpan}\n            </div>\n        );\n    }\n}\n\n\nexport function RadioCheckInput({label, ...props}) {\n    return (\n        <div className={\"custom-control custom-\" + props.type}>\n            <label className=\"custom-control-label\">\n                {label}\n                <input \n                    className=\"custom-control-input\" \n                    {...props}\n                />\n                <div className=\"custom-control-indicator\"></div>\n            </label>\n        </div>\n    );\n}\n\n\nexport class FormRadioInput extends Component {\n    handleChange = (e) => {\n        if (this.props.onChangeCallback) {\n            this.props.onChangeCallback(e);\n        }\n    }\n\n    render() {\n        /* props.variant = inline || stacked */\n\n        let helpSpan = '';\n        if (this.props.helpText)\n            helpSpan = <span className=\"help-text\">{this.props.helpText}</span>;\n\n        let errorSpan = '';\n        if (this.props.error)\n            errorSpan = <span className=\"help-text\">{this.props.error}</span>;\n\n        let inputClass = this.props.variant === \"inline\" ? \"form-check form-check-inline\" : \"form-check\";\n\n        let options = this.props.options.map(\n            (option) => <div className={inputClass} key={option.value}>\n                            <RadioCheckInput \n                                type=\"radio\"\n                                name={this.props.name}\n                                label={option.label}\n                                value={option.value}\n                                defaultChecked={option.value === this.props.defaultValue}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n        );\n\n        return (\n            <div className={this.props.error ? \"form-group error\" : \"form-group\"}>\n                <label>{this.props.label} {this.props.required && <span className=\"required-label\">*</span>}</label>\n                {options}\n                {helpSpan}\n                {errorSpan}\n            </div>\n        );\n    }\n}\n\n\nexport function _FormRadioInput(props) {\n    /* props.variant = inline || stacked */\n\n    let helpSpan = '';\n    if (props.helpText)\n        helpSpan = <span className=\"help-text\">{props.helpText}</span>;\n\n    let errorSpan = '';\n    if (props.error)\n        errorSpan = <span className=\"help-text\">{props.error}</span>;\n\n    let inputClass = props.variant === \"inline\" ? \"form-check form-check-inline\" : \"form-check\";\n\n    let options = props.options.map(\n        (option) => <div className={inputClass} key={option.value}>\n                        <RadioCheckInput \n                            type=\"radio\"\n                            name={props.name}\n                            label={option.label}\n                            value={option.value}\n                            defaultChecked={option.value === props.defaultValue}\n                        />\n                    </div>\n    );\n\n    return (\n        <div className={props.error ? \"form-group error\" : \"form-group\"}>\n            <label>{props.label} {props.required && <span className=\"required-label\">*</span>}</label>\n            {options}\n            {helpSpan}\n            {errorSpan}\n        </div>\n    );\n}\n\nexport function CheckBoxInput({label, ...props}) {\n    return (\n        <div className=\"custom-control custom-checkbox\">\n            <label className=\"custom-control-label\">\n                {label}\n                <input \n                    className=\"custom-control-input\" \n                    type=\"checkbox\" \n                    {...props}\n                />\n                <div className=\"custom-control-indicator\"></div>\n            </label>\n        </div>\n    );\n}\n\nexport function FormCheckInput({label, helpText, error, variant, options, ...props}) {\n    /* props.variant = inline || stacked */\n\n    let helpSpan = '';\n    if (helpText)\n        helpSpan = <span className=\"help-text\">{helpText}</span>;\n\n    let errorSpan = '';\n    if (error)\n        errorSpan = <span className=\"help-text\">{error}</span>;\n\n    let inputClass = variant === \"inline\" ? \"form-check form-check-inline\" : \"form-check\";\n\n    let defaultValue = props.defaultValue;\n    if (defaultValue && !(defaultValue instanceof Array))\n        defaultValue = [props.defaultValue];\n\n    let value = props.value;\n    if (value && !(value instanceof Array))\n        value = [props.value];\n\n    if (options) {\n        let checkInputs = options.map(\n            (option) => {\n                let valueProps = {};\n\n                if (defaultValue)\n                    valueProps.defaultChecked = defaultValue.includes(option.value);\n\n                if (value)\n                    valueProps.checked = value.includes(option.value);\n\n                return (\n                    <div className={inputClass} key={option.value}>\n                        <RadioCheckInput \n                            type=\"checkbox\"\n                            name={props.name}\n                            label={option.label}\n                            value={option.value}\n                            {...valueProps}\n                            onChange={props.onChange}\n                        />\n                    </div>\n                );\n            }\n        );\n\n        return (\n            <div className={error ? \"form-group error\" : \"form-group\"}>\n                <label>{label} {props.required && <span className=\"required-label\">*</span>}</label>\n                {checkInputs}\n                {helpSpan}\n                {errorSpan}\n            </div>\n        );\n\n    }\n\n    return (\n        <div className={error ? \"form-group form-check form-check-inline error\" : \"form-group form-check form-check-inline\"}>\n            <CheckBoxInput\n                label={label}\n                {...props}\n            />\n            {helpSpan}\n            {errorSpan}\n        </div>\n    );\n}\n\n\n\nexport class Typeahead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: this.props.value || this.props.defaultValue || '',\n            isShown: false,\n            focusOptionIndex: -1,\n            options: []\n        };\n\n        this.inputRef = React.createRef();\n    }\n\n    handleChange = (e) => {\n        this.setState({value: e.target.value});\n        this.props.loadOptions(e.target.value, this.updateOptions);\n    }\n\n    updateOptions = (options) => {\n        this.setState({options: options.concat()});\n    }\n\n    handleFocus = (e) => {\n        this.setState({isShown: true});\n    }\n\n    handleBlur = (e) => {\n        e.persist()\n        this.setState({isShown: false, focusOptionIndex: -1});\n    }\n\n    handleMouseDown = (e) => {\n        e.preventDefault();\n    }\n\n    handleOptionSelect = (index) => {\n        let option = this.state.options[index];\n\n        this.inputRef.current.blur();\n        this.setState({value: option.label});\n\n        this.props.onOptionSelect(option);\n    }\n\n    handleKeyDown = (e) => {\n        const key = e.keyCode;\n        const focusOptionIndex = this.state.focusOptionIndex;\n        const maxIndex = this.state.options.length - 1;\n        if (key === 38) {\n            // up arrow\n            if (focusOptionIndex > -1) {\n                this.setState({\n                    focusOptionIndex: focusOptionIndex - 1\n                });\n            }\n        } else if (key === 40) {\n            // down arrow\n            if (focusOptionIndex < maxIndex) {\n                this.setState({\n                    focusOptionIndex: focusOptionIndex + 1\n                });\n            }\n        } else if (key === 13) {\n            // enter\n            e.preventDefault();\n\n            if (focusOptionIndex > -1 && focusOptionIndex <= maxIndex && this.state.isShown) {\n                this.setState({\n                    focusOptionIndex: -1,\n                    isShown: false\n                });\n                this.handleOptionSelect(focusOptionIndex);\n            } \n        } else {\n            if (key !== 13 && this.state.focusOptionIndex !== -1) {\n                //this.state.focusOptionIndex = -1;\n                \n                this.setState({\n                    focusOptionIndex: -1\n                });\n            }\n        }\n        return;\n    }\n\n    render() {\n        let options = null;\n\n        if (this.state.isShown && this.state.options.length) {\n            options = this.state.options.map((option, index) => {\n                return (\n                    <div \n                        className={this.state.focusOptionIndex === index ? \"typeahead__option typeahead__option--is-focused\" : \"typeahead__option\"} \n                        key={option.value}\n                        tabIndex={-1}\n                        onClick={(e) => this.handleOptionSelect(index)}\n                        onMouseDown={this.handleMouseDown}\n                    >\n                        <span className=\"typeahead__option__title\">{option.label}</span>\n                        <span className=\"typeahead__option__extra-data\">{option.extraData}</span>\n                    </div>\n                );\n            });\n        }\n\n        return (\n            <div className=\"typeahead\">\n                <FormInput \n                    label={this.props.label}\n                    placeholder={this.props.placeholder}\n                    type={this.props.type || 'text'}\n                    value={this.state.value}\n                    error={this.props.error}\n                    name={this.props.name}\n                    helpText={this.props.helpText}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    onKeyDown={this.handleKeyDown}\n                    inputRef={this.inputRef}\n\n                    onChange={this.handleChange}\n                    required={this.props.required}\n                    readOnly={this.props.readOnly}\n                />\n                <div className={options ? \"typeahead__options typeahead__options--shown\" : \"typeahead__options\"}>\n                    {options}\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {ReverseLink} from '../utils.js';\nimport Icon from './icons.js';\nimport {RadioCheckInput} from './forms.js';\n\n\nfunction TableHead(props) {\n    let checkboxTh = (\n            <th className=\"checkbox-col\">\n                <RadioCheckInput \n                    type=\"checkbox\"\n                    checked={props.checked} \n                    onChange={props.onCheckChange} \n                    disabled={!props.isCheckable} \n                />\n            </th>);\n\n    let thWidths = props.thWidths || [];\n\n    return (\n        <thead>\n            <tr>\n                {checkboxTh}\n                {props.th.map((th, index) => {\n                    let width = thWidths[index];\n                    let thCls = width ? 'thcol-' + width : null;\n                    return <th key={th} className={thCls}>{th}</th>;\n                    })\n                }\n                {props.hasActions ? \n                    <th key={'actions'} className={thWidths.length > props.th.length && 'thcol-' + thWidths[props.th.length]}>Actions</th> \n                    : null\n                }\n            </tr>\n        </thead>\n    );\n}\n\n\nfunction TableRow (props) {\n    let checkboxTd = (\n            <td className=\"checkbox-col\">\n                <RadioCheckInput\n                    type=\"checkbox\" \n                    checked={props.checked} \n                    onChange={props.onCheckChange} \n                    disabled={!props.isCheckable}\n                />\n            </td>);\n\n    return (\n        <tr className={props.flash ? \"flash\" : null}>\n            {checkboxTd}\n            {props.children}\n        </tr>\n    );\n}\n\n\nexport default class Table extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            headChecked: false,\n            rowsChecked: []\n        }\n\n        this.handleHeadCheck = this.handleHeadCheck.bind(this);\n        this.handleRowCheck = this.handleRowCheck.bind(this);\n    }\n\n    handleHeadCheck(e) {\n        let checkedIds = [];\n        if (e.target.checked === true) {\n            checkedIds = this.props.data.map((item) => item.id);\n        }\n        this.props.tableCheckCallback(checkedIds);\n\n        this.setState({headChecked: e.target.checked, rowsChecked: []});\n\n    }\n\n    handleRowCheck(e, id) {\n        let rowsChecked = this.state.rowsChecked;\n\n        if (e.target.checked) {\n            rowsChecked.push(id);\n            this.setState({rowsChecked: rowsChecked});\n        }\n        else {\n            let rowIndex = rowsChecked.indexOf(id);\n            if (rowIndex > -1) {\n                rowsChecked.splice(rowIndex, 1);\n                this.setState({rowsChecked: rowsChecked});\n            } else if (this.state.headChecked) {\n                for (let i = 0; i < this.props.data.length; i++) {\n                    let _id = this.props.data[i].id;\n                    if (_id !== id)\n                        rowsChecked.push(_id)\n                }\n\n                this.setState({rowsChecked: rowsChecked, headChecked: false});\n            }\n        }\n\n\n        this.props.tableCheckCallback(rowsChecked);\n    }\n\n    getTableRowURI = () => {\n        let queryString = window.location.search;\n\n        if (queryString.length)\n            return this.props.tableRowURI + '?_list_filters=' + encodeURIComponent(queryString);\n\n        return this.props.tableRowURI;\n    }\n\n    renderForMobile = () => {\n\n        let hasActions = this.props.tableRowActions ? true : false;\n        let colCls = this.props.tableColCls || [];\n\n        let cards = this.props.data.map((row) => {\n\n            let cols = [];\n\n            for (let j = 0; j < this.props.tableCols.length; j++) {\n\n                let colKey = 'col_' + j + '_' + row.id;\n\n                let label = this.props.tableTh[j];\n\n                let val = row[this.props.tableCols[j]];\n\n                if (typeof val === 'boolean') {\n                    val = val ? <Icon name=\"check-circle\" className=\"table-col-icon text-success\" /> : <Icon name=\"x-circle\" className=\"table-col-icon text-error\" />;\n                }\n\n                let colClass = colCls[j];\n\n                if (!colClass) {\n                    if (j === 0)\n                        colClass = 'col-12';\n                    else \n                        colClass = 'col-6';\n                }\n\n                cols.push(\n                    <div key={colKey} className={colClass}>\n                        <span className=\"col-label\">{label}</span>\n                        <span className={j === 0 ? \"item-title\" : \"\"}>{val}</span>\n                    </div>\n                );\n\n            }\n\n            let actionsCol = null;\n            if (hasActions)\n                actionsCol = <div className=\"col-12 actions-col\">{this.props.tableRowActions(row)}</div>;\n\n            if (this.props.tableRowURI) {\n                return (\n                    <div key={row.id}>\n                        <ReverseLink \n                            to={this.getTableRowURI()} \n                            args={{id: row.id}}\n                            className=\"table-item-card\"\n                        >\n                            <div className=\"row\">{cols}</div>\n                            <div className=\"caret\"><Icon name=\"chevron-right\" /></div>\n                        </ReverseLink>\n                    </div>\n                );\n            } else {\n                return (\n                    <div key={row.id}>\n                        <div className=\"table-item-card\">\n                            <div className=\"row\">{cols}{actionsCol}</div>\n                        </div>\n                    </div>\n                );\n            }\n        });\n\n        return (\n            <div>\n                {cards}\n            </div>\n        );\n    }\n\n    render() {\n        const isMobile = window.innerWidth < 576;\n\n        if (this.props.data.length < 1) {\n            return (\n                <div className=\"well\">\n                    <h1>Nothing here</h1>\n                </div>\n            );\n        }\n\n        if (isMobile)\n            return this.renderForMobile();\n\n        let head;\n        let hasActions = this.props.tableRowActions ? true : false;\n        let isCheckable = this.props.tableCheckable ? true : false;\n        if (this.props.tableTh)\n            head = <TableHead \n                        th={this.props.tableTh} \n                        checked={this.state.headChecked}\n                        onCheckChange={this.handleHeadCheck} \n                        hasActions={hasActions}\n                        isCheckable={isCheckable}\n                        thWidths={this.props.tableThWidths}\n                    />\n\n        let flashRows = this.props.flashRows || [];\n        let rows = [];\n\n        for (let i = 0; i < this.props.data.length; i++) {\n\n            let row = this.props.data[i];\n\n            let cols = [];\n\n            for (let j = 0; j < this.props.tableCols.length; j++) {\n\n                let colKey = 'col_' + j + '_' + row.id;\n\n                if (this.props.tableRowURI && j === 0)\n                    cols.push(\n                        <td key={colKey}>\n                            <ReverseLink to={this.getTableRowURI()} args={{id: row.id}}>{row[this.props.tableCols[j]]}</ReverseLink>\n                        </td>\n                    );\n                else {\n                    let val = row[this.props.tableCols[j]];\n                    \n                    if (typeof val === 'boolean') {\n                        val = val ? <Icon name=\"check-circle\" className=\"table-col-icon text-success\" /> : <Icon name=\"x-circle\" className=\"table-col-icon text-error\" />;\n                    } \n\n                    cols.push(<td key={colKey}>{val}</td>);\n                }\n\n            }\n\n            let actionsTd = null;\n            if (hasActions)\n                actionsTd = <td>{this.props.tableRowActions(row)}</td>;\n\n            rows.push(\n                <TableRow \n                    key={row.id} \n                    checked={this.state.headChecked || this.state.rowsChecked.indexOf(row.id) > -1} \n                    onCheckChange={(e) => this.handleRowCheck(e, row.id)}\n                    isCheckable={isCheckable}\n                    flash={flashRows.includes(i)}\n                >\n                    {cols}\n                    {actionsTd}\n                </TableRow>);\n        }\n\n        return (\n            <table>\n                {head}\n                <tbody>\n                    {rows}\n                </tbody>\n            </table>\n        );\n    }\n}","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport {withRouter} from 'react-router-dom';\nimport Icon from './icons.js';\nimport {DropdownButton, Button} from './buttons.js';\nimport {RadioCheckInput} from './forms.js';\n\n\nexport default class TableToolbar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toolbarToolsRef = React.createRef();\n    }\n\n    render() {    \n        return (\n            <div className=\"toolbar\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-4\">\n                        <ListSearch />\n                    </div>\n                    <div className=\"col-12 col-md-8 text-right toolbar-buttons\">\n                        <ListFilter toolsRef={this.toolbarToolsRef}  filters={this.props.filters} />\n                    </div>\n                </div>\n                <div ref={this.toolbarToolsRef}></div>\n            </div>\n        );\n    }\n}\n\n\nclass _ListSearch extends Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            searchVal: '',\n            activeQuery: '',\n            focussed: false\n        };\n\n        this.input = React.createRef();\n    }\n\n    handleSearchChange = (e) => {\n        this.setState({searchVal: e.target.value});\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.updateSearch();\n    }\n\n    updateSearch = () => {\n        /*\n        When a user searches something, the `page` number should be removed \n        from the queryString so the user is taken to first page of search results.\n\n        :TODO: reload page if searching for same thing twice.\n        */\n\n        let q = this.state.searchVal;\n        let queryString = new URLSearchParams(this.props.location.search);\n\n        if (q === '') {\n            queryString.delete('q');\n        } else {\n            queryString.set('q', q);\n        }\n\n        queryString.delete('page');\n        \n        this.setState({activeQuery: q});\n\n        this.props.history.push(this.props.location.pathname + '?' + queryString.toString());  \n    }\n\n    clearSearch = (e) => {\n        this.setState(\n            {searchVal: '', activeQuery: ''}, \n            () => this.updateSearch()\n        );\n    }\n\n    componentDidMount() {\n        let queryString = new URLSearchParams(this.props.location.search);\n        let q = queryString.get('q') || '';\n        if (q !== '') {\n            this.setState({searchVal: q, activeQuery: q});\n        }\n    }\n\n    handleFocus = (e) => {\n        this.setState({\n            focussed: true\n        });\n\n        this.input.current.focus();\n    }\n\n    handleBlur = (e) => {\n        this.setState({\n            focussed: false\n        });\n\n        this.input.current.blur();\n    } \n\n    render() {\n        let activeQuery = null;\n        if (this.state.activeQuery !== '' || this.state.activeQuery === null) {\n            activeQuery = (\n                <p>\n                    <br />\n                    Search results for: <strong>\"{this.state.activeQuery}\"</strong>\n                    {' '}\n                    <button className=\"btn link\" onClick={this.clearSearch}><Icon name=\"x-circle\" /> Clear</button>\n                </p>\n            );\n        }\n\n        return (\n            <>\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span \n                            className={this.state.focussed ? \"input-group-text focussed\" : \"input-group-text\"}\n                            onClick={this.handleFocus}\n                        >\n                            <Icon name='search' />\n                        </span>\n                    </div>\n                    <input \n                        type=\"text\" name=\"q\" className=\"form-control icon-prepend\" placeholder=\"Search...\"\n                        autoFocus={this.state.focussed}\n                        onFocus={this.handleFocus}\n                        onBlur={this.handleBlur}\n                        ref={this.input}\n                        value={this.state.searchVal} onChange={this.handleSearchChange} />\n                </div>\n            </form>\n            {activeQuery}\n            </>\n        );\n    }\n}\n\nconst ListSearch = withRouter(_ListSearch);\n\n\nclass ListFilterButtons extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    getFilterBtnClass = () => {\n        let style = this.props.filterApplied ? 'primary' : 'default';\n        let caret = this.props.toolsShown ? 'dropup' : 'dropdown';\n\n        return 'btn ' + style + ' ' + caret;\n    }\n\n    render() {\n        let clearBtn;\n\n        if (this.props.filterApplied) {\n            clearBtn = <button className=\"btn default\" onClick={this.props.clearFilters}><Icon name=\"x-circle\" /> Clear</button>\n            \n        }\n\n        return (\n            <>\n                <button className={this.getFilterBtnClass()} onClick={this.props.toggleFilterTools}>\n                    <Icon name=\"sliders\" /> Filters {this.props.filterApplied ? 'Applied' : null}\n                </button>\n                {clearBtn}\n            </>\n        );\n    }\n}\n\n\nclass ListFilterTools extends Component {\n    render() {\n        if (!this.props.toolsRef.current || !this.props.isShown) {\n            return null;\n        }\n\n        return ReactDOM.createPortal(\n            this.props.children,\n            this.props.toolsRef.current\n        );\n    }\n}\n\n\nclass _ListFilter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showTools: false\n        };\n    }\n\n    getFilterState = () => {\n        let searchParams = new URLSearchParams(this.props.location.search);\n\n        let filters = {}\n\n        for (let i = 0; i < this.props.filters.length; i++) {\n            let filter = this.props.filters[i];\n\n            if (filter.type === 'radio') {\n                filters[filter.name] = searchParams.get(filter.name);\n            } else if (filter.type === 'checkbox') {\n                filters[filter.name] = searchParams.getAll(filter.name);\n            }\n        }\n\n        return filters;\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        let queryString = new URLSearchParams(this.props.location.search);\n        this.props.filters.map((filter) => {\n            queryString.delete(filter.name);\n            return null;\n        });\n\n        let formData = new FormData(e.target);\n        for (let item of formData) {\n            queryString.append(item[0], item[1]);\n        }\n\n        // go to page 1 of results\n        queryString.delete('page');\n\n        queryString = '?' + queryString.toString();\n\n\n        if (queryString !== this.props.location.search) {\n            this.props.history.push(this.props.location.pathname + queryString);\n        }\n\n        this.setState({showTools: false});\n    }\n\n    toggleFilterTools = () => {\n        this.setState({showTools: !this.state.showTools});\n    }\n\n    clearFilters = () => {\n        let oldQueryString = new URLSearchParams(this.props.location.search);\n\n        this.props.filters.map((filter) => {\n            if (oldQueryString.has(filter.name)) {\n                oldQueryString.delete(filter.name);\n            }\n            return null;\n        });\n\n        this.props.history.push(this.props.location.pathname + '?' + oldQueryString.toString());\n        this.setState({showTools: false});\n    }\n\n    render() {\n        let filterState = this.getFilterState();\n        let filterApplied = false;\n\n        let filters = null;\n\n        if (this.state.showTools) {\n            filters = this.props.filters.map((filter) => {\n\n                let options = filter.options.map((option) => {\n                    let isChecked = false;\n\n                    if (filter.type === 'radio') {\n                        if (String(filterState[filter.name]) === option.value)\n                            isChecked = true;\n                    } else if (filter.type === 'checkbox') {\n                        if (String(filterState[filter.name]).includes(option.value))\n                            isChecked = true;\n                    }\n\n                    if (isChecked && !filterApplied)\n                        filterApplied = true;\n\n                    return (\n                        <RadioCheckInput \n                            key={filter.name + '_option_' + option.value}\n                            label={option.label}\n                            type={filter.type} \n                            name={filter.name} \n                            value={option.value} \n                            defaultChecked={filterApplied ? isChecked : option.default}\n                        />\n                    );\n                });\n\n                return (\n                    <div className=\"col-12 col-md-4 col-sm-6\" key={'filter_' + filter.name}>\n                        <h4>{filter.label}</h4>\n                        {options}\n                    </div>\n                );\n            });\n        } else {\n            filterApplied = this.props.filters.some((filter) => {\n                return filter.options.some((option) => {\n                    if (filter.type === 'radio') {\n                        if (filterState[filter.name] === option.value)\n                            return true;\n                    } else if (filter.type === 'checkbox') {\n                        if (filterState[filter.name].includes(option.value))\n                            return true;\n                    }\n                        \n                    return false;\n                    \n                });\n            });\n        }\n\n        return (\n            <>\n            <ListFilterButtons \n                filterApplied={filterApplied} \n                toggleFilterTools={this.toggleFilterTools}\n                clearFilters={this.clearFilters}\n                toolsShown={this.state.showTools}\n            />\n            <CSSTransitionGroup\n                transitionName=\"toolbar-tools\"\n                transitionEnterTimeout={100}\n                transitionLeaveTimeout={100}\n            >\n                {filters ? <ListFilterTools key=\"filterTools\" toolsRef={this.props.toolsRef} isShown={this.state.showTools}>\n                    <div className=\"toolbar-tools\">\n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"row filters-row\">\n                                {filters}\n                            </div>\n                            <div className=\"row filter-btns\">\n                                <div className=\"col-12\">\n                                    <Button className=\"primary\" type=\"submit\">Apply</Button>{' '}\n                                    <Button className=\"default\" type=\"button\" onClick={this.toggleFilterTools}>Cancel</Button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </ListFilterTools> : null}\n            </CSSTransitionGroup>\n            </>\n        );\n    }\n}\n\n\nconst ListFilter = withRouter(_ListFilter);","import React, {Component} from 'react';\nimport Loader from './loaders.js';\nimport Icon from './icons.js';\nimport {CSSTransitionGroup} from 'react-transition-group';\n\n\nclass ToastService {\n    constructor() {\n        this.toasts = new Set();\n    }\n\n    register(toast) {\n        this.toasts.add(toast);\n        return () => this.unregister(toast);\n    }\n\n    unregister(toast) {\n        this.toasts.forEach((tst) => {\n            if (tst === toast) {\n                this.toasts.delete(toast);\n            }\n        });\n    }\n\n    success(message) {\n        this.toasts.forEach(toast => {\n            toast.showToast(message, 'success');\n        });\n    }\n\n    error(message) {\n        this.toasts.forEach(toast => {\n            toast.showToast(message, 'error');\n        });\n    }\n\n    showLoader() {\n        this.toasts.forEach(toast => {\n            toast.showLoaderToast();\n        });\n    }\n\n    hideLoader() {\n        this.toasts.forEach(toast => {\n            toast.hideLoaderToast();\n        });\n    }\n\n    showConnectionError(retryCallback) {\n        this.toasts.forEach(toast => {\n            toast.showConnectionError(retryCallback);\n        })\n    }\n\n    hideConnectionError() {\n        \n    }\n\n    hideAll() {\n        this.toasts.forEach(toast => {\n            toast.hideAll();\n        });\n    }\n\n    hideError() {\n        this.toasts.forEach(toast => {\n            toast.hideError();\n        });\n    }\n}\n\n\nexport const toastService = new ToastService();\n\n\nexport class ToastContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.timer = null;\n        this.toastService = toastService;\n        //this.mounted = false;\n\n        this.state = {\n            message: null,\n            type: null,\n            loader: false,\n            connectionError: false,\n            retryCallback: null\n        }\n\n        this.showToast = this.showToast.bind(this);\n        this.showLoaderToast = this.showLoaderToast.bind(this);\n        this.hideLoaderToast = this.hideLoaderToast.bind(this);\n        this.hasToast = this.hasToast.bind(this);\n        this.unregister = this.toastService.register(this);\n        this.closeToast = this.closeToast.bind(this);\n        this.closeConnectionErrorToast = this.closeConnectionErrorToast.bind(this);\n    }\n\n    componentDidMount() {\n        //this.mounted = true;\n    }\n\n    componentWillUnmount() {\n        this.unregister();\n    }\n\n    showToast(message, type) {\n        clearTimeout(this.timer);\n\n        this.setState({\n            message: message,\n            type: type,\n            loader: false,\n            connectionError: false,\n            retryCallback: null\n        });\n\n        if (type === 'success')\n            this.timer = setTimeout(this.closeToast, 5000);\n    }\n\n    showLoaderToast() {\n        this.setState({\n            //message: null,\n            //type: null,\n            loader: true,\n            connectionError: false,\n            retryCallback: null\n        });\n    }\n\n    hideLoaderToast() {\n        this.setState({\n            //message: null,\n            //type: null,\n            loader: false\n        });\n    }\n\n    showConnectionError(retryCallback) {\n        this.setState({\n            loader: false,\n            message: null,\n            type: null,\n            connectionError: true,\n            retryCallback: retryCallback\n        });\n    }\n\n    hideError() {\n        if (this.hasToast() && this.state.type === 'error') {\n            this.setState({\n                message: null,\n                type: null,\n                loader: false\n            });\n        }\n    }\n\n    hideAll() {\n        if (this.hasToast()) {\n            this.setState({\n                message: null,\n                type: null,\n                loader: false\n            });\n        }\n    }\n\n    hasToast() {\n        if (this.state.loader || this.state.message || this.connectionError)\n            return true;\n        return false;\n    }\n\n    _componentDidUpdate() {\n        if (this.hasToast) {\n            clearTimeout(this.timer);\n            this.timer = setTimeout(this.props.hideToast, 5000);\n        }\n    }\n\n    closeToast(e) {\n        this.setState({\n            message: null,\n            type: null\n        });\n    }\n\n    closeConnectionErrorToast(e) {\n        this.setState({\n            message: null,\n            type: null,\n            connectionError: false\n        });\n    }\n\n\n    render() {\n        let toast = null;\n        if (this.state.loader) {\n            toast = <LoaderToast key={'loader'} />;\n        } else if (this.state.connectionError) {\n            toast = (\n                <ConnectionErrorToast \n                    key={'connerror'} \n                    onRetry={this.state.retryCallback} \n                    onClose={this.closeConnectionErrorToast} \n                />\n            );\n        }\n\n        let toast2 = null;\n        if (this.state.message && !this.state.connectionError) {\n            toast2 = <Toast \n                        key={'toast'}\n                        message={this.state.message} \n                        type={this.state.type}\n                        onClose={this.closeToast}\n                    />;\n        }\n\n        return (\n            <div className=\"toast-container\">\n                <CSSTransitionGroup\n                    transitionName=\"toast-animate\"\n                    transitionEnterTimeout={100}\n                    transitionLeaveTimeout={100}\n                    component=\"div\" className=\"toast-container\"\n                >\n                    {toast}\n                    {toast2}\n                </CSSTransitionGroup>\n            </div>\n        );\n    }\n\n}\n\nexport function Toast(props) {\n\n    let type = '';\n    if (props.type)\n        type = props.type;\n\n    let icon = null;\n    if (type === 'success') {\n        icon = <Icon name=\"check\" />;\n    } else if (type === 'error') {\n        icon = <Icon name=\"exclamation-octagon\" />;\n    }\n\n    return (\n        <div className={\"toast \" + type}>\n            <div className=\"icon\">{icon}</div>\n            <div className=\"message\">{props.message}</div>\n            <div className=\"close\">\n                <button onClick={props.onClose}>&times;</button>\n            </div>\n        </div>\n    );\n}\n\nexport function LoaderToast() {\n    return (\n        <div className=\"toast loader-toast\">\n            <div className=\"message\">\n                <Loader /> Loading\n            </div>\n        </div>\n    );\n}\n\nexport function ConnectionErrorToast(props) {\n    return (\n        <div className=\"toast error\">\n            <div className=\"icon with-btn\"><Icon name=\"exclamation-octagon\" /></div>\n            <div className=\"message\">\n                Check your internet connection.{' '}\n                <button className=\"btn link\" onClick={props.onRetry}>Try again</button>\n            </div>\n            <div className=\"close\">\n                <button onClick={props.onClose}>&times;</button>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\n\n\nexport function SkeletonInput() {\n    return (\n        <div className=\"placeholder ph-input\"></div>\n    );\n}\n\nexport function SkeletonButton() {\n    return (\n        <div className=\"placeholder ph-button\"></div>\n    );\n}\n\nexport function SkeletonButtonRight() {\n    return (\n        <div className=\"placeholder ph-button ph-right\"></div>\n    );\n}\n\nexport function SkeletonTable() {\n    return (\n        <div className=\"skeleton-table table-container\">\n            <div className=\"row header\">\n                <div className=\"col-md-4 col-12\">\n                    <SkeletonInput />\n                </div>\n                <div className=\"col-md-8 col-12 text-right d-none d-md-block\">\n                    <SkeletonButton />\n                </div>\n                <div className=\"col-md-8 col-12 d-md-none\">\n                    <SkeletonButton />\n                </div>\n            </div>\n\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((i) => (\n            <div className=\"row\" key={i}>\n                <div className=\"col-md-1 col-12 d-none d-md-block\"><div className=\"placeholder ph-checkbox\"></div></div>\n                <div className=\"col-md-6 col-12 d-none d-md-block\"><div className=\"placeholder ph-line\"></div></div>\n                <div className=\"col-md-2 col-12\"><div className=\"placeholder ph-line\"></div></div>\n                <div className=\"col-md-3 col-12\"><div className=\"placeholder ph-line\"></div></div>\n            </div>\n            ))\n            }\n        </div>\n    );\n}\n\n\nexport function SkeletonForm(props) {\n    let fields = [];\n\n    for (let i = 0; i < props.fields; i++) {\n        fields.push(\n            <div className=\"placeholder-field\" key={i}>\n                <div className=\"placeholder-label placeholder\"></div>\n                <SkeletonInput />\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"skeleton-form\">\n            <div className=\"row\">\n                <div className=\"col-md-5\">{fields}</div>\n                <div className=\"col-12\">\n                    <div className=\"placeholder-buttons\">\n                        <SkeletonButton />\n                        <SkeletonButton />\n                        <SkeletonButtonRight />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport Icon from './icons.js';\n\n\n\nfunction _Pagination(props) {\n    let total_count = props.total_count;\n    let per_page = props.per_page;\n    \n    //let offset = props.offset;\n    //let currentPage = Math.ceil(offset / per_page) + 1;\n    let currentPage = props.currentPage;\n\n    let total_pages = Math.ceil(total_count / per_page);\n\n    if (currentPage > total_pages || currentPage < 1)\n        currentPage = 1;\n\n    let queryString = new URLSearchParams(props.location.search);\n    //queryString.delete('page');\n    //queryString = queryString.toString();\n\n    let prevArrow;\n    if (currentPage === 1) \n        prevArrow = <span><Icon name=\"chevron-left\" /></span>;\n    else {\n        queryString.set('page', currentPage - 1);\n        prevArrow = <Link to={{search: queryString.toString()}} onClick={props.onPageClick}><Icon name=\"chevron-left\" /></Link>;\n    }\n\n    let nextArrow;\n    if (currentPage === total_pages || total_pages === 0) \n        nextArrow = <span><Icon name=\"chevron-right\" /></span>;\n    else {\n        queryString.set('page', currentPage + 1);\n        nextArrow = <Link to={{search: queryString.toString()}} onClick={props.onPageClick}><Icon name=\"chevron-right\" /></Link>;\n    }\n\n    let pages = []\n\n    if (total_pages < 8) {\n        for (let i = 1; i <= total_pages; i++) {\n            if (i === currentPage)\n                pages.push(<span className=\"active\" key={i}>{i}</span>);\n            else {\n                queryString.set('page', i)\n                pages.push(<Link to={{search: queryString.toString()}} key={i} onClick={props.onPageClick}>{i}</Link>);\n            }\n        }\n    } else {\n        let _pages = new Set();\n        \n        _pages.add(1);\n\n        if (currentPage === 1) {\n            _pages.add(2);\n            _pages.add(3);\n        }\n        else if (currentPage === total_pages) {\n            _pages.add(total_pages - 2);\n            _pages.add(total_pages - 1);\n        }\n        else {\n            _pages.add(currentPage - 1);\n            _pages.add(currentPage);\n            _pages.add(currentPage + 1);\n        }\n\n        _pages.add(total_pages);\n\n        for (let i of _pages) {\n            if (i !== 1) {\n                if (!_pages.has(i - 1))\n                    pages.push(<span key={i-1}>...</span>);\n            }\n\n            if (i === currentPage)\n                pages.push(<span className=\"active\" key={i}>{i}</span>);\n            else {\n                queryString.set('page', i);\n                pages.push(<Link to={{search: queryString.toString()}} key={i} onClick={props.onPageClick}>{i}</Link>);\n            }\n        }\n    }\n\n    return (\n        <div className=\"pagination\">\n            {prevArrow}\n            {pages}\n            {nextArrow}\n            <span>(Total: {total_count})</span>\n        </div>\n    );\n} \n\n\nconst Pagination = withRouter(_Pagination);\n\nexport default Pagination;","import Loader from './loaders.js';\n\n\nexport function Splash(props) {\n    return (\n        <div className=\"splash\">\n            <img src={process.env.PUBLIC_URL + \"/static/django_candy/img/logo-splash.png\"} alt={window.candy.site_name} />\n            \n            <Loader />\n        </div>\n    );\n}\n\n\nexport function ErrorSplash(props) {\n    return (\n        <div className=\"splash text-center\">\n            <img src={process.env.PUBLIC_URL + \"/static/django_candy/img/error-splash.png\"} alt=\"Error\" />\n            <h2>{props.msg || 'Something went wrong. Try again'}</h2>\n            {\n                props.retryCallback ? \n                <p>\n                    <button className=\"btn link\" onClick={props.retryCallback}>\n                        {props.retryBtnText || 'Try Again'}\n                    </button>\n                </p> \n                : \n                null\n            }\n        </div>\n    );\n}","import {PageHeader} from '../components';\n\nexport function Page404(props) {\n    return (\n        <div className=\"main\">\n            <PageHeader hideSubnav={true} title=\"404 Page not found\" location={props.location} />\n            <div className=\"content\">\n                <p className=\"lead\">\n                    The requested page doesn't exist. \n                </p>\n            </div>\n        </div>\n    );\n}","import React, {Component} from 'react';\nimport {Route, Switch, Link} from 'react-router-dom';\nimport API from '../api.js';\nimport URLS from '../urlconf.js';\nimport {joinPaths, capitalize} from '../utils.js';\nimport {PageHeader, TableToolbar, Table, Pagination, toast, SkeletonTable} from '../components';\nimport {Page404} from './errors.js';\n\n\nexport default class ModelPageGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            refresh: false\n        }\n\n        this.list_url = joinPaths(this.props.match.url, '/');\n        this.add_url = joinPaths(this.props.match.url, '/add/');\n        this.edit_url = joinPaths(this.props.match.url, '/:id/edit/');\n    }\n\n    componentDidMount() {\n        // make api request to fetch mdoel's metadata\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // the component won't remount\n        // if the model parameter changed in url\n        // so need to refetch the new model's metadata\n    }\n\n    refreshPage = () => {\n        this.setState({refresh: !this.state.refresh});\n    }\n\n    render() {\n        let permissions = {can_add: true}\n\n        let app_label = this.props.match.params.app_label;\n        let model_param = this.props.match.params.model_name;\n\n        if (!this.props.initData.apps.hasOwnProperty(app_label))\n            return <Page404 location={this.props.location} />\n\n        const app = this.props.initData.apps[app_label];\n\n        if (!app.models.hasOwnProperty(model_param))\n            return <Page404 location={this.props.location} />;\n\n        const model = app.models[model_param];\n\n        return (\n            <div className=\"main\">\n                <Route render={(props) => <PageHeader {...props} \n                        title={capitalize(model.verbose_name_plural)}\n                        list_url={URLS.model_list}\n                        edit_url={URLS.model_edit}\n                        add_url={URLS.model_add}\n                        onRefresh={this.refreshPage}\n                        permissions={permissions}\n                        />\n                    } \n                />\n                <Switch>\n                    <Route \n                        path={URLS.model_list}\n                        exact\n                        render={(props) => <ListPage {...props} \n                            model={model} \n                            key={model.endpoint} \n                            refresh={this.state.refresh}\n                            />\n                        } \n                    />\n                    <Route \n                        path={URLS.model_add} \n                        exact \n                        render={(props) => <AddPage {...props} \n                            model={model} \n                            refresh={this.state.refresh}\n                            />\n                        } \n                    />\n                    <Route \n                        path={URLS.model_edit} \n                        exact \n                        render={(props) => <EditPage {...props} \n                            model={model} \n                            refresh={this.state.refresh}\n                            />\n                        } \n                    />\n                    <Route>\n                        <p>404 Page Not Found.</p>\n                        <p>This page doesn't exist.</p>\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport class ListPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: null,\n            loading: true,\n            hasError: false,\n            errorType: null,\n            list_limit: 20 // :TODO: get this value from backend\n        };\n\n        this.api_endpoint = this.props.model.endpoint;\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n        this.queryApi();\n        toast.showLoader();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.location.search !== prevProps.location.search\n            || this.props.refresh !== prevProps.refresh) {\n            this.setState({loading: true});\n            //:TODO: cancel previous api request before sending new one\n            this.queryApi();\n        }\n\n        if (this.state.loading !== prevState.loading) {\n            if (this.state.loading)\n                toast.showLoader();\n            else\n                toast.hideLoader();\n        }\n    }\n\n    componentWillUnmount() {\n        toast.hideLoader();\n    }\n\n    \n    queryApi = () => {\n        //if (!this.props.permissions.can_view) \n        //    return this.setState({loading: false});\n\n        let queryString = new URLSearchParams(this.props.location.search);\n        let page = Number(queryString.get('page')) || 1;\n\n        let limit = this.state.list_limit;\n        let offset = (page - 1) * limit;\n\n        queryString.delete('page');\n        queryString.set('limit', limit);\n        queryString.set('offset', offset);\n\n        let api = new API(this.api_endpoint);\n\n        api.getList(queryString.toString())\n        .then((response) => {\n            this.setState({loading: false, data: response.data});\n            window.scrollTo(0, 0);\n        })\n        .catch((error) => {\n            let errorType = 'CONNECTION_ERROR';\n\n            if (error.response)\n                errorType = error.response.status;\n            else\n                error.response = {};\n\n            if (error.response.status === 401) {\n                this.props.handleLogout(true);\n            } else {\n                this.setState({loading: false, hasError: true, errorType: errorType});\n                toast.showConnectionError(this.retryApi);\n            }\n\n        });\n    }\n\n    retryApi = () => {\n        this.setState({loading: true, hasError: false});\n        this.queryApi();\n    }\n\n    getCurrentPage = () => {\n        let params = new URLSearchParams(this.props.location.search);\n        let page = Number(params.get('page')) || 1;\n        return page;\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <div className=\"content\"><SkeletonTable /></div>;\n        }\n\n        return (\n            <div className=\"content\">\n                <div className=\"table-container\">\n                    <TableToolbar filters={this.props.model.list_filters} />\n                    <div className=\"table-outer\">\n                        <Table\n                            data={this.state.data.results}\n                            tableCols={this.props.model.list_display}\n                            tableTh={this.props.model.list_display_labels}\n                            tableColCls={[]}\n                            tableThWidths={[]}\n                            tableRowURI={':id/edit/'}\n                            tableRowActions={null}\n                            tableCheckable={true}\n                            tableCheckCallback={() => null}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <Pagination \n                            total_count={this.state.data.count}\n                            per_page={this.state.list_limit}\n                            currentPage={this.getCurrentPage()}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport function AddPage(props) {\n    return (\n        <h2>:TODO:</h2>\n    );\n}\n\n\nexport function EditPage(props) {\n    return (\n        <h2>:TODO:</h2>\n    );\n}\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {capitalize, ReverseLink} from '../utils.js';\nimport {PageHeader} from '../components';\nimport ModelPageGroup from './model.js';\nimport {Page404} from './errors.js';\nimport URLS from '../urlconf.js';\n\n\nexport default class AppPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let app_label = this.props.match.params.app_label;\n\n        if (!this.props.initData.apps.hasOwnProperty(app_label)) {\n            return <Page404 location={this.props.location} />;\n        }\n\n        let app = this.props.initData.apps[app_label];\n\n        return (\n            <div className=\"main\">\n                <PageHeader hideSubnav={true} title={app.verbose_name} location={this.props.location} />\n\n                <div className=\"content\">\n                    {Object.keys(app.models).map((key) => {\n                        let model = app.models[key];\n\n                        return (\n                            <div key={app_label + '.' + model.name}>\n                                <ReverseLink \n                                    to={URLS.model_list} \n                                    args={{\n                                        base_url: this.props.match.params.base_url, \n                                        app_label: app_label, \n                                        'model_name': model.name\n                                    }}\n                                >\n                                    {capitalize(model.verbose_name_plural)}\n                                </ReverseLink>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport {PageHeader} from '../components';\n\nexport default function HomePage(props) {\n    return (\n        <div className=\"main\">\n            <PageHeader \n                title=\"Home\" \n                hideSubnav={true}\n                location={props.location}\n            />\n        <div className=\"content\">\n        </div>\n        </div>\n    );\n}","import React, {Component} from 'react';\nimport {FormInput, Button} from '../components';\nimport API from '../api.js';\n\n\n\nexport default class LoginPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            errorUsername: '',\n            errorPassword: '',\n            errorGeneral: '',\n            isSubmitting: false\n        };\n\n        this.year = new Date().getFullYear();\n    }\n\n    handleUsernameChange = (e) => {\n        this.setState({\n            username: e.target.value,\n            errorUsername: ''\n        });\n    }\n\n    handlePasswordChange = (e) => {\n        this.setState({\n            password: e.target.value,\n            errorPassword: ''\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        let username = this.state.username;\n        let password = this.state.password;\n\n        if (!username || !password) {\n            if (!username)\n                this.setState({errorUsername: 'Username is required'});\n\n            if (!password)\n                this.setState({errorPassword: 'Password is required'});\n\n            return;\n        }\n\n        this.setState({isSubmitting: true, errorGeneral: ''});\n\n        let api = new API('login');\n\n        api.post(api.endpoint, {username: username, password: password})\n        .then((response) => {\n            console.log(response.data);\n            this.props.onLogin(response.data);\n        })\n        .catch((error) => {\n            let errorMsg = 'Something went wrong. Please check your internet connection';\n\n            if (error.response) {\n\n                if (error.response.status === 401) {\n                    errorMsg = 'Unauthorized';\n                } else { \n                    errorMsg = 'Wrong Username or Password';\n                }\n            }\n\n            this.setState({isSubmitting: false, errorGeneral: errorMsg});\n        });\n    }\n\n    componentDidMount() {\n        document.documentElement.classList.add('full-height');\n    }\n\n    componentWillUnmount() {\n        document.documentElement.classList.remove('full-height');\n    }\n\n\n    render() {\n        return (\n            <>\n            <img src={process.env.PUBLIC_URL + \"/static/django_candy/img/logo-splash.png\"} alt={window.candy.site_name} className=\"form-signin-logo\" />\n            <div className=\"form-signin\">\n                <h2 className=\"text-center\">Login</h2>\n                {this.state.errorGeneral ? <div className=\"alert error\">{this.state.errorGeneral}</div> : null}\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput \n                        type=\"text\"\n                        name=\"username\"\n                        placeholder=\"Username\"\n                        value={this.state.username}\n                        onChange={this.handleUsernameChange}\n                        label=\"Username\"\n                        error={this.state.errorUsername}\n                        autoCapitalize=\"off\"\n                    />\n                    <FormInput \n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        value={this.state.password}\n                        onChange={this.handlePasswordChange}\n                        label=\"Password\"\n                        error={this.state.errorPassword}\n                    />\n                    \n                    <Button type=\"submit\" className=\"primary\"\n                        loading={this.state.isSubmitting}\n                    >\n                        {this.state.isSubmitting ? 'Logging in...' : 'Login'}\n                    </Button>\n\n                </form>\n            </div>\n\n            <p className=\"form-signin-bottom\">&copy; {this.year} Candy</p>\n            </>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {Route, Switch, BrowserRouter, withRouter, Redirect} from 'react-router-dom';\nimport API from './api.js';\nimport URLS from './urlconf.js';\nimport {HomePage, AppPage, ModelPageGroup, LoginPage} from './pages';\nimport {Nav, ToastContainer, toast, Loader, Splash, ErrorSplash} from './components';\nimport './App.scss';\n\n\nclass _App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.defaultInitData = {user: {authenticated: false}};\n\n        this.state = {\n            loading: true,\n            initData: this.defaultInitData,\n            errorMsg: null,\n            user: null\n        }\n\n\n        if (!window.hasOwnProperty('candy'))\n            window.candy = {\n                site_name: 'Candy',\n                base_admin_url: '/candy/',\n            };\n\n        this.base_admin_url = window.candy.base_admin_url;\n        this.login_url = this.base_admin_url + 'login/';\n    }\n\n    componentDidMount() {\n        if (this.props.location.pathname === '/') {\n            this.props.history.replace(this.base_admin_url);\n        }\n\n        this.getInitData();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.initData.user.authenticated && this.props.location.pathname === this.login_url) {\n            this.redirectToNext();\n            return;\n        }\n    }\n\n\n    getInitData = () => {\n        let api = new API('init');\n\n        api.getList()\n        .then((response) => {\n            // if user not logged in, redirect to login page\n            if (!response.data.user.authenticated) {\n                this.redirectToLogin();\n\n                this.setState({\n                    loading: false,\n                    errorMsg: null\n                });\n\n            } else {\n                this.setState({\n                    loading: false,\n                    initData: response.data,\n                    errorMsg: null\n                });\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n\n            let errorType = 'CONNECTION_ERROR';\n\n            if (error.response)\n                errorType = error.response.status;\n\n            // if 401 status code; that means the token has expired or user not logged in\n            // need to redirect user to login page\n            if (errorType === 401) {\n                this.redirectToLogin();\n            } else if (errorType === 'CONNECTION_ERROR') {\n                this.setState({loading: false, errorMsg: \"Check your internet connection\"})\n            } else {\n                this.setState({loading: false, errorMsg: \"Something went wrong\"})\n\n            }\n        });\n    }\n\n    redirectToNext = () => {\n        let next = new URLSearchParams(this.props.location.search).get('next') || '/';\n\n        if (next === '/')\n            next = this.base_admin_url;\n\n        this.props.history.push(next);\n    }\n\n    redirectToLogin = () => {\n        let next = this.props.location.search;\n\n        if (this.props.location.pathname.indexOf('login') === -1)\n            next = '?next=' + this.props.location.pathname;\n\n        this.props.history.push(this.login_url + next);\n    }\n\n    onLogin = (data) => {\n        this.setState({loading: true});\n        this.getInitData();\n    }\n\n    handleLogout = () => {\n        // Logs user out\n        // :TODO: Block the page while the request is processing\n        let api = new API('logout');\n\n        api.post(api.endpoint)\n        .then((response) => {\n            this.onLogout(false);\n        })\n        .catch((error) => {\n            if (!error.response)\n                error.response = {};\n\n            if (error.response.status === 401) {\n                this.onLogout(false);\n            } else {\n                toast.error(\"Something went wrong.\");\n            }\n        });\n    }\n\n    onLogout = (preserveNext) => {\n        // Do stuff after logging out\n        this.setState({initData: this.defaultInitData}, () => {\n            if (preserveNext) {\n                this.redirectToLogin();\n            } else {\n                this.props.history.push(this.login_url);\n            }\n        });\n    }\n\n    retryApi = () => {\n        this.setState({loading: true});\n        this.getInitData();\n    }\n\n    render() {\n        if (this.state.loading)\n            return (<Splash />);\n\n        if (this.state.errorMsg)\n            return <ErrorSplash msg={this.state.errorMsg} retryCallback={this.retryApi} />;\n\n        if (!this.props.location.pathname.startsWith(this.base_admin_url))\n            return <ErrorSplash msg=\"404 Page not found\" />;\n\n        if (!this.state.initData.user.authenticated) {\n            return (<>\n                <LoginPage onLogin={this.onLogin} instance={this.state.instance} />\n            </>);\n        }\n\n        return (\n            <div className=\"container-fluid\">\n                <ToastContainer />\n                <Nav \n                    sideMenu={this.state.initData.side_menu} \n                    topMenu={this.state.initData.top_menu} \n                    location={this.props.location}\n                    match={this.props.match}\n                    history={this.props.history}\n                    user={this.state.initData.user}\n                    handleLogout={this.handleLogout}\n                />\n                <div className=\"row\">\n                    <div className=\"col-12 px-0\">\n                        <Switch>\n                            <Route path={URLS.home} exact \n                                render={\n                                    (props) => <HomePage {...props} />\n                                } \n                            /> \n                            <Route path={URLS.app_index} exact\n                                render={\n                                    (props) => <AppPage {...props} initData={this.state.initData} />\n                                }\n                            />\n                            <Route path={URLS.model_list}\n                                render={\n                                    (props) => <ModelPageGroup {...props} initData={this.state.initData} />\n                                }\n                            />\n                            <Route\n                                render={() => (\n                                    <div className=\"main\" style={{marginTop: '2rem'}}>\n                                        <ErrorSplash \n                                            msg=\"404: Page Not Found\" \n                                            retryCallback={this.redirectToNext} \n                                            retryBtnText=\"Go To Home\" \n                                        />\n                                    </div>\n                                    )\n                                }\n                            />\n                        </Switch>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst App = withRouter(_App);\n\n\nexport default function AppExport({props}) {\n    return (\n        <BrowserRouter>\n            <Route path=\"/:base_url?\"\n                render={() => <App {...props} />}\n            />\n\n            <div className=\"footer\">\n                version {process.env.REACT_APP_VERSION}\n            </div>\n        </BrowserRouter>\n    );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}